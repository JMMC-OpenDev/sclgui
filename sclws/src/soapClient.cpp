/* soapClient.cpp
   Generated by gSOAP 2.7.11 from ../include/sclwsWS.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.11 2019-04-11 15:34:55 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetCalOpenSession(struct soap *soap, const char *soap_endpoint, const char *soap_action, char **_param_1)
{	struct ns__GetCalOpenSession soap_tmp_ns__GetCalOpenSession;
	struct ns__GetCalOpenSessionResponse *soap_tmp_ns__GetCalOpenSessionResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://jmmc.fr:8079";
	soap->encodingStyle = NULL;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__GetCalOpenSession(soap, &soap_tmp_ns__GetCalOpenSession);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetCalOpenSession(soap, &soap_tmp_ns__GetCalOpenSession, "ns:GetCalOpenSession", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetCalOpenSession(soap, &soap_tmp_ns__GetCalOpenSession, "ns:GetCalOpenSession", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!_param_1)
		return soap_closesock(soap);
	*_param_1 = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__GetCalOpenSessionResponse = soap_get_ns__GetCalOpenSessionResponse(soap, NULL, "ns:GetCalOpenSessionResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (_param_1 && soap_tmp_ns__GetCalOpenSessionResponse->_param_1)
		*_param_1 = *soap_tmp_ns__GetCalOpenSessionResponse->_param_1;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetCalSearchCal(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_param_2, char *_param_3, char **_param_4)
{	struct ns__GetCalSearchCal soap_tmp_ns__GetCalSearchCal;
	struct ns__GetCalSearchCalResponse *soap_tmp_ns__GetCalSearchCalResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://jmmc.fr:8079";
	soap->encodingStyle = NULL;
	soap_tmp_ns__GetCalSearchCal._param_2 = _param_2;
	soap_tmp_ns__GetCalSearchCal._param_3 = _param_3;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__GetCalSearchCal(soap, &soap_tmp_ns__GetCalSearchCal);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetCalSearchCal(soap, &soap_tmp_ns__GetCalSearchCal, "ns:GetCalSearchCal", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetCalSearchCal(soap, &soap_tmp_ns__GetCalSearchCal, "ns:GetCalSearchCal", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!_param_4)
		return soap_closesock(soap);
	*_param_4 = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__GetCalSearchCalResponse = soap_get_ns__GetCalSearchCalResponse(soap, NULL, "ns:GetCalSearchCalResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (_param_4 && soap_tmp_ns__GetCalSearchCalResponse->_param_4)
		*_param_4 = *soap_tmp_ns__GetCalSearchCalResponse->_param_4;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetCalQueryStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_param_5, char **_param_6)
{	struct ns__GetCalQueryStatus soap_tmp_ns__GetCalQueryStatus;
	struct ns__GetCalQueryStatusResponse *soap_tmp_ns__GetCalQueryStatusResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://jmmc.fr:8079";
	soap->encodingStyle = NULL;
	soap_tmp_ns__GetCalQueryStatus._param_5 = _param_5;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__GetCalQueryStatus(soap, &soap_tmp_ns__GetCalQueryStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetCalQueryStatus(soap, &soap_tmp_ns__GetCalQueryStatus, "ns:GetCalQueryStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetCalQueryStatus(soap, &soap_tmp_ns__GetCalQueryStatus, "ns:GetCalQueryStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!_param_6)
		return soap_closesock(soap);
	*_param_6 = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__GetCalQueryStatusResponse = soap_get_ns__GetCalQueryStatusResponse(soap, NULL, "ns:GetCalQueryStatusResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (_param_6 && soap_tmp_ns__GetCalQueryStatusResponse->_param_6)
		*_param_6 = *soap_tmp_ns__GetCalQueryStatusResponse->_param_6;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetCalCancelSession(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *_param_7, bool *_param_8)
{	struct ns__GetCalCancelSession soap_tmp_ns__GetCalCancelSession;
	struct ns__GetCalCancelSessionResponse *soap_tmp_ns__GetCalCancelSessionResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://jmmc.fr:8079";
	soap->encodingStyle = NULL;
	soap_tmp_ns__GetCalCancelSession._param_7 = _param_7;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__GetCalCancelSession(soap, &soap_tmp_ns__GetCalCancelSession);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetCalCancelSession(soap, &soap_tmp_ns__GetCalCancelSession, "ns:GetCalCancelSession", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetCalCancelSession(soap, &soap_tmp_ns__GetCalCancelSession, "ns:GetCalCancelSession", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!_param_8)
		return soap_closesock(soap);
	soap_default_bool(soap, _param_8);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__GetCalCancelSessionResponse = soap_get_ns__GetCalCancelSessionResponse(soap, NULL, "ns:GetCalCancelSessionResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (_param_8 && soap_tmp_ns__GetCalCancelSessionResponse->_param_8)
		*_param_8 = *soap_tmp_ns__GetCalCancelSessionResponse->_param_8;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetStar(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *query, char **output)
{	struct ns__GetStar soap_tmp_ns__GetStar;
	struct ns__GetStarResponse *soap_tmp_ns__GetStarResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://jmmc.fr:8079";
	soap->encodingStyle = NULL;
	soap_tmp_ns__GetStar.query = query;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__GetStar(soap, &soap_tmp_ns__GetStar);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetStar(soap, &soap_tmp_ns__GetStar, "ns:GetStar", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetStar(soap, &soap_tmp_ns__GetStar, "ns:GetStar", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!output)
		return soap_closesock(soap);
	*output = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__GetStarResponse = soap_get_ns__GetStarResponse(soap, NULL, "ns:GetStarResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (output && soap_tmp_ns__GetStarResponse->output)
		*output = *soap_tmp_ns__GetStarResponse->output;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__GetServerStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, char **status)
{	struct ns__GetServerStatus soap_tmp_ns__GetServerStatus;
	struct ns__GetServerStatusResponse *soap_tmp_ns__GetServerStatusResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://jmmc.fr:8079";
	soap->encodingStyle = NULL;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns__GetServerStatus(soap, &soap_tmp_ns__GetServerStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetServerStatus(soap, &soap_tmp_ns__GetServerStatus, "ns:GetServerStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetServerStatus(soap, &soap_tmp_ns__GetServerStatus, "ns:GetServerStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!status)
		return soap_closesock(soap);
	*status = NULL;
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns__GetServerStatusResponse = soap_get_ns__GetServerStatusResponse(soap, NULL, "ns:GetServerStatusResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (status && soap_tmp_ns__GetServerStatusResponse->status)
		*status = *soap_tmp_ns__GetServerStatusResponse->status;
	return soap_closesock(soap);
}

/* End of soapClient.cpp */

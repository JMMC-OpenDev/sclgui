/* soapServer.cpp
   Generated by gSOAP 2.7.11 from ../include/sclwsWS.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapServer.cpp ver 2.7.11 2016-02-18 17:36:26 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap *soap)
{
#ifndef WITH_FASTCGI
	unsigned int k = soap->max_keep_alive;
#endif

	do
	{
#ifdef WITH_FASTCGI
		if (FCGI_Accept() < 0)
		{
			soap->error = SOAP_EOF;
			return soap_send_fault(soap);
		}
#endif

		soap_begin(soap);

#ifndef WITH_FASTCGI
		if (soap->max_keep_alive > 0 && !--k)
			soap->keep_alive = 0;
#endif

		if (soap_begin_recv(soap))
		{	if (soap->error < SOAP_STOP)
			{
#ifdef WITH_FASTCGI
				soap_send_fault(soap);
#else 
				return soap_send_fault(soap);
#endif
			}
			soap_closesock(soap);

			continue;
		}

		if (soap_envelope_begin_in(soap)
		 || soap_recv_header(soap)
		 || soap_body_begin_in(soap)
		 || soap_serve_request(soap)
		 || (soap->fserveloop && soap->fserveloop(soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(soap);
#else
			return soap_send_fault(soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(soap);
		soap_end(soap);
	} while (1);
#else
	} while (soap->keep_alive);
#endif
	return SOAP_OK;
}

#ifndef WITH_NOSERVEREQUEST
SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap *soap)
{
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetCalOpenSession"))
		return soap_serve_ns__GetCalOpenSession(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetCalSearchCal"))
		return soap_serve_ns__GetCalSearchCal(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetCalQueryStatus"))
		return soap_serve_ns__GetCalQueryStatus(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetCalCancelSession"))
		return soap_serve_ns__GetCalCancelSession(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetStar"))
		return soap_serve_ns__GetStar(soap);
	if (!soap_match_tag(soap, soap->tag, "ns:GetServerStatus"))
		return soap_serve_ns__GetServerStatus(soap);
	return soap->error = SOAP_NO_METHOD;
}
#endif

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetCalOpenSession(struct soap *soap)
{	struct ns__GetCalOpenSession soap_tmp_ns__GetCalOpenSession;
	struct ns__GetCalOpenSessionResponse soap_tmp_ns__GetCalOpenSessionResponse;
	char * soap_tmp_string;
	soap_default_ns__GetCalOpenSessionResponse(soap, &soap_tmp_ns__GetCalOpenSessionResponse);
	soap_tmp_string = NULL;
	soap_tmp_ns__GetCalOpenSessionResponse._param_1 = &soap_tmp_string;
	soap_default_ns__GetCalOpenSession(soap, &soap_tmp_ns__GetCalOpenSession);
	soap->encodingStyle = NULL;
	if (!soap_get_ns__GetCalOpenSession(soap, &soap_tmp_ns__GetCalOpenSession, "ns:GetCalOpenSession", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetCalOpenSession(soap, &soap_tmp_string);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__GetCalOpenSessionResponse(soap, &soap_tmp_ns__GetCalOpenSessionResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetCalOpenSessionResponse(soap, &soap_tmp_ns__GetCalOpenSessionResponse, "ns:GetCalOpenSessionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetCalOpenSessionResponse(soap, &soap_tmp_ns__GetCalOpenSessionResponse, "ns:GetCalOpenSessionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetCalSearchCal(struct soap *soap)
{	struct ns__GetCalSearchCal soap_tmp_ns__GetCalSearchCal;
	struct ns__GetCalSearchCalResponse soap_tmp_ns__GetCalSearchCalResponse;
	char * soap_tmp_string;
	soap_default_ns__GetCalSearchCalResponse(soap, &soap_tmp_ns__GetCalSearchCalResponse);
	soap_tmp_string = NULL;
	soap_tmp_ns__GetCalSearchCalResponse._param_4 = &soap_tmp_string;
	soap_default_ns__GetCalSearchCal(soap, &soap_tmp_ns__GetCalSearchCal);
	soap->encodingStyle = NULL;
	if (!soap_get_ns__GetCalSearchCal(soap, &soap_tmp_ns__GetCalSearchCal, "ns:GetCalSearchCal", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetCalSearchCal(soap, soap_tmp_ns__GetCalSearchCal._param_2, soap_tmp_ns__GetCalSearchCal._param_3, &soap_tmp_string);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__GetCalSearchCalResponse(soap, &soap_tmp_ns__GetCalSearchCalResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetCalSearchCalResponse(soap, &soap_tmp_ns__GetCalSearchCalResponse, "ns:GetCalSearchCalResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetCalSearchCalResponse(soap, &soap_tmp_ns__GetCalSearchCalResponse, "ns:GetCalSearchCalResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetCalQueryStatus(struct soap *soap)
{	struct ns__GetCalQueryStatus soap_tmp_ns__GetCalQueryStatus;
	struct ns__GetCalQueryStatusResponse soap_tmp_ns__GetCalQueryStatusResponse;
	char * soap_tmp_string;
	soap_default_ns__GetCalQueryStatusResponse(soap, &soap_tmp_ns__GetCalQueryStatusResponse);
	soap_tmp_string = NULL;
	soap_tmp_ns__GetCalQueryStatusResponse._param_6 = &soap_tmp_string;
	soap_default_ns__GetCalQueryStatus(soap, &soap_tmp_ns__GetCalQueryStatus);
	soap->encodingStyle = NULL;
	if (!soap_get_ns__GetCalQueryStatus(soap, &soap_tmp_ns__GetCalQueryStatus, "ns:GetCalQueryStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetCalQueryStatus(soap, soap_tmp_ns__GetCalQueryStatus._param_5, &soap_tmp_string);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__GetCalQueryStatusResponse(soap, &soap_tmp_ns__GetCalQueryStatusResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetCalQueryStatusResponse(soap, &soap_tmp_ns__GetCalQueryStatusResponse, "ns:GetCalQueryStatusResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetCalQueryStatusResponse(soap, &soap_tmp_ns__GetCalQueryStatusResponse, "ns:GetCalQueryStatusResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetCalCancelSession(struct soap *soap)
{	struct ns__GetCalCancelSession soap_tmp_ns__GetCalCancelSession;
	struct ns__GetCalCancelSessionResponse soap_tmp_ns__GetCalCancelSessionResponse;
	bool soap_tmp_bool;
	soap_default_ns__GetCalCancelSessionResponse(soap, &soap_tmp_ns__GetCalCancelSessionResponse);
	soap_default_bool(soap, &soap_tmp_bool);
	soap_tmp_ns__GetCalCancelSessionResponse._param_8 = &soap_tmp_bool;
	soap_default_ns__GetCalCancelSession(soap, &soap_tmp_ns__GetCalCancelSession);
	soap->encodingStyle = NULL;
	if (!soap_get_ns__GetCalCancelSession(soap, &soap_tmp_ns__GetCalCancelSession, "ns:GetCalCancelSession", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetCalCancelSession(soap, soap_tmp_ns__GetCalCancelSession._param_7, &soap_tmp_bool);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__GetCalCancelSessionResponse(soap, &soap_tmp_ns__GetCalCancelSessionResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetCalCancelSessionResponse(soap, &soap_tmp_ns__GetCalCancelSessionResponse, "ns:GetCalCancelSessionResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetCalCancelSessionResponse(soap, &soap_tmp_ns__GetCalCancelSessionResponse, "ns:GetCalCancelSessionResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetStar(struct soap *soap)
{	struct ns__GetStar soap_tmp_ns__GetStar;
	struct ns__GetStarResponse soap_tmp_ns__GetStarResponse;
	char * soap_tmp_string;
	soap_default_ns__GetStarResponse(soap, &soap_tmp_ns__GetStarResponse);
	soap_tmp_string = NULL;
	soap_tmp_ns__GetStarResponse.voTable = &soap_tmp_string;
	soap_default_ns__GetStar(soap, &soap_tmp_ns__GetStar);
	soap->encodingStyle = NULL;
	if (!soap_get_ns__GetStar(soap, &soap_tmp_ns__GetStar, "ns:GetStar", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetStar(soap, soap_tmp_ns__GetStar.query, &soap_tmp_string);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__GetStarResponse(soap, &soap_tmp_ns__GetStarResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetStarResponse(soap, &soap_tmp_ns__GetStarResponse, "ns:GetStarResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetStarResponse(soap, &soap_tmp_ns__GetStarResponse, "ns:GetStarResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__GetServerStatus(struct soap *soap)
{	struct ns__GetServerStatus soap_tmp_ns__GetServerStatus;
	struct ns__GetServerStatusResponse soap_tmp_ns__GetServerStatusResponse;
	char * soap_tmp_string;
	soap_default_ns__GetServerStatusResponse(soap, &soap_tmp_ns__GetServerStatusResponse);
	soap_tmp_string = NULL;
	soap_tmp_ns__GetServerStatusResponse.status = &soap_tmp_string;
	soap_default_ns__GetServerStatus(soap, &soap_tmp_ns__GetServerStatus);
	soap->encodingStyle = NULL;
	if (!soap_get_ns__GetServerStatus(soap, &soap_tmp_ns__GetServerStatus, "ns:GetServerStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns__GetServerStatus(soap, &soap_tmp_string);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns__GetServerStatusResponse(soap, &soap_tmp_ns__GetServerStatusResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns__GetServerStatusResponse(soap, &soap_tmp_ns__GetServerStatusResponse, "ns:GetServerStatusResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns__GetServerStatusResponse(soap, &soap_tmp_ns__GetServerStatusResponse, "ns:GetServerStatusResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

/* End of soapServer.cpp */

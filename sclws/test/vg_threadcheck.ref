==3418== Helgrind, a thread error detector
==3418== Copyright (C) 2007-2009, and GNU GPL'd, by OpenWorks LLP et al.
==3418== Using Valgrind-3.5.0 and LibVEX; rerun with -h for copyright info
==3418== Command: sclwsServer -v 1
==3418== Parent PID: 3415
==3418== 
==3418== Thread #3 was created
==3418==    at 0x8A14F2E: clone (in /lib64/libc-2.5.so)
==3418==    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
==3418==    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
==3418==    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
==3418==    by 0x4034EF: main (sclwsServer.cpp:224)
==3418== 
==3418== Possible data race during read of size 1 at 0x92ba8f0 by thread #3
==3418==    at 0x4C24D4D: strcmp (hg_intercepts.c:2309)
==3418==    by 0x89CD85C: tzset_internal (in /lib64/libc-2.5.so)
==3418==    by 0x89CE17D: __tz_convert (in /lib64/libc-2.5.so)
==3418==    by 0x6EAD203: logGetTimeStamp (log.c:691)
==3418==    by 0x6EAD626: logPrint (log.c:483)
==3418==    by 0x5FEE1D9: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:129)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418== 
==3418== Possible data race during read of size 1 at 0x92ba8f1 by thread #3
==3418==    at 0x4C24D72: strcmp (hg_intercepts.c:2309)
==3418==    by 0x89CD85C: tzset_internal (in /lib64/libc-2.5.so)
==3418==    by 0x89CE17D: __tz_convert (in /lib64/libc-2.5.so)
==3418==    by 0x6EAD203: logGetTimeStamp (log.c:691)
==3418==    by 0x6EAD626: logPrint (log.c:483)
==3418==    by 0x5FEE1D9: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:129)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418== 
==3418== Thread #2 was created
==3418==    at 0x8A14F2E: clone (in /lib64/libc-2.5.so)
==3418==    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
==3418==    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
==3418==    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
==3418==    by 0x4034EF: main (sclwsServer.cpp:224)
==3418== 
==3418== Possible data race during read of size 1 at 0x70ae5a0 by thread #3
==3418==    at 0x6EAD3C1: logData (log.c:612)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous write of size 1 by thread #2
==3418==    at 0x4C24D2C: strcpy (hg_intercepts.c:2286)
==3418==    by 0x6EADB32: logGetHostName (logPrivate.c:83)
==3418==    by 0x6EAD3D3: logData (log.c:615)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==  Location 0x70ae5a0 is 0 bytes inside logRule.logManagerHostName[0],
==3418==  declared at log.c:149, in frame #0 of thread 3
==3418== 
==3418== Possible data race during write of size 4 at 0x70ae700 by thread #3
==3418==    at 0x6EAD443: logData (log.c:633)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous write of size 4 by thread #2
==3418==    at 0x6EAD443: logData (log.c:633)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae700 is 0 bytes inside local var "sock"
==3418==  declared at log.c:576, in frame #0 of thread 3
==3418== 
==3418== Possible data race during write of size 4 at 0x70ae6e0 by thread #2
==3418==    at 0x6EAD4EB: logData (log.c:654)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous read of size 4 by thread #3
==3418==    at 0x6EAD3AA: logData (log.c:607)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae6e0 is 0 bytes inside local var "logSocketIsAlreadyOpen"
==3418==  declared at log.c:173, in frame #0 of thread 2
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae700 by thread #2
==3418==    at 0x6EAD513: logData (log.c:658)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x6EAD443: logData (log.c:633)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae700 is 0 bytes inside local var "sock"
==3418==  declared at log.c:576, in frame #0 of thread 2
==3418== 
==3418== Possible data race during read of size 8 at 0xa8c4fd0 by thread #3
==3418==    at 0xA6BEFEA: _nss_files_gethostbyname_r (in /lib64/libnss_files-2.5.so)
==3418==    by 0x8A2B4A3: gethostbyname_r@@GLIBC_2.2.5 (in /lib64/libc-2.5.so)
==3418==    by 0x8A2ADD2: gethostbyname (in /lib64/libc-2.5.so)
==3418==    by 0x6EAD47C: logData (log.c:641)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae700 by thread #2
==3418==    at 0x6EAD513: logData (log.c:658)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x644F16F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:85)
==3418==    by 0x64508BD: vobsCATALOG_CIO::vobsCATALOG_CIO() (vobsCATALOG_CIO.cpp:44)
==3418==    by 0x6453EB7: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x6EAD443: logData (log.c:633)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae700 is 0 bytes inside local var "sock"
==3418==  declared at log.c:576, in frame #0 of thread 2
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae700 by thread #2
==3418==    at 0x6EAD513: logData (log.c:658)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x644F16F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:85)
==3418==    by 0x6452239: vobsCATALOG_PHOTO::vobsCATALOG_PHOTO() (vobsCATALOG_PHOTO.cpp:43)
==3418==    by 0x6453EC3: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x6EAD443: logData (log.c:633)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae700 is 0 bytes inside local var "sock"
==3418==  declared at log.c:576, in frame #0 of thread 2
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae700 by thread #2
==3418==    at 0x6EAD513: logData (log.c:658)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x644F16F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:85)
==3418==    by 0x644FD05: vobsCATALOG_ASCC::vobsCATALOG_ASCC() (vobsCATALOG_ASCC.cpp:43)
==3418==    by 0x6453ED2: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x6EAD443: logData (log.c:633)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae700 is 0 bytes inside local var "sock"
==3418==  declared at log.c:576, in frame #0 of thread 2
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae700 by thread #2
==3418==    at 0x6EAD513: logData (log.c:658)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x644F16F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:85)
==3418==    by 0x6450F3F: vobsCATALOG_HIC::vobsCATALOG_HIC() (vobsCATALOG_HIC.cpp:41)
==3418==    by 0x6453EEA: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x6EAD443: logData (log.c:633)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae700 is 0 bytes inside local var "sock"
==3418==  declared at log.c:576, in frame #0 of thread 2
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae700 by thread #2
==3418==    at 0x6EAD513: logData (log.c:658)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x644F16F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:85)
==3418==    by 0x6451D85: vobsCATALOG_MASS::vobsCATALOG_MASS() (vobsCATALOG_MASS.cpp:41)
==3418==    by 0x6453EF6: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x6EAD443: logData (log.c:633)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae700 is 0 bytes inside local var "sock"
==3418==  declared at log.c:576, in frame #0 of thread 2
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae700 by thread #2
==3418==    at 0x6EAD513: logData (log.c:658)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x644F16F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:85)
==3418==    by 0x64513E3: vobsCATALOG_LBSI::vobsCATALOG_LBSI() (vobsCATALOG_LBSI.cpp:42)
==3418==    by 0x6453F02: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x6EAD443: logData (log.c:633)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae700 is 0 bytes inside local var "sock"
==3418==  declared at log.c:576, in frame #0 of thread 2
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae700 by thread #2
==3418==    at 0x6EAD513: logData (log.c:658)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x644F16F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:85)
==3418==    by 0x6451857: vobsCATALOG_MERAND::vobsCATALOG_MERAND() (vobsCATALOG_MERAND.cpp:35)
==3418==    by 0x6453F0E: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x6EAD443: logData (log.c:633)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae700 is 0 bytes inside local var "sock"
==3418==  declared at log.c:576, in frame #0 of thread 2
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae700 by thread #2
==3418==    at 0x6EAD513: logData (log.c:658)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x644F16F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:85)
==3418==    by 0x64503BD: vobsCATALOG_CHARM2::vobsCATALOG_CHARM2() (vobsCATALOG_CHARM2.cpp:35)
==3418==    by 0x6453F1A: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x6EAD443: logData (log.c:633)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae700 is 0 bytes inside local var "sock"
==3418==  declared at log.c:576, in frame #0 of thread 2
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae700 by thread #2
==3418==    at 0x6EAD513: logData (log.c:658)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x644F16F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:85)
==3418==    by 0x6450145: vobsCATALOG_BSC::vobsCATALOG_BSC() (vobsCATALOG_BSC.cpp:41)
==3418==    by 0x6453F26: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x6EAD443: logData (log.c:633)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae700 is 0 bytes inside local var "sock"
==3418==  declared at log.c:576, in frame #0 of thread 2
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae700 by thread #2
==3418==    at 0x6EAD513: logData (log.c:658)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x644F16F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:85)
==3418==    by 0x6452439: vobsCATALOG_SBSC::vobsCATALOG_SBSC() (vobsCATALOG_SBSC.cpp:41)
==3418==    by 0x6453F32: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x6EAD443: logData (log.c:633)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae700 is 0 bytes inside local var "sock"
==3418==  declared at log.c:576, in frame #0 of thread 2
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae700 by thread #2
==3418==    at 0x6EAD513: logData (log.c:658)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x644F16F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:85)
==3418==    by 0x6450B07: vobsCATALOG_DENIS::vobsCATALOG_DENIS() (vobsCATALOG_DENIS.cpp:41)
==3418==    by 0x6453F3E: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x6EAD443: logData (log.c:633)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae700 is 0 bytes inside local var "sock"
==3418==  declared at log.c:576, in frame #0 of thread 2
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae700 by thread #2
==3418==    at 0x6EAD513: logData (log.c:658)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x644F16F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:85)
==3418==    by 0x6450D23: vobsCATALOG_DENIS_JK::vobsCATALOG_DENIS_JK() (vobsCATALOG_DENIS_JK.cpp:35)
==3418==    by 0x6453F4A: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x6EAD443: logData (log.c:633)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae700 is 0 bytes inside local var "sock"
==3418==  declared at log.c:576, in frame #0 of thread 2
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae700 by thread #2
==3418==    at 0x6EAD513: logData (log.c:658)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x644F16F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:85)
==3418==    by 0x6452F91: vobsCATALOG_UNSO::vobsCATALOG_UNSO() (vobsCATALOG_UNSO.cpp:34)
==3418==    by 0x6453F62: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x6EAD443: logData (log.c:633)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae700 is 0 bytes inside local var "sock"
==3418==  declared at log.c:576, in frame #0 of thread 2
==3418== 
==3418== Possible data race during write of size 4 at 0x8c96050 by thread #3
==3418==    at 0xA6BE528: internal_getent (in /lib64/libnss_files-2.5.so)
==3418==    by 0xA6BF0AF: _nss_files_gethostbyname_r (in /lib64/libnss_files-2.5.so)
==3418==    by 0x8A2B4A3: gethostbyname_r@@GLIBC_2.2.5 (in /lib64/libc-2.5.so)
==3418==    by 0x8A2ADD2: gethostbyname (in /lib64/libc-2.5.so)
==3418==    by 0x6EAD47C: logData (log.c:641)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  This conflicts with a previous read of size 4 by thread #2
==3418==    at 0x6EAD4D0: logData (log.c:651)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418== 
==3418== Possible data race during write of size 8 at 0x92d6c00 by thread #3
==3418==    at 0xA6BE53D: internal_getent (in /lib64/libnss_files-2.5.so)
==3418==    by 0xA6BF0AF: _nss_files_gethostbyname_r (in /lib64/libnss_files-2.5.so)
==3418==    by 0x8A2B4A3: gethostbyname_r@@GLIBC_2.2.5 (in /lib64/libc-2.5.so)
==3418==    by 0x8A2ADD2: gethostbyname (in /lib64/libc-2.5.so)
==3418==    by 0x6EAD47C: logData (log.c:641)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  This conflicts with a previous read of size 8 by thread #2
==3418==    at 0x6EAD4C1: logData (log.c:650)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418== 
==3418== Possible data race during write of size 4 at 0x8c96054 by thread #3
==3418==    at 0xA6BE549: internal_getent (in /lib64/libnss_files-2.5.so)
==3418==    by 0xA6BF0AF: _nss_files_gethostbyname_r (in /lib64/libnss_files-2.5.so)
==3418==    by 0x8A2B4A3: gethostbyname_r@@GLIBC_2.2.5 (in /lib64/libc-2.5.so)
==3418==    by 0x8A2ADD2: gethostbyname (in /lib64/libc-2.5.so)
==3418==    by 0x6EAD47C: logData (log.c:641)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  This conflicts with a previous read of size 4 by thread #2
==3418==    at 0x6EAD4B9: logData (log.c:650)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418== 
==3418== Possible data race during write of size 8 at 0x8c96058 by thread #3
==3418==    at 0xA6BE558: internal_getent (in /lib64/libnss_files-2.5.so)
==3418==    by 0xA6BF0AF: _nss_files_gethostbyname_r (in /lib64/libnss_files-2.5.so)
==3418==    by 0x8A2B4A3: gethostbyname_r@@GLIBC_2.2.5 (in /lib64/libc-2.5.so)
==3418==    by 0x8A2ADD2: gethostbyname (in /lib64/libc-2.5.so)
==3418==    by 0x6EAD47C: logData (log.c:641)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  This conflicts with a previous read of size 8 by thread #2
==3418==    at 0x6EAD4BD: logData (log.c:650)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418== 
==3418== Possible data race during write of size 2 at 0x70ae6f0 by thread #3
==3418==    at 0x6EAD4A3: logData (log.c:649)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x6EAD4A3: logData (log.c:649)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae6f0 is 0 bytes inside server.sin_family,
==3418==  declared at log.c:577, in frame #0 of thread 3
==3418== 
==3418== Possible data race during write of size 4 at 0x70ae6f4 by thread #3
==3418==    at 0x6EAD4A3: logData (log.c:649)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x6EAD4A3: logData (log.c:649)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae6f4 is 0 bytes inside server.sin_addr.s_addr,
==3418==  declared at log.c:577, in frame #0 of thread 3
==3418== 
==3418== Possible data race during write of size 8 at 0x70ae6f8 by thread #3
==3418==    at 0x6EAD4AE: logData (log.c:649)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x6EAD4AE: logData (log.c:649)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae6f8 is 0 bytes inside server.sin_zero[0],
==3418==  declared at log.c:577, in frame #0 of thread 3
==3418== 
==3418== Possible data race during read of size 4 at 0x5fe33a8 by thread #3
==3418==    at 0x5DE16D8: ??? (in /lib64/libuuid.so.1.2)
==3418==    by 0x5DE2418: uuid_generate (in /lib64/libuuid.so.1.2)
==3418==    by 0x5FEE338: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:157)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous write of size 4 by thread #2
==3418==    at 0x5DE1733: ??? (in /lib64/libuuid.so.1.2)
==3418==    by 0x5DE2418: uuid_generate (in /lib64/libuuid.so.1.2)
==3418==    by 0x5FEE338: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:157)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418== 
==3418== Possible data race during read of size 8 at 0x850a7f0 by thread #3
==3418==    at 0x82FB52F: evhHANDLER::evhHANDLER() (evhHANDLER.cpp:47)
==3418==    by 0x8300AEB: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:44)
==3418==    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x82FB535: evhHANDLER::evhHANDLER() (evhHANDLER.cpp:49)
==3418==    by 0x8300AEB: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:44)
==3418==    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae6e0 by thread #3
==3418==    at 0x6EAD3AA: logData (log.c:607)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x644F16F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:85)
==3418==    by 0x645338F: vobsCATALOG_WDS::vobsCATALOG_WDS() (vobsCATALOG_WDS.cpp:34)
==3418==    by 0x6453F7A: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #2
==3418==    at 0x6EAD4EB: logData (log.c:654)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae6e0 is 0 bytes inside local var "logSocketIsAlreadyOpen"
==3418==  declared at log.c:173, in frame #0 of thread 3
==3418== 
==3418== Possible data race during write of size 4 at 0x5bb4e10 by thread #3
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==  This conflicts with a previous read of size 4 by thread #2
==3418==    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x830074A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
==3418==    by 0x8300BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
==3418==    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418== 
==3418== Possible data race during write of size 8 at 0x5bb4e00 by thread #3
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==  This conflicts with a previous read of size 8 by thread #2
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x8300875: evhSERVER::AddState(int, char*) (basic_string.h:915)
==3418==    by 0x8300BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
==3418==    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418== 
==3418== Possible data race during write of size 4 at 0x5bb4e10 by thread #3
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x621AF04: sclsvrSCENARIO_JSDC::sclsvrSCENARIO_JSDC(sdbENTRY*) (sclsvrSCENARIO_JSDC.cpp:35)
==3418==    by 0x62124DC: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==  This conflicts with a previous read of size 4 by thread #2
==3418==    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x830074A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
==3418==    by 0x8300BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
==3418==    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418== 
==3418== Possible data race during write of size 8 at 0x5bb4e00 by thread #3
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x621AF04: sclsvrSCENARIO_JSDC::sclsvrSCENARIO_JSDC(sdbENTRY*) (sclsvrSCENARIO_JSDC.cpp:35)
==3418==    by 0x62124DC: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==  This conflicts with a previous read of size 8 by thread #2
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x8300875: evhSERVER::AddState(int, char*) (basic_string.h:915)
==3418==    by 0x8300BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
==3418==    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418== 
==3418== Thread #4 was created
==3418==    at 0x8A14F2E: clone (in /lib64/libc-2.5.so)
==3418==    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
==3418==    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
==3418==    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
==3418==    by 0x4034EF: main (sclwsServer.cpp:224)
==3418== 
==3418== Possible data race during write of size 8 at 0xa6b9f78 by thread #4
==3418==    at 0x40FAB0: frecv (stdsoap2_cpp.cpp:865)
==3418==    by 0x4122B6: soap_recv_raw (stdsoap2_cpp.cpp:1201)
==3418==    by 0x412660: soap_recv (stdsoap2_cpp.cpp:1318)
==3418==    by 0x41279C: soap_getchar (stdsoap2_cpp.cpp:1335)
==3418==    by 0x413A14: soap_begin_recv (stdsoap2_cpp.cpp:12925)
==3418==    by 0x5FF80C9: soap_serve(soap*) (soapServer.cpp:35)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous read of size 1 by thread #3
==3418==    at 0x4C24EC8: memcpy (hg_intercepts.c:2358)
==3418==    by 0x873B2E5: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
==3418==    by 0x873B756: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
==3418==    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
==3418==    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
==3418==    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
==3418==    by 0x4035BF: sclwsJobHandler(void*) (sclwsServer.cpp:89)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418== 
==3418== Possible data race during write of size 8 at 0xa6b9f88 by thread #4
==3418==    at 0x40FAB5: frecv (stdsoap2_cpp.cpp:865)
==3418==    by 0x4122B6: soap_recv_raw (stdsoap2_cpp.cpp:1201)
==3418==    by 0x412660: soap_recv (stdsoap2_cpp.cpp:1318)
==3418==    by 0x41279C: soap_getchar (stdsoap2_cpp.cpp:1335)
==3418==    by 0x413A14: soap_begin_recv (stdsoap2_cpp.cpp:12925)
==3418==    by 0x5FF80C9: soap_serve(soap*) (soapServer.cpp:35)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous write of size 8 by thread #3
==3418==    at 0x873B757: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
==3418==    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
==3418==    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
==3418==    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
==3418==    by 0x4035BF: sclwsJobHandler(void*) (sclwsServer.cpp:89)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418== 
==3418== Possible data race during write of size 8 at 0xa6b9f90 by thread #4
==3418==    at 0x40FABD: frecv (stdsoap2_cpp.cpp:865)
==3418==    by 0x4122B6: soap_recv_raw (stdsoap2_cpp.cpp:1201)
==3418==    by 0x412660: soap_recv (stdsoap2_cpp.cpp:1318)
==3418==    by 0x41279C: soap_getchar (stdsoap2_cpp.cpp:1335)
==3418==    by 0x413A14: soap_begin_recv (stdsoap2_cpp.cpp:12925)
==3418==    by 0x5FF80C9: soap_serve(soap*) (soapServer.cpp:35)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous read of size 1 by thread #3
==3418==    at 0x4C24EC8: memcpy (hg_intercepts.c:2358)
==3418==    by 0x873B2E5: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
==3418==    by 0x873B756: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
==3418==    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
==3418==    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
==3418==    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
==3418==    by 0x4035BF: sclwsJobHandler(void*) (sclwsServer.cpp:89)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418== 
==3418== Possible data race during write of size 8 at 0xa6b9f80 by thread #4
==3418==    at 0x40FAC2: frecv (stdsoap2_cpp.cpp:865)
==3418==    by 0x4122B6: soap_recv_raw (stdsoap2_cpp.cpp:1201)
==3418==    by 0x412660: soap_recv (stdsoap2_cpp.cpp:1318)
==3418==    by 0x41279C: soap_getchar (stdsoap2_cpp.cpp:1335)
==3418==    by 0x413A14: soap_begin_recv (stdsoap2_cpp.cpp:12925)
==3418==    by 0x5FF80C9: soap_serve(soap*) (soapServer.cpp:35)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous write of size 1 by thread #3
==3418==    at 0x873B3D4: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
==3418==    by 0x873B756: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
==3418==    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
==3418==    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
==3418==    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
==3418==    by 0x4035BF: sclwsJobHandler(void*) (sclwsServer.cpp:89)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418== 
==3418== Possible data race during write of size 8 at 0xa6b9f98 by thread #4
==3418==    at 0x40FACA: frecv (stdsoap2_cpp.cpp:865)
==3418==    by 0x4122B6: soap_recv_raw (stdsoap2_cpp.cpp:1201)
==3418==    by 0x412660: soap_recv (stdsoap2_cpp.cpp:1318)
==3418==    by 0x41279C: soap_getchar (stdsoap2_cpp.cpp:1335)
==3418==    by 0x413A14: soap_begin_recv (stdsoap2_cpp.cpp:12925)
==3418==    by 0x5FF80C9: soap_serve(soap*) (soapServer.cpp:35)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous write of size 8 by thread #3
==3418==    at 0x873D6D1: _Unwind_Find_FDE (in /lib64/libgcc_s-4.1.2-20080825.so.1)
==3418==    by 0x873A624: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
==3418==    by 0x873B66A: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
==3418==    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
==3418==    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
==3418==    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
==3418==    by 0x4035BF: sclwsJobHandler(void*) (sclwsServer.cpp:89)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418== 
==3418== Possible data race during write of size 8 at 0xa6b7f60 by thread #4
==3418==    at 0x403820: soap_tag_cmp (stdsoap2_cpp.cpp:2844)
==3418==    by 0x413EBD: http_parse_header (stdsoap2_cpp.cpp:13223)
==3418==    by 0x4144A9: http_parse (stdsoap2_cpp.cpp:13123)
==3418==    by 0x413B7A: soap_begin_recv (stdsoap2_cpp.cpp:12968)
==3418==    by 0x5FF80C9: soap_serve(soap*) (soapServer.cpp:35)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous write of size 8 by thread #3
==3418==    at 0x403820: soap_tag_cmp (stdsoap2_cpp.cpp:2844)
==3418==    by 0x413EBD: http_parse_header (stdsoap2_cpp.cpp:13223)
==3418==    by 0x4144A9: http_parse (stdsoap2_cpp.cpp:13123)
==3418==    by 0x413B7A: soap_begin_recv (stdsoap2_cpp.cpp:12968)
==3418==    by 0x5FF80C9: soap_serve(soap*) (soapServer.cpp:35)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418== 
==3418== Possible data race during write of size 8 at 0xa6b7f68 by thread #4
==3418==    at 0x403825: soap_tag_cmp (stdsoap2_cpp.cpp:2844)
==3418==    by 0x413EBD: http_parse_header (stdsoap2_cpp.cpp:13223)
==3418==    by 0x4144A9: http_parse (stdsoap2_cpp.cpp:13123)
==3418==    by 0x413B7A: soap_begin_recv (stdsoap2_cpp.cpp:12968)
==3418==    by 0x5FF80C9: soap_serve(soap*) (soapServer.cpp:35)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous write of size 8 by thread #3
==3418==    at 0x403825: soap_tag_cmp (stdsoap2_cpp.cpp:2844)
==3418==    by 0x413EBD: http_parse_header (stdsoap2_cpp.cpp:13223)
==3418==    by 0x4144A9: http_parse (stdsoap2_cpp.cpp:13123)
==3418==    by 0x413B7A: soap_begin_recv (stdsoap2_cpp.cpp:12968)
==3418==    by 0x5FF80C9: soap_serve(soap*) (soapServer.cpp:35)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418== 
==3418== Possible data race during write of size 8 at 0xa6b7f70 by thread #4
==3418==    at 0x40382D: soap_tag_cmp (stdsoap2_cpp.cpp:2844)
==3418==    by 0x413EBD: http_parse_header (stdsoap2_cpp.cpp:13223)
==3418==    by 0x4144A9: http_parse (stdsoap2_cpp.cpp:13123)
==3418==    by 0x413B7A: soap_begin_recv (stdsoap2_cpp.cpp:12968)
==3418==    by 0x5FF80C9: soap_serve(soap*) (soapServer.cpp:35)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous write of size 8 by thread #3
==3418==    at 0x40382D: soap_tag_cmp (stdsoap2_cpp.cpp:2844)
==3418==    by 0x413EBD: http_parse_header (stdsoap2_cpp.cpp:13223)
==3418==    by 0x4144A9: http_parse (stdsoap2_cpp.cpp:13123)
==3418==    by 0x413B7A: soap_begin_recv (stdsoap2_cpp.cpp:12968)
==3418==    by 0x5FF80C9: soap_serve(soap*) (soapServer.cpp:35)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418== 
==3418== Possible data race during write of size 8 at 0xa6b7f48 by thread #4
==3418==    at 0x404110: soap_malloc (stdsoap2_cpp.cpp:5520)
==3418==    by 0x4074F3: soap_strdup (stdsoap2_cpp.cpp:2113)
==3418==    by 0x413F2B: http_parse_header (stdsoap2_cpp.cpp:13237)
==3418==    by 0x4144A9: http_parse (stdsoap2_cpp.cpp:13123)
==3418==    by 0x413B7A: soap_begin_recv (stdsoap2_cpp.cpp:12968)
==3418==    by 0x5FF80C9: soap_serve(soap*) (soapServer.cpp:35)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous write of size 8 by thread #3
==3418==    at 0x404110: soap_malloc (stdsoap2_cpp.cpp:5520)
==3418==    by 0x4074F3: soap_strdup (stdsoap2_cpp.cpp:2113)
==3418==    by 0x413F2B: http_parse_header (stdsoap2_cpp.cpp:13237)
==3418==    by 0x4144A9: http_parse (stdsoap2_cpp.cpp:13123)
==3418==    by 0x413B7A: soap_begin_recv (stdsoap2_cpp.cpp:12968)
==3418==    by 0x5FF80C9: soap_serve(soap*) (soapServer.cpp:35)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #2
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644E316: vobsCATALOG::vobsCATALOG(char const*) (basic_string.h:915)
==3418==    by 0x644F011: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
==3418==    by 0x6453181: vobsCATALOG_SB9::vobsCATALOG_SB9() (vobsCATALOG_SB9.cpp:34)
==3418==    by 0x6453F6E: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 8 by thread #3
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae6e0 by thread #2
==3418==    at 0x6EAD3AA: logData (log.c:607)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x644F16F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:85)
==3418==    by 0x6453181: vobsCATALOG_SB9::vobsCATALOG_SB9() (vobsCATALOG_SB9.cpp:34)
==3418==    by 0x6453F6E: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x6EAD4EB: logData (log.c:654)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae6e0 is 0 bytes inside local var "logSocketIsAlreadyOpen"
==3418==  declared at log.c:173, in frame #0 of thread 2
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae700 by thread #2
==3418==    at 0x6EAD513: logData (log.c:658)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x644F16F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:85)
==3418==    by 0x6453181: vobsCATALOG_SB9::vobsCATALOG_SB9() (vobsCATALOG_SB9.cpp:34)
==3418==    by 0x6453F6E: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x6EAD443: logData (log.c:633)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae700 is 0 bytes inside local var "sock"
==3418==  declared at log.c:576, in frame #0 of thread 2
==3418== 
==3418== Thread #5 was created
==3418==    at 0x8A14F2E: clone (in /lib64/libc-2.5.so)
==3418==    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
==3418==    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
==3418==    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
==3418==    by 0x4034EF: main (sclwsServer.cpp:224)
==3418== 
==3418== Possible data race during write of size 4 at 0x5bb4e10 by thread #5
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B30D: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62130CC: sclsvrREQUEST::sclsvrREQUEST() (sclsvrREQUEST.cpp:38)
==3418==    by 0x62175ED: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:178)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during write of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B30D: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62130CC: sclsvrREQUEST::sclsvrREQUEST() (sclsvrREQUEST.cpp:38)
==3418==    by 0x62175ED: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:178)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  This conflicts with a previous write of size 8 by thread #3
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during write of size 4 at 0x5bb4e10 by thread #5
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during write of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 8 by thread #3
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 4 at 0x92f7590 by thread #5
==3418==    at 0x80EE3B4: sdbENTRY::IsInit() (sdbENTRY.cpp:225)
==3418==    by 0x80EE427: sdbENTRY::Write(char const*) (sdbENTRY.cpp:88)
==3418==    by 0x6457B8A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:242)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  This conflicts with a previous write of size 4 by thread #4
==3418==    at 0x80EE342: sdbENTRY::Destroy() (sdbENTRY.cpp:272)
==3418==    by 0x80EE35A: sdbENTRY::Init() (sdbENTRY.cpp:239)
==3418==    by 0x80EE56C: sdbENTRY::Read(char*, mcsLOGICAL, int) (sdbENTRY.cpp:142)
==3418==    by 0x621756D: sclsvrSERVER::GetStatus(char*, int) (sclsvrGetCalCB.cpp:68)
==3418==    by 0x5FEF7BA: ns__GetCalQueryStatus(soap*, char*, char**) (sclwsWS.cpp:371)
==3418==    by 0x5FF7BF3: soap_serve_ns__GetCalQueryStatus(soap*) (soapServer.cpp:191)
==3418==    by 0x5FF805A: soap_serve_request(soap*) (soapServer.cpp:81)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #2
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644E316: vobsCATALOG::vobsCATALOG(char const*) (basic_string.h:915)
==3418==    by 0x644F011: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
==3418==    by 0x645338F: vobsCATALOG_WDS::vobsCATALOG_WDS() (vobsCATALOG_WDS.cpp:34)
==3418==    by 0x6453F7A: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 8 by thread #5
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae700 by thread #2
==3418==    at 0x6EAD513: logData (log.c:658)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x644F16F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:85)
==3418==    by 0x645338F: vobsCATALOG_WDS::vobsCATALOG_WDS() (vobsCATALOG_WDS.cpp:34)
==3418==    by 0x6453F7A: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x6EAD443: logData (log.c:633)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae700 is 0 bytes inside local var "sock"
==3418==  declared at log.c:576, in frame #0 of thread 2
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #2
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644E316: vobsCATALOG::vobsCATALOG(char const*) (basic_string.h:915)
==3418==    by 0x644F011: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
==3418==    by 0x64535B9: vobsCATALOG_AKARI::vobsCATALOG_AKARI() (vobsCATALOG_AKARI.cpp:34)
==3418==    by 0x6453F86: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 8 by thread #5
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae6e0 by thread #2
==3418==    at 0x6EAD3AA: logData (log.c:607)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x644F16F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:85)
==3418==    by 0x64535B9: vobsCATALOG_AKARI::vobsCATALOG_AKARI() (vobsCATALOG_AKARI.cpp:34)
==3418==    by 0x6453F86: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x6EAD4EB: logData (log.c:654)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae6e0 is 0 bytes inside local var "logSocketIsAlreadyOpen"
==3418==  declared at log.c:173, in frame #0 of thread 2
==3418== 
==3418== Possible data race during read of size 4 at 0x70ae700 by thread #2
==3418==    at 0x6EAD513: logData (log.c:658)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x644F16F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:85)
==3418==    by 0x64535B9: vobsCATALOG_AKARI::vobsCATALOG_AKARI() (vobsCATALOG_AKARI.cpp:34)
==3418==    by 0x6453F86: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
==3418==    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
==3418==    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==  This conflicts with a previous write of size 4 by thread #3
==3418==    at 0x6EAD443: logData (log.c:633)
==3418==    by 0x6EAD6A4: logPrint (log.c:493)
==3418==    by 0x5FEE32E: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:153)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x70ae700 is 0 bytes inside local var "sock"
==3418==  declared at log.c:576, in frame #0 of thread 2
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #2
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous write of size 8 by thread #5
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during read of size 4 at 0x5bb4e10 by thread #2
==3418==    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==  This conflicts with a previous write of size 4 by thread #5
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during write of size 1 at 0x5bb4e18 by thread #2
==3418==    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==  This conflicts with a previous write of size 1 by thread #5
==3418==    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #2
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous write of size 8 by thread #5
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #2
==3418==    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==  This conflicts with a previous write of size 8 by thread #5
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during read of size 4 at 0x5bb4e10 by thread #2
==3418==    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==  This conflicts with a previous write of size 4 by thread #5
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during write of size 4 at 0x5bb4e10 by thread #2
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==  This conflicts with a previous read of size 4 by thread #5
==3418==    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456C5E: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
==3418==    by 0x6457CD1: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418== 
==3418== Possible data race during write of size 8 at 0x5bb4e00 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==  This conflicts with a previous read of size 8 by thread #5
==3418==    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644F552: vobsLOCAL_CATALOG::SetOption(std::string) (basic_string.h:2200)
==3418==    by 0x6457CF5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:265)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418== 
==3418== Possible data race during write of size 1 at 0x5bb4e18 by thread #2
==3418==    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==  This conflicts with a previous write of size 1 by thread #5
==3418==    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #2
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418==  This conflicts with a previous write of size 8 by thread #5
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #2
==3418==    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==  This conflicts with a previous write of size 8 by thread #5
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during read of size 4 at 0x5bb4e10 by thread #2
==3418==    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==  This conflicts with a previous write of size 4 by thread #5
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during write of size 4 at 0x5bb4e10 by thread #2
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==  This conflicts with a previous read of size 4 by thread #5
==3418==    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456C5E: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
==3418==    by 0x6457CD1: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418== 
==3418== Possible data race during write of size 8 at 0x5bb4e00 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==  This conflicts with a previous read of size 8 by thread #5
==3418==    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644F552: vobsLOCAL_CATALOG::SetOption(std::string) (basic_string.h:2200)
==3418==    by 0x6457CF5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:265)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418== 
==3418== Possible data race during write of size 1 at 0x5bb4e18 by thread #2
==3418==    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==  This conflicts with a previous write of size 1 by thread #5
==3418==    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644750D: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (basic_string.h:915)
==3418==    by 0x6441E34: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
==3418==    by 0x64424E1: vobsSTAR::AddProperties() (vobsSTAR.cpp:1062)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 4 at 0x5bb4e10 by thread #5
==3418==    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x64421FE: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (stl_pair.h:85)
==3418==    by 0x64424E1: vobsSTAR::AddProperties() (vobsSTAR.cpp:1062)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==  This conflicts with a previous write of size 4 by thread #2
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644766E: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (basic_string.h:915)
==3418==    by 0x6441E34: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
==3418==    by 0x6442988: vobsSTAR::AddProperties() (vobsSTAR.cpp:1115)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 4 at 0x5bb4e10 by thread #5
==3418==    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x64421FE: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (stl_pair.h:85)
==3418==    by 0x6442988: vobsSTAR::AddProperties() (vobsSTAR.cpp:1115)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==  This conflicts with a previous write of size 4 by thread #2
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 4 at 0x5bb4e10 by thread #5
==3418==    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x64421FE: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (stl_pair.h:85)
==3418==    by 0x6442DB4: vobsSTAR::AddProperties() (vobsSTAR.cpp:1154)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==  This conflicts with a previous write of size 4 by thread #2
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6442352: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (basic_string.h:915)
==3418==    by 0x6442DB4: vobsSTAR::AddProperties() (vobsSTAR.cpp:1154)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644766E: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (basic_string.h:915)
==3418==    by 0x6441E34: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
==3418==    by 0x6442F82: vobsSTAR::AddProperties() (vobsSTAR.cpp:1174)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 4 at 0x5bb4e10 by thread #5
==3418==    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x64421FE: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (stl_pair.h:85)
==3418==    by 0x6442F82: vobsSTAR::AddProperties() (vobsSTAR.cpp:1174)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==  This conflicts with a previous write of size 4 by thread #2
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644750D: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (basic_string.h:915)
==3418==    by 0x6441E34: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
==3418==    by 0x64423F9: vobsSTAR::AddProperties() (vobsSTAR.cpp:1053)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 4 at 0x5bb4e10 by thread #5
==3418==    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x64421FE: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (stl_pair.h:85)
==3418==    by 0x64423F9: vobsSTAR::AddProperties() (vobsSTAR.cpp:1053)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==  This conflicts with a previous write of size 4 by thread #2
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x64475BB: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (basic_string.h:915)
==3418==    by 0x6441E34: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
==3418==    by 0x6442988: vobsSTAR::AddProperties() (vobsSTAR.cpp:1115)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 4 at 0x5bb4e10 by thread #5
==3418==    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x64421FE: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (stl_pair.h:85)
==3418==    by 0x644328A: vobsSTAR::AddProperties() (vobsSTAR.cpp:1203)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==  This conflicts with a previous write of size 4 by thread #2
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6442352: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (basic_string.h:915)
==3418==    by 0x644328A: vobsSTAR::AddProperties() (vobsSTAR.cpp:1203)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 4 at 0x5bb4e10 by thread #5
==3418==    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x64421FE: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (stl_pair.h:85)
==3418==    by 0x644333D: vobsSTAR::AddProperties() (vobsSTAR.cpp:1211)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==  This conflicts with a previous write of size 4 by thread #2
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6442352: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (basic_string.h:915)
==3418==    by 0x644333D: vobsSTAR::AddProperties() (vobsSTAR.cpp:1211)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 4 at 0x5bb4e10 by thread #5
==3418==    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x64421FE: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (stl_pair.h:85)
==3418==    by 0x644267D: vobsSTAR::AddProperties() (vobsSTAR.cpp:1081)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==  This conflicts with a previous write of size 4 by thread #2
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6442352: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (basic_string.h:915)
==3418==    by 0x644267D: vobsSTAR::AddProperties() (vobsSTAR.cpp:1081)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644750D: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (basic_string.h:915)
==3418==    by 0x6441E34: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
==3418==    by 0x644276B: vobsSTAR::AddProperties() (vobsSTAR.cpp:1090)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6446C36: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY() (basic_string.h:915)
==3418==    by 0x6441EF6: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (stl_map.h:348)
==3418==    by 0x644276B: vobsSTAR::AddProperties() (vobsSTAR.cpp:1090)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 4 at 0x5bb4e10 by thread #5
==3418==    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x64421FE: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (stl_pair.h:85)
==3418==    by 0x644276B: vobsSTAR::AddProperties() (vobsSTAR.cpp:1090)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==  This conflicts with a previous write of size 4 by thread #2
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6442352: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (basic_string.h:915)
==3418==    by 0x644276B: vobsSTAR::AddProperties() (vobsSTAR.cpp:1090)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644750D: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (basic_string.h:915)
==3418==    by 0x6441E34: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
==3418==    by 0x64427A6: vobsSTAR::AddProperties() (vobsSTAR.cpp:1092)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6446C36: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY() (basic_string.h:915)
==3418==    by 0x6441EF6: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (stl_map.h:348)
==3418==    by 0x64427A6: vobsSTAR::AddProperties() (vobsSTAR.cpp:1092)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 4 at 0x5bb4e10 by thread #5
==3418==    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x64421FE: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (stl_pair.h:85)
==3418==    by 0x64427A6: vobsSTAR::AddProperties() (vobsSTAR.cpp:1092)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==  This conflicts with a previous write of size 4 by thread #2
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6442352: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (basic_string.h:915)
==3418==    by 0x64427A6: vobsSTAR::AddProperties() (vobsSTAR.cpp:1092)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 4 at 0x5bb4e10 by thread #5
==3418==    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x64421FE: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (stl_pair.h:85)
==3418==    by 0x64427E1: vobsSTAR::AddProperties() (vobsSTAR.cpp:1095)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==  This conflicts with a previous write of size 4 by thread #2
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6442352: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (basic_string.h:915)
==3418==    by 0x64427E1: vobsSTAR::AddProperties() (vobsSTAR.cpp:1095)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644750D: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (basic_string.h:915)
==3418==    by 0x6441E34: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
==3418==    by 0x6442B1F: vobsSTAR::AddProperties() (vobsSTAR.cpp:1127)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6446C36: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY() (basic_string.h:915)
==3418==    by 0x6441EF6: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (stl_map.h:348)
==3418==    by 0x6442B1F: vobsSTAR::AddProperties() (vobsSTAR.cpp:1127)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== 
==3418== More than 100 errors detected.  Subsequent errors
==3418== will still be recorded, but in less detail than before.
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6447536: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (basic_string.h:915)
==3418==    by 0x6441E34: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
==3418==    by 0x6442471: vobsSTAR::AddProperties() (vobsSTAR.cpp:1059)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6447555: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (basic_string.h:915)
==3418==    by 0x6441E34: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
==3418==    by 0x6442DEF: vobsSTAR::AddProperties() (vobsSTAR.cpp:1157)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644764C: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (basic_string.h:915)
==3418==    by 0x6441E34: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
==3418==    by 0x6442988: vobsSTAR::AddProperties() (vobsSTAR.cpp:1115)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 4 at 0x5bb4e10 by thread #5
==3418==    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6444356: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<int const, std::string> const&) (stl_pair.h:69)
==3418==    by 0x64444C8: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::insert_unique(std::_Rb_tree_iterator<std::pair<int const, std::string> >, std::pair<int const, std::string> const&) (stl_tree.h:947)
==3418==    by 0x644220C: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (stl_map.h:420)
==3418==    by 0x644319E: vobsSTAR::AddProperties() (vobsSTAR.cpp:1195)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==  This conflicts with a previous write of size 4 by thread #2
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6447615: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (basic_string.h:915)
==3418==    by 0x6441E34: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
==3418==    by 0x6442439: vobsSTAR::AddProperties() (vobsSTAR.cpp:1057)
==3418==    by 0x6443637: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
==3418==    by 0x64494A7: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
==3418==    by 0x6448754: vobsSTAR_LIST::Load(char const*, mcsLOGICAL, char const*) (vobsSTAR_LIST.cpp:685)
==3418==    by 0x644F615: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:98)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==  This conflicts with a previous write of size 8 by thread #2
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
==3418==    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
==3418==    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
==3418==    by 0x5FEE3FE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:173)
==3418==    by 0x5FF7FC9: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
==3418==    by 0x5FF801A: soap_serve_request(soap*) (soapServer.cpp:77)
==3418== 
==3418== Thread #8 was created
==3418==    at 0x8A14F2E: clone (in /lib64/libc-2.5.so)
==3418==    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
==3418==    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
==3418==    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
==3418==    by 0x4034EF: main (sclwsServer.cpp:224)
==3418== 
==3418== Possible data race during write of size 4 at 0x74bd7fc by thread #8
==3418==    at 0x72B9378: miscDynBufReset (miscDynBuf.c:462)
==3418==    by 0x72BA19B: miscResolvePath (miscFile.c:473)
==3418==    by 0x72BA51A: miscFileExists (miscFile.c:680)
==3418==    by 0x72BA91A: miscLocateFile (miscFile.c:878)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==  This conflicts with a previous write of size 4 by thread #5
==3418==    at 0x72B9378: miscDynBufReset (miscDynBuf.c:462)
==3418==    by 0x72BA19B: miscResolvePath (miscFile.c:473)
==3418==    by 0x72BA51A: miscFileExists (miscFile.c:680)
==3418==    by 0x72BA91A: miscLocateFile (miscFile.c:878)
==3418==    by 0x644F5F0: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418== 
==3418== Possible data race during read of size 4 at 0x74bd800 by thread #8
==3418==    at 0x72B97CF: miscDynBufAppendBytes (miscDynBuf.c:1497)
==3418==    by 0x72B9934: miscDynBufAppendString (miscDynBuf.c:1572)
==3418==    by 0x72BA303: miscResolvePath (miscFile.c:555)
==3418==    by 0x72BA51A: miscFileExists (miscFile.c:680)
==3418==    by 0x72BA91A: miscLocateFile (miscFile.c:878)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==  This conflicts with a previous write of size 4 by thread #5
==3418==    at 0x72B9500: miscDynBufStrip (miscDynBuf.c:429)
==3418==    by 0x72BA40A: miscResolvePath (miscFile.c:640)
==3418==    by 0x72BA51A: miscFileExists (miscFile.c:680)
==3418==    by 0x72BA91A: miscLocateFile (miscFile.c:878)
==3418==    by 0x644F5F0: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418== 
==3418== Possible data race during read of size 8 at 0x74bd7f0 by thread #8
==3418==    at 0x72B97E9: miscDynBufAppendBytes (miscDynBuf.c:1503)
==3418==    by 0x72B9934: miscDynBufAppendString (miscDynBuf.c:1572)
==3418==    by 0x72BA303: miscResolvePath (miscFile.c:555)
==3418==    by 0x72BA51A: miscFileExists (miscFile.c:680)
==3418==    by 0x72BA91A: miscLocateFile (miscFile.c:878)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==  This conflicts with a previous write of size 8 by thread #5
==3418==    at 0x72B94F9: miscDynBufStrip (miscDynBuf.c:426)
==3418==    by 0x72BA40A: miscResolvePath (miscFile.c:640)
==3418==    by 0x72BA51A: miscFileExists (miscFile.c:680)
==3418==    by 0x72BA91A: miscLocateFile (miscFile.c:878)
==3418==    by 0x644F5F0: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418== 
==3418== Possible data race during write of size 1 at 0x9317ad0 by thread #8
==3418==    at 0x4C24ECC: memcpy (hg_intercepts.c:2358)
==3418==    by 0x72B97F6: miscDynBufAppendBytes (miscDynBuf.c:1503)
==3418==    by 0x72B9934: miscDynBufAppendString (miscDynBuf.c:1572)
==3418==    by 0x72BA303: miscResolvePath (miscFile.c:555)
==3418==    by 0x72BA51A: miscFileExists (miscFile.c:680)
==3418==    by 0x72BA91A: miscLocateFile (miscFile.c:878)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during write of size 1 at 0x9317ad1 by thread #8
==3418==    at 0x4C24ED5: memcpy (hg_intercepts.c:2358)
==3418==    by 0x72B97F6: miscDynBufAppendBytes (miscDynBuf.c:1503)
==3418==    by 0x72B9934: miscDynBufAppendString (miscDynBuf.c:1572)
==3418==    by 0x72BA303: miscResolvePath (miscFile.c:555)
==3418==    by 0x72BA51A: miscFileExists (miscFile.c:680)
==3418==    by 0x72BA91A: miscLocateFile (miscFile.c:878)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during write of size 1 at 0x9317ad2 by thread #8
==3418==    at 0x4C24EDF: memcpy (hg_intercepts.c:2358)
==3418==    by 0x72B97F6: miscDynBufAppendBytes (miscDynBuf.c:1503)
==3418==    by 0x72B9934: miscDynBufAppendString (miscDynBuf.c:1572)
==3418==    by 0x72BA303: miscResolvePath (miscFile.c:555)
==3418==    by 0x72BA51A: miscFileExists (miscFile.c:680)
==3418==    by 0x72BA91A: miscLocateFile (miscFile.c:878)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during write of size 1 at 0x9317ad3 by thread #8
==3418==    at 0x4C24EE9: memcpy (hg_intercepts.c:2358)
==3418==    by 0x72B97F6: miscDynBufAppendBytes (miscDynBuf.c:1503)
==3418==    by 0x72B9934: miscDynBufAppendString (miscDynBuf.c:1572)
==3418==    by 0x72BA303: miscResolvePath (miscFile.c:555)
==3418==    by 0x72BA51A: miscFileExists (miscFile.c:680)
==3418==    by 0x72BA91A: miscLocateFile (miscFile.c:878)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during write of size 1 at 0x9317ae0 by thread #8
==3418==    at 0x4C24F0F: memcpy (hg_intercepts.c:2358)
==3418==    by 0x72B97F6: miscDynBufAppendBytes (miscDynBuf.c:1503)
==3418==    by 0x72B9934: miscDynBufAppendString (miscDynBuf.c:1572)
==3418==    by 0x72BA303: miscResolvePath (miscFile.c:555)
==3418==    by 0x72BA51A: miscFileExists (miscFile.c:680)
==3418==    by 0x72BA91A: miscLocateFile (miscFile.c:878)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during write of size 1 at 0x9317ae1 by thread #8
==3418==    at 0x4C24E9F: memcpy (hg_intercepts.c:2358)
==3418==    by 0x72B97F6: miscDynBufAppendBytes (miscDynBuf.c:1503)
==3418==    by 0x72B9934: miscDynBufAppendString (miscDynBuf.c:1572)
==3418==    by 0x72BA31F: miscResolvePath (miscFile.c:563)
==3418==    by 0x72BA51A: miscFileExists (miscFile.c:680)
==3418==    by 0x72BA91A: miscLocateFile (miscFile.c:878)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during write of size 8 at 0x74bd7f0 by thread #8
==3418==    at 0x72B94F9: miscDynBufStrip (miscDynBuf.c:426)
==3418==    by 0x72BA40A: miscResolvePath (miscFile.c:640)
==3418==    by 0x72BA51A: miscFileExists (miscFile.c:680)
==3418==    by 0x72BA91A: miscLocateFile (miscFile.c:878)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==  This conflicts with a previous write of size 8 by thread #5
==3418==    at 0x72B94F9: miscDynBufStrip (miscDynBuf.c:426)
==3418==    by 0x72BA40A: miscResolvePath (miscFile.c:640)
==3418==    by 0x72BA51A: miscFileExists (miscFile.c:680)
==3418==    by 0x72BA91A: miscLocateFile (miscFile.c:878)
==3418==    by 0x644F5F0: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418== 
==3418== Possible data race during write of size 4 at 0x74bd800 by thread #8
==3418==    at 0x72B9500: miscDynBufStrip (miscDynBuf.c:429)
==3418==    by 0x72BA40A: miscResolvePath (miscFile.c:640)
==3418==    by 0x72BA51A: miscFileExists (miscFile.c:680)
==3418==    by 0x72BA91A: miscLocateFile (miscFile.c:878)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==  This conflicts with a previous write of size 4 by thread #5
==3418==    at 0x72B9500: miscDynBufStrip (miscDynBuf.c:429)
==3418==    by 0x72BA40A: miscResolvePath (miscFile.c:640)
==3418==    by 0x72BA51A: miscFileExists (miscFile.c:680)
==3418==    by 0x72BA91A: miscLocateFile (miscFile.c:878)
==3418==    by 0x644F5F0: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418== 
==3418== Possible data race during write of size 4 at 0x74bd7bc by thread #8
==3418==    at 0x72B9378: miscDynBufReset (miscDynBuf.c:462)
==3418==    by 0x72BA742: miscLocateFileInPath (miscFile.c:780)
==3418==    by 0x72BA9BE: miscLocateFile (miscFile.c:910)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==  This conflicts with a previous write of size 4 by thread #5
==3418==    at 0x72B9378: miscDynBufReset (miscDynBuf.c:462)
==3418==    by 0x72BA742: miscLocateFileInPath (miscFile.c:780)
==3418==    by 0x72BA9BE: miscLocateFile (miscFile.c:910)
==3418==    by 0x644F5F0: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418== 
==3418== Possible data race during read of size 4 at 0x74bd7c0 by thread #8
==3418==    at 0x72B97CF: miscDynBufAppendBytes (miscDynBuf.c:1497)
==3418==    by 0x72BA788: miscLocateFileInPath (miscFile.c:805)
==3418==    by 0x72BA9BE: miscLocateFile (miscFile.c:910)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==  This conflicts with a previous write of size 4 by thread #5
==3418==    at 0x72B95F8: miscDynBufAlloc (miscDynBuf.c:373)
==3418==    by 0x72B97E0: miscDynBufAppendBytes (miscDynBuf.c:1497)
==3418==    by 0x72B9934: miscDynBufAppendString (miscDynBuf.c:1572)
==3418==    by 0x72BA7AF: miscLocateFileInPath (miscFile.c:807)
==3418==    by 0x72BA9BE: miscLocateFile (miscFile.c:910)
==3418==    by 0x644F5F0: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418== 
==3418== Possible data race during read of size 8 at 0x74bd7b0 by thread #8
==3418==    at 0x72B97E9: miscDynBufAppendBytes (miscDynBuf.c:1503)
==3418==    by 0x72BA788: miscLocateFileInPath (miscFile.c:805)
==3418==    by 0x72BA9BE: miscLocateFile (miscFile.c:910)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==  This conflicts with a previous write of size 8 by thread #5
==3418==    at 0x72B95DE: miscDynBufAlloc (miscDynBuf.c:362)
==3418==    by 0x72B97E0: miscDynBufAppendBytes (miscDynBuf.c:1497)
==3418==    by 0x72B9934: miscDynBufAppendString (miscDynBuf.c:1572)
==3418==    by 0x72BA7AF: miscLocateFileInPath (miscFile.c:807)
==3418==    by 0x72BA9BE: miscLocateFile (miscFile.c:910)
==3418==    by 0x644F5F0: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418== 
==3418== Possible data race during write of size 1 at 0x9317a68 by thread #8
==3418==    at 0x4C24E61: memcpy (hg_intercepts.c:2358)
==3418==    by 0x72B97F6: miscDynBufAppendBytes (miscDynBuf.c:1503)
==3418==    by 0x72BA788: miscLocateFileInPath (miscFile.c:805)
==3418==    by 0x72BA9BE: miscLocateFile (miscFile.c:910)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418== 
==3418== Possible data race during write of size 1 at 0x9317a67 by thread #8
==3418==    at 0x4C24E68: memcpy (hg_intercepts.c:2358)
==3418==    by 0x72B97F6: miscDynBufAppendBytes (miscDynBuf.c:1503)
==3418==    by 0x72BA788: miscLocateFileInPath (miscFile.c:805)
==3418==    by 0x72BA9BE: miscLocateFile (miscFile.c:910)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418== 
==3418== Possible data race during write of size 1 at 0x9317a66 by thread #8
==3418==    at 0x4C24E70: memcpy (hg_intercepts.c:2358)
==3418==    by 0x72B97F6: miscDynBufAppendBytes (miscDynBuf.c:1503)
==3418==    by 0x72BA788: miscLocateFileInPath (miscFile.c:805)
==3418==    by 0x72BA9BE: miscLocateFile (miscFile.c:910)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418== 
==3418== Possible data race during write of size 1 at 0x9317a65 by thread #8
==3418==    at 0x4C24E78: memcpy (hg_intercepts.c:2358)
==3418==    by 0x72B97F6: miscDynBufAppendBytes (miscDynBuf.c:1503)
==3418==    by 0x72BA788: miscLocateFileInPath (miscFile.c:805)
==3418==    by 0x72BA9BE: miscLocateFile (miscFile.c:910)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418== 
==3418== Possible data race during write of size 8 at 0x74bd7b0 by thread #8
==3418==    at 0x72B94F9: miscDynBufStrip (miscDynBuf.c:426)
==3418==    by 0x72BA821: miscLocateFileInPath (miscFile.c:833)
==3418==    by 0x72BA9BE: miscLocateFile (miscFile.c:910)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==  This conflicts with a previous write of size 8 by thread #5
==3418==    at 0x72B95DE: miscDynBufAlloc (miscDynBuf.c:362)
==3418==    by 0x72B97E0: miscDynBufAppendBytes (miscDynBuf.c:1497)
==3418==    by 0x72B9934: miscDynBufAppendString (miscDynBuf.c:1572)
==3418==    by 0x72BA7AF: miscLocateFileInPath (miscFile.c:807)
==3418==    by 0x72BA9BE: miscLocateFile (miscFile.c:910)
==3418==    by 0x644F5F0: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418== 
==3418== Possible data race during write of size 4 at 0x74bd7c0 by thread #8
==3418==    at 0x72B9500: miscDynBufStrip (miscDynBuf.c:429)
==3418==    by 0x72BA821: miscLocateFileInPath (miscFile.c:833)
==3418==    by 0x72BA9BE: miscLocateFile (miscFile.c:910)
==3418==    by 0x7CD2519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==  This conflicts with a previous write of size 4 by thread #5
==3418==    at 0x72B95F8: miscDynBufAlloc (miscDynBuf.c:373)
==3418==    by 0x72B97E0: miscDynBufAppendBytes (miscDynBuf.c:1497)
==3418==    by 0x72B9934: miscDynBufAppendString (miscDynBuf.c:1572)
==3418==    by 0x72BA7AF: miscLocateFileInPath (miscFile.c:807)
==3418==    by 0x72BA9BE: miscLocateFile (miscFile.c:910)
==3418==    by 0x644F5F0: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418== 
==3418== Possible data race during read of size 1 at 0xc7d3550 by thread #8
==3418==    at 0x72B8D94: miscDynBufChkStringParam (miscDynBuf.c:252)
==3418==    by 0x72B98D6: miscDynBufAppendString (miscDynBuf.c:1533)
==3418==    by 0x72BA14E: miscResolvePath (miscFile.c:459)
==3418==    by 0x7CD2560: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:966)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418== 
==3418== Possible data race during read of size 1 at 0xc7d35d0 by thread #8
==3418==    at 0x5386974: xmlStrncasecmp (in /usr/lib64/libxml2.so.2.6.26)
==3418==    by 0x5341822: ??? (in /usr/lib64/libxml2.so.2.6.26)
==3418==    by 0x5341925: xmlLoadExternalEntity (in /usr/lib64/libxml2.so.2.6.26)
==3418==    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
==3418==    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
==3418==    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
==3418==    by 0x7CD259F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
==3418==    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
==3418==    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
==3418==    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during write of size 8 at 0x74bd7b0 by thread #8
==3418==    at 0x72B95DE: miscDynBufAlloc (miscDynBuf.c:362)
==3418==    by 0x72B97E0: miscDynBufAppendBytes (miscDynBuf.c:1497)
==3418==    by 0x72B9934: miscDynBufAppendString (miscDynBuf.c:1572)
==3418==    by 0x72BA7AF: miscLocateFileInPath (miscFile.c:807)
==3418==    by 0x72BA9BE: miscLocateFile (miscFile.c:910)
==3418==    by 0x644F5F0: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==  This conflicts with a previous write of size 8 by thread #5
==3418==    at 0x72B95DE: miscDynBufAlloc (miscDynBuf.c:362)
==3418==    by 0x72B97E0: miscDynBufAppendBytes (miscDynBuf.c:1497)
==3418==    by 0x72B9934: miscDynBufAppendString (miscDynBuf.c:1572)
==3418==    by 0x72BA7AF: miscLocateFileInPath (miscFile.c:807)
==3418==    by 0x72BA9BE: miscLocateFile (miscFile.c:910)
==3418==    by 0x644F5F0: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418== 
==3418== Possible data race during write of size 4 at 0x74bd7c0 by thread #8
==3418==    at 0x72B95F8: miscDynBufAlloc (miscDynBuf.c:373)
==3418==    by 0x72B97E0: miscDynBufAppendBytes (miscDynBuf.c:1497)
==3418==    by 0x72B9934: miscDynBufAppendString (miscDynBuf.c:1572)
==3418==    by 0x72BA7AF: miscLocateFileInPath (miscFile.c:807)
==3418==    by 0x72BA9BE: miscLocateFile (miscFile.c:910)
==3418==    by 0x644F5F0: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==  This conflicts with a previous write of size 4 by thread #5
==3418==    at 0x72B95F8: miscDynBufAlloc (miscDynBuf.c:373)
==3418==    by 0x72B97E0: miscDynBufAppendBytes (miscDynBuf.c:1497)
==3418==    by 0x72B9934: miscDynBufAppendString (miscDynBuf.c:1572)
==3418==    by 0x72BA7AF: miscLocateFileInPath (miscFile.c:807)
==3418==    by 0x72BA9BE: miscLocateFile (miscFile.c:910)
==3418==    by 0x644F5F0: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418== 
==3418== Possible data race during read of size 1 at 0x9317800 by thread #8
==3418==    at 0x72BA4D5: miscFileExists (miscFile.c:667)
==3418==    by 0x72BA7CB: miscLocateFileInPath (miscFile.c:811)
==3418==    by 0x72BA9BE: miscLocateFile (miscFile.c:910)
==3418==    by 0x644F5F0: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
==3418==    by 0x6452535: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
==3418==    by 0x64527CD: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
==3418==    by 0x6457DA5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x644F552: vobsLOCAL_CATALOG::SetOption(std::string) (basic_string.h:2200)
==3418==    by 0x6457E11: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:277)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  This conflicts with a previous write of size 8 by thread #8
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during read of size 8 at 0x9318148 by thread #5
==3418==    at 0x72BB9EC: miscHashGetElement (miscHash.c:462)
==3418==    by 0x74BE9E8: timlogStop (timlog.c:128)
==3418==    by 0x6457EB2: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  This conflicts with a previous write of size 8 by thread #8
==3418==    at 0x72BBC69: miscHashAddElement (miscHash.c:365)
==3418==    by 0x74BEC32: timlogStart (timlog.c:89)
==3418==    by 0x6457B4C: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418== 
==3418== Possible data race during read of size 4 at 0xc7d4058 by thread #5
==3418==    at 0x74BEA25: timlogStop (timlog.c:143)
==3418==    by 0x6457EB2: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418== 
==3418== Possible data race during read of size 4 at 0xc7d4060 by thread #5
==3418==    at 0x74BEA35: timlogStop (timlog.c:146)
==3418==    by 0x6457EB2: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418== 
==3418== Possible data race during read of size 4 at 0xc7d4050 by thread #5
==3418==    at 0x74BEAD4: timlogStop (timlog.c:163)
==3418==    by 0x6457EB2: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418== 
==3418== Possible data race during write of size 8 at 0x9318060 by thread #5
==3418==    at 0x72BBABD: miscHashDeleteElement (miscHash.c:419)
==3418==    by 0x74BEAF8: timlogStop (timlog.c:166)
==3418==    by 0x6457EB2: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  This conflicts with a previous read of size 8 by thread #8
==3418==    at 0x72BB971: miscHashLookUp (miscHash.c:189)
==3418==    by 0x72BBB8A: miscHashAddElement (miscHash.c:304)
==3418==    by 0x74BEC32: timlogStart (timlog.c:89)
==3418==    by 0x6457B4C: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during read of size 4 at 0x9318150 by thread #5
==3418==    at 0x72BBAC9: miscHashDeleteElement (miscHash.c:427)
==3418==    by 0x74BEAF8: timlogStop (timlog.c:166)
==3418==    by 0x6457EB2: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  This conflicts with a previous write of size 4 by thread #8
==3418==    at 0x72BBC6D: miscHashAddElement (miscHash.c:366)
==3418==    by 0x74BEC32: timlogStart (timlog.c:89)
==3418==    by 0x6457B4C: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418== 
==3418== Possible data race during read of size 8 at 0x9318148 by thread #5
==3418==    at 0x72BBACF: miscHashDeleteElement (miscHash.c:429)
==3418==    by 0x74BEAF8: timlogStop (timlog.c:166)
==3418==    by 0x6457EB2: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  This conflicts with a previous write of size 8 by thread #8
==3418==    at 0x72BBC69: miscHashAddElement (miscHash.c:365)
==3418==    by 0x74BEC32: timlogStart (timlog.c:89)
==3418==    by 0x6457B4C: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x5961D28: std::string::append(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x7CD6DB4: cmdCOMMAND::AppendParamsToVOTable(std::string&) (basic_string.h:822)
==3418==    by 0x6212A8E: sclsvrREQUEST::AppendParamsToVOTable(std::string&) (sclsvrREQUEST.cpp:622)
==3418==    by 0x6217A4A: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:360)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==  This conflicts with a previous write of size 8 by thread #8
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during read of size 4 at 0x5bb4e10 by thread #5
==3418==    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x7CD8040: cmdPARAM::GetUnit() (cmdPARAM.cpp:114)
==3418==    by 0x7CD6FCE: cmdCOMMAND::AppendParamsToVOTable(std::string&) (cmdCOMMAND.cpp:386)
==3418==    by 0x6212A8E: sclsvrREQUEST::AppendParamsToVOTable(std::string&) (sclsvrREQUEST.cpp:622)
==3418==    by 0x6217A4A: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:360)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  This conflicts with a previous write of size 4 by thread #8
==3418==    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x64457D2: vobsSTAR_PROPERTY::GetDescription() const (vobsSTAR_PROPERTY.cpp:468)
==3418==    by 0x645D6C0: vobsVOTABLE::GetVotable(vobsSTAR_LIST&, char const*, char const*, char const*, char const*, char const*, miscoDYN_BUF*) (vobsVOTABLE.cpp:221)
==3418==    by 0x644892C: vobsSTAR_LIST::GetVOTable(char const*, char const*, char const*, char const*, miscoDYN_BUF*) (vobsSTAR_LIST.cpp:556)
==3418==    by 0x6217ABF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:376)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==  This conflicts with a previous write of size 8 by thread #8
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during read of size 8 at 0x5bb4e00 by thread #5
==3418==    at 0x6445796: vobsSTAR_PROPERTY::GetLink() const (vobsSTAR_PROPERTY.cpp:486)
==3418==    by 0x645D6FE: vobsVOTABLE::GetVotable(vobsSTAR_LIST&, char const*, char const*, char const*, char const*, char const*, miscoDYN_BUF*) (vobsVOTABLE.cpp:230)
==3418==    by 0x644892C: vobsSTAR_LIST::GetVOTable(char const*, char const*, char const*, char const*, miscoDYN_BUF*) (vobsSTAR_LIST.cpp:556)
==3418==    by 0x6217ABF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:376)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==  This conflicts with a previous write of size 8 by thread #8
==3418==    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
==3418==    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
==3418==    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
==3418==    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
==3418==    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418== 
==3418== Possible data race during read of size 4 at 0xc7d3f28 by thread #5
==3418==    at 0x74BEA25: timlogStop (timlog.c:143)
==3418==    by 0x6217CA5: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:432)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418== 
==3418== Possible data race during read of size 4 at 0xc7d3f30 by thread #5
==3418==    at 0x74BEA35: timlogStop (timlog.c:146)
==3418==    by 0x6217CA5: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:432)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418== 
==3418== Possible data race during read of size 4 at 0xc7d3f20 by thread #5
==3418==    at 0x74BEAD4: timlogStop (timlog.c:163)
==3418==    by 0x6217CA5: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:432)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418== 
==3418== Possible data race during read of size 8 at 0x9318060 by thread #8
==3418==    at 0x72BB971: miscHashLookUp (miscHash.c:189)
==3418==    by 0x72BB9E1: miscHashGetElement (miscHash.c:456)
==3418==    by 0x74BE9E8: timlogStop (timlog.c:128)
==3418==    by 0x6457EB2: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
==3418==    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
==3418==    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418== 
==3418== Possible data race during read of size 4 at 0x6888fc0 by thread #8
==3418==    at 0x6676723: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:1986)
==3418==    by 0x620C449: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
==3418==    by 0x620F381: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
==3418==    by 0x621081F: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
==3418==    by 0x6217887: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x6888fc0 is 0 bytes inside teffloggTable.loaded,
==3418==  declared at alxCorrectedMagnitude.c:1980, in frame #0 of thread 5
==3418== 
==3418== Possible data race during read of size 4 at 0x6888fd0 by thread #8
==3418==    at 0x6676923: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2079)
==3418==    by 0x620C449: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
==3418==    by 0x620F381: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
==3418==    by 0x621081F: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
==3418==    by 0x6217887: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x6888fd0 is 0 bytes inside teffloggTable.nbLines,
==3418==  declared at alxCorrectedMagnitude.c:1980, in frame #0 of thread 5
==3418== 
==3418== Possible data race during read of size 1 at 0x6888fd8 by thread #8
==3418==    at 0x6676946: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2082)
==3418==    by 0x620C449: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
==3418==    by 0x620F381: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
==3418==    by 0x621081F: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
==3418==    by 0x6217887: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x6888fd8 is 0 bytes inside teffloggTable.spectralType[0].code,
==3418==  declared at alxCorrectedMagnitude.c:1980, in frame #0 of thread 5
==3418== 
==3418== Possible data race during read of size 8 at 0x6889ce0 by thread #8
==3418==    at 0x6676951: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2088)
==3418==    by 0x620C449: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
==3418==    by 0x620F381: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
==3418==    by 0x621081F: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
==3418==    by 0x6217887: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x6889ce0 is 0 bytes inside teffloggTable.spectralType[52].quantity,
==3418==  declared at alxCorrectedMagnitude.c:1980, in frame #0 of thread 5
==3418== 
==3418== Possible data race during read of size 8 at 0x688a440 by thread #8
==3418==    at 0x6676AF1: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2203)
==3418==    by 0x620C449: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
==3418==    by 0x620F381: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
==3418==    by 0x621081F: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
==3418==    by 0x6217887: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x688a440 is 1320 bytes inside teffloggTable.teff,
==3418==  declared at alxCorrectedMagnitude.c:1980, in frame #0 of thread 5
==3418== 
==3418== Possible data race during read of size 8 at 0x688a428 by thread #8
==3418==    at 0x6676B0B: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2204)
==3418==    by 0x620C449: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
==3418==    by 0x620F381: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
==3418==    by 0x621081F: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
==3418==    by 0x6217887: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x688a428 is 1296 bytes inside teffloggTable.teff,
==3418==  declared at alxCorrectedMagnitude.c:1980, in frame #0 of thread 5
==3418== 
==3418== Possible data race during read of size 8 at 0x688a9f8 by thread #8
==3418==    at 0x6676B7E: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2208)
==3418==    by 0x620C449: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
==3418==    by 0x620F381: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
==3418==    by 0x621081F: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
==3418==    by 0x6217887: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x688a9f8 is 1320 bytes inside teffloggTable.logg,
==3418==  declared at alxCorrectedMagnitude.c:1980, in frame #0 of thread 5
==3418== 
==3418== Possible data race during read of size 8 at 0x688a9e0 by thread #8
==3418==    at 0x6676B8E: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2209)
==3418==    by 0x620C449: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
==3418==    by 0x620F381: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
==3418==    by 0x621081F: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
==3418==    by 0x6217887: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x688a9e0 is 1296 bytes inside teffloggTable.logg,
==3418==  declared at alxCorrectedMagnitude.c:1980, in frame #0 of thread 5
==3418== 
==3418== Possible data race during read of size 8 at 0x6889ca0 by thread #8
==3418==    at 0x6676A22: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2189)
==3418==    by 0x620C449: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
==3418==    by 0x620F381: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
==3418==    by 0x621081F: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
==3418==    by 0x6217887: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
==3418==    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
==3418==    by 0x5FEDC79: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:257)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==  Location 0x6889ca0 is 0 bytes inside teffloggTable.spectralType[51].quantity,
==3418==  declared at alxCorrectedMagnitude.c:1980, in frame #0 of thread 5
==3418== 
==3418== Possible data race during write of size 8 at 0x850a7f0 by thread #8
==3418==    at 0x82FB709: evhHANDLER::~evhHANDLER() (evhHANDLER.cpp:60)
==3418==    by 0x830011B: evhSERVER::~evhSERVER() (evhSERVER.cpp:70)
==3418==    by 0x621219C: sclsvrSERVER::~sclsvrSERVER() (sclsvrSERVER.cpp:133)
==3418==    by 0x5FEE155: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:304)
==3418==    by 0x5FF7DDF: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
==3418==    by 0x5FF803A: soap_serve_request(soap*) (soapServer.cpp:79)
==3418==    by 0x5FF8121: soap_serve(soap*) (soapServer.cpp:49)
==3418==    by 0x403590: sclwsJobHandler(void*) (sclwsServer.cpp:81)
==3418==    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
==3418==    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
==3418==    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
==3418== 
==3418== Thread #1 is the program's root thread
==3418== 
==3418== Possible data race during read of size 4 at 0x5625a90 by thread #1
==3418==    at 0x53201F4: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
==3418==    by 0x40323C: sclwsExit(int) (sclwsServer.cpp:112)
==3418==    by 0x403574: sclwsSignalHandler(int) (sclwsServer.cpp:132)
==3418==    by 0x89712CF: ??? (in /lib64/libc-2.5.so)
==3418==    by 0x5BD2B38: ??? (in /lib64/libpthread-2.5.so)
==3418==    by 0x410897: soap_accept (stdsoap2_cpp.cpp:4564)
==3418==    by 0x4034D0: main (sclwsServer.cpp:214)
==3418== 
==3418== 
==3418== For counts of detected and suppressed errors, rerun with: -v
==3418== Use --history-level=approx or =none to gain increased speed, at
==3418== the cost of reduced accuracy of conflicting-access information
==3418== ERROR SUMMARY: 8791 errors from 157 contexts (suppressed: 1772861 from 624)

 Helgrind, a thread error detector
 Copyright (C) 2007-2009, and GNU GPL'd, by OpenWorks LLP et al.
 Using Valgrind-3.5.0 and LibVEX; rerun with -h for copyright info
 Command: sclwsServer -v 3
 Parent PID: 15886
 
 
 Valgrind options:
    -v
    --num-callers=8
    --suppressions=./custom_suppressions.txt
    --tool=helgrind
    --conflict-cache-size=30000000
    --read-var-info=yes
    --log-file=./vg_threadcheck.log
 Contents of /proc/version:
   Linux version 2.6.32-4-pve (unknown) (root@oahu) (gcc version 4.3.2 (Debian 4.3.2-1.1) ) #1 SMP Tue Mar 29 09:08:37 CEST 2011
 Arch and hwcaps: AMD64, amd64-sse3-cx16
 Page sizes: currently 4096, max supported 4096
 Valgrind library directory: /usr/lib64/valgrind
 Reading syms from /home/users/bourgesl/dev/SCALIB/DEVELOPMENT/sclws/bin/sclwsServer (0x400000)
 warning: addVar: unknown size (cliHandler)
 Reading syms from /lib64/ld-2.5.so (0x4000000)
 Reading syms from /usr/lib64/valgrind/helgrind-amd64-linux (0x38000000)
    object doesn't have a dynamic symbol table
 Reading suppressions file: ./custom_suppressions.txt
 Reading suppressions file: /usr/lib64/valgrind/default.supp
 Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so (0x4a1d000)
 Reading syms from /usr/lib64/valgrind/vgpreload_helgrind-amd64-linux.so (0x4c1e000)
 REDIR: 0x4014370 (index) redirected to 0x4c24c8b (index)
 REDIR: 0x4014520 (strcmp) redirected to 0x4c24d98 (strcmp)
 REDIR: 0x4014550 (strlen) redirected to 0x4c24cf9 (strlen)
 Reading syms from /usr/lib64/libgdome.so.0.8.1 (0x4e29000)
    object doesn't have a symbol table
 Reading syms from /lib64/libm-2.5.so (0x5067000)
 Reading syms from /usr/lib64/libxml2.so.2.6.26 (0x52ea000)
    object doesn't have a symbol table
 Reading syms from /lib64/libglib-2.0.so.0.1200.3 (0x5627000)
    object doesn't have a symbol table
 Reading syms from /usr/lib64/libstdc++.so.6.0.8 (0x58c5000)
    object doesn't have a symbol table
 Reading syms from /lib64/libpthread-2.5.so (0x5bc5000)
 Reading syms from /lib64/libuuid.so.1.2 (0x5de0000)
    object doesn't have a symbol table
 Reading syms from /home/users/bourgesl/dev/SCALIB/DEVELOPMENT/sclws/lib/libsclws.so (0x5fe4000)
 warning: addVar: unknown size (range)
 warning: addVar: unknown size (threadIterator)
 warning: addVar: unknown size (threadIterator)
 warning: addVar: unknown size (threadIterator)
 warning: addVar: unknown size (dynBuf)
 Reading syms from /home/users/bourgesl/INTROOT/lib/libsclsvr.so (0x6208000)
 warning: addVar: unknown size (scienceObject)
 warning: addVar: unknown size (object)
 warning: addVar: unknown size (cData)
 warning: addVar: unknown size (calibrator)
 Reading syms from /home/users/bourgesl/INTROOT/lib/libvobs.so (0x6440000)
 Reading syms from /home/users/bourgesl/INTROOT/lib/libalx.so (0x66af000)
 Reading syms from /home/users/bourgesl/INTROOT/lib/libsimcli.so (0x68e3000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libthrd.so (0x6aeb000)
 Reading syms from /home/users/bourgesl/INTROOT/lib/libmcs.so (0x6cef000)
 Reading syms from /home/users/bourgesl/INTROOT/lib/liblog.so (0x6ef0000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/liberr.so (0x70f3000)
 Reading syms from /home/users/bourgesl/INTROOT/lib/libmisc.so (0x72fa000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libtimlog.so (0x7503000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libfnd.so (0x7705000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libmisco.so (0x7907000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libenv.so (0x7b0f000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libcmd.so (0x7d14000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libmsg.so (0x7f23000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libsdb.so (0x8132000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libevh.so (0x8335000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libgwt.so (0x8550000)
 Reading syms from /lib64/libgcc_s-4.1.2-20080825.so.1 (0x8778000)
    object doesn't have a symbol table
 Reading syms from /lib64/libc-2.5.so (0x8986000)
 Reading syms from /lib64/libdl-2.5.so (0x8cdd000)
 Reading syms from /usr/lib64/libz.so.1.2.3 (0x8ee1000)
    object doesn't have a symbol table
 Reading syms from /lib64/librt-2.5.so (0x90f5000)
 REDIR: 0x8a020f0 (memcpy) redirected to 0x4c24e3c (memcpy)
 REDIR: 0x89ff2d0 (index) redirected to 0x4c24bc9 (index)
 REDIR: 0x89ffa00 (strlen) redirected to 0x4c24cbb (strlen)
 REDIR: 0x89fa890 (calloc) redirected to 0x4c20942 (calloc)
 REDIR: 0x59821c0 (operator new(unsigned long)) redirected to 0x4c21e9a (operator new(unsigned long))
 REDIR: 0x5980f50 (operator delete(void*)) redirected to 0x4c20f6c (operator delete(void*))
 REDIR: 0x89fac70 (malloc) redirected to 0x4c2164a (malloc)
 REDIR: 0x5bcd5b0 (pthread_mutex_init) redirected to 0x4c25ff1 (pthread_mutex_init)
 REDIR: 0xffffffffff600000 (???) redirected to 0x3802e3b3 (vgPlain_amd64_linux_REDIR_FOR_vgettimeofday)
 REDIR: 0x89f8720 (free) redirected to 0x4c2125a (free)
 REDIR: 0x89ff4c0 (strcpy) redirected to 0x4c24d18 (strcpy)
 REDIR: 0x89ff480 (strcmp) redirected to 0x4c24d46 (strcmp)
 REDIR: 0x5bcdca0 (pthread_mutex_lock) redirected to 0x4c226c2 (pthread_mutex_lock)
 Reading syms from /lib64/libnss_files-2.5.so (0x96fe000)
 REDIR: 0x5bcf020 (pthread_mutex_unlock) redirected to 0x4c22b66 (pthread_mutex_unlock)
 REDIR: 0x5bcb9a0 (pthread_create@@GLIBC_2.2.5) redirected to 0x4c262a5 (pthread_create@*)
 Thread #3 was created
    at 0x8A59F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x4033BD: main (sclwsServer.cpp:202)
 
 Thread #2 was created
    at 0x8A59F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x4033BD: main (sclwsServer.cpp:202)
 
 Possible data race during read of size 8 at 0x854f7f0 by thread #3
    at 0x834052F: evhHANDLER::evhHANDLER() (evhHANDLER.cpp:47)
    by 0x8345AEB: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:44)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
  This conflicts with a previous write of size 8 by thread #2
    at 0x8340535: evhHANDLER::evhHANDLER() (evhHANDLER.cpp:49)
    by 0x8345AEB: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:44)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 Possible data race during write of size 4 at 0x5bb4e10 by thread #2
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 4 by thread #3
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x834574A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 Possible data race during write of size 8 at 0x5bb4e00 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 8 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8345875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 Possible data race during write of size 4 at 0x5bb4e10 by thread #2
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622C676: sclsvrSCENARIO_JSDC::sclsvrSCENARIO_JSDC(sdbENTRY*) (sclsvrSCENARIO_JSDC.cpp:35)
    by 0x62221AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 4 by thread #3
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x834574A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 Possible data race during write of size 8 at 0x5bb4e00 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622C676: sclsvrSCENARIO_JSDC::sclsvrSCENARIO_JSDC(sdbENTRY*) (sclsvrSCENARIO_JSDC.cpp:35)
    by 0x62221AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 8 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8345875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 Possible data race during write of size 4 at 0x5bb4e10 by thread #2
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622E8F8: sclsvrSCENARIO_BRIGHT_K_CATALOG::sclsvrSCENARIO_BRIGHT_K_CATALOG(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K_CATALOG.cpp:43)
    by 0x62221C9: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 4 by thread #3
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x834574A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 Possible data race during write of size 8 at 0x5bb4e00 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622E8F8: sclsvrSCENARIO_BRIGHT_K_CATALOG::sclsvrSCENARIO_BRIGHT_K_CATALOG(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K_CATALOG.cpp:43)
    by 0x62221C9: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 8 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8345875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 Possible data race during write of size 4 at 0x5bb4e10 by thread #2
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230371: sclsvrSCENARIO_BRIGHT_V::sclsvrSCENARIO_BRIGHT_V(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_V.cpp:36)
    by 0x62221E4: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 4 by thread #3
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x834574A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 Possible data race during write of size 8 at 0x5bb4e00 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230371: sclsvrSCENARIO_BRIGHT_V::sclsvrSCENARIO_BRIGHT_V(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_V.cpp:36)
    by 0x62221E4: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 8 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8345875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 Possible data race during write of size 4 at 0x5bb4e10 by thread #2
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230A7A: sclsvrSCENARIO_BRIGHT_N::sclsvrSCENARIO_BRIGHT_N(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_N.cpp:35)
    by 0x62221FF: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 4 by thread #3
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x834574A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 Possible data race during write of size 8 at 0x5bb4e00 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230A7A: sclsvrSCENARIO_BRIGHT_N::sclsvrSCENARIO_BRIGHT_N(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_N.cpp:35)
    by 0x62221FF: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 8 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8345875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 Possible data race during write of size 4 at 0x5bb4e10 by thread #2
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623290A: sclsvrSCENARIO_FAINT_K::sclsvrSCENARIO_FAINT_K(sdbENTRY*) (sclsvrSCENARIO_FAINT_K.cpp:39)
    by 0x622221A: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 4 by thread #3
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x834574A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 Possible data race during write of size 8 at 0x5bb4e00 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623290A: sclsvrSCENARIO_FAINT_K::sclsvrSCENARIO_FAINT_K(sdbENTRY*) (sclsvrSCENARIO_FAINT_K.cpp:39)
    by 0x622221A: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 8 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8345875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 Possible data race during write of size 4 at 0x5bb4e10 by thread #2
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623425E: sclsvrSCENARIO_SINGLE_STAR::sclsvrSCENARIO_SINGLE_STAR(sdbENTRY*) (sclsvrSCENARIO_SINGLE_STAR.cpp:35)
    by 0x6222235: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 4 by thread #3
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x834574A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 Possible data race during write of size 8 at 0x5bb4e00 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623425E: sclsvrSCENARIO_SINGLE_STAR::sclsvrSCENARIO_SINGLE_STAR(sdbENTRY*) (sclsvrSCENARIO_SINGLE_STAR.cpp:35)
    by 0x6222235: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 8 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8345875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D64D: vobsCATALOG::vobsCATALOG(char const*) (vobsCATALOG.cpp:47)
    by 0x647EA44: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
    by 0x6483079: vobsCATALOG_SBSC::vobsCATALOG_SBSC() (vobsCATALOG_SBSC.cpp:41)
    by 0x6485AC0: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
  This conflicts with a previous write of size 8 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D64D: vobsCATALOG::vobsCATALOG(char const*) (vobsCATALOG.cpp:47)
    by 0x647EA44: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
    by 0x6480BC1: vobsCATALOG_DENIS::vobsCATALOG_DENIS() (vobsCATALOG_DENIS.cpp:41)
    by 0x6485AD3: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
  This conflicts with a previous write of size 8 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D64D: vobsCATALOG::vobsCATALOG(char const*) (vobsCATALOG.cpp:47)
    by 0x647EA44: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
    by 0x6480E99: vobsCATALOG_DENIS_JK::vobsCATALOG_DENIS_JK() (vobsCATALOG_DENIS_JK.cpp:35)
    by 0x6485AE6: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
  This conflicts with a previous write of size 8 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D64D: vobsCATALOG::vobsCATALOG(char const*) (vobsCATALOG.cpp:47)
    by 0x647F04F: vobsLOCAL_CATALOG::vobsLOCAL_CATALOG(char const*, char const*) (vobsLOCAL_CATALOG.cpp:39)
    by 0x6483C7E: vobsCATALOG_MIDI::vobsCATALOG_MIDI() (vobsCATALOG_MIDI.cpp:37)
    by 0x6485AF9: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
  This conflicts with a previous write of size 8 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D64D: vobsCATALOG::vobsCATALOG(char const*) (vobsCATALOG.cpp:47)
    by 0x647EA44: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
    by 0x6483F85: vobsCATALOG_UNSO::vobsCATALOG_UNSO() (vobsCATALOG_UNSO.cpp:34)
    by 0x6485B0C: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
  This conflicts with a previous write of size 8 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D64D: vobsCATALOG::vobsCATALOG(char const*) (vobsCATALOG.cpp:47)
    by 0x647EA44: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
    by 0x6483F85: vobsCATALOG_UNSO::vobsCATALOG_UNSO() (vobsCATALOG_UNSO.cpp:34)
    by 0x6485B0C: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
  This conflicts with a previous write of size 8 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647EA90: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:58)
    by 0x6483F85: vobsCATALOG_UNSO::vobsCATALOG_UNSO() (vobsCATALOG_UNSO.cpp:34)
    by 0x6485B0C: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
  This conflicts with a previous write of size 8 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 Thread #5 was created
    at 0x8A59F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x4033BD: main (sclwsServer.cpp:202)
 
 Possible data race during write of size 4 at 0x5bb4e10 by thread #5
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478E2E: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6223FBA: sclsvrREQUEST::sclsvrREQUEST() (sclsvrREQUEST.cpp:38)
    by 0x6226F03: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:178)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 4 by thread #2
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 Possible data race during write of size 8 at 0x5bb4e00 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478E2E: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6223FBA: sclsvrREQUEST::sclsvrREQUEST() (sclsvrREQUEST.cpp:38)
    by 0x6226F03: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:178)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 REDIR: 0x89fb190 (realloc) redirected to 0x4c216fb (realloc)
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D64D: vobsCATALOG::vobsCATALOG(char const*) (vobsCATALOG.cpp:47)
    by 0x647EA44: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
    by 0x6484221: vobsCATALOG_SB9::vobsCATALOG_SB9() (vobsCATALOG_SB9.cpp:34)
    by 0x6485B1F: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478E2E: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6223FBA: sclsvrREQUEST::sclsvrREQUEST() (sclsvrREQUEST.cpp:38)
    by 0x6226F03: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:178)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D64D: vobsCATALOG::vobsCATALOG(char const*) (vobsCATALOG.cpp:47)
    by 0x647EA44: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
    by 0x64844E5: vobsCATALOG_WDS::vobsCATALOG_WDS() (vobsCATALOG_WDS.cpp:34)
    by 0x6485B32: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478E2E: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6223FBA: sclsvrREQUEST::sclsvrREQUEST() (sclsvrREQUEST.cpp:38)
    by 0x6226F03: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:178)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 REDIR: 0x5bcd740 (pthread_mutex_destroy) redirected to 0x4c2257a (pthread_mutex_destroy)
 REDIR: 0x89fb0e0 (posix_memalign) redirected to 0x4c208f7 (posix_memalign)
 Possible data race during write of size 4 at 0x5bb4e10 by thread #5
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #2
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 Possible data race during write of size 8 at 0x5bb4e00 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 Thread #4 was created
    at 0x8A59F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x4033BD: main (sclwsServer.cpp:202)
 
 Possible data race during read of size 4 at 0x9339d60 by thread #5
    at 0x81333B4: sdbENTRY::IsInit() (sdbENTRY.cpp:225)
    by 0x8133427: sdbENTRY::Write(char const*) (sdbENTRY.cpp:88)
    by 0x648A23E: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:242)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 4 by thread #4
    at 0x8133342: sdbENTRY::Destroy() (sdbENTRY.cpp:272)
    by 0x813335A: sdbENTRY::Init() (sdbENTRY.cpp:239)
    by 0x813356C: sdbENTRY::Read(char*, mcsLOGICAL, int) (sdbENTRY.cpp:142)
    by 0x6227A9A: sclsvrSERVER::GetStatus(char*, int) (sclsvrGetCalCB.cpp:68)
    by 0x5FF3054: ns__GetCalQueryStatus(soap*, char*, char**) (sclwsWS.cpp:429)
    by 0x6000544: soap_serve_ns__GetCalQueryStatus(soap*) (soapServer.cpp:191)
    by 0x6000CC4: soap_serve_request(soap*) (soapServer.cpp:81)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D64D: vobsCATALOG::vobsCATALOG(char const*) (vobsCATALOG.cpp:47)
    by 0x647EA44: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
    by 0x64847D1: vobsCATALOG_AKARI::vobsCATALOG_AKARI() (vobsCATALOG_AKARI.cpp:34)
    by 0x6485B45: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #3
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 4 by thread #5
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 1 at 0x5bb4e18 by thread #3
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 1 by thread #5
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622C676: sclsvrSCENARIO_JSDC::sclsvrSCENARIO_JSDC(sdbENTRY*) (sclsvrSCENARIO_JSDC.cpp:35)
    by 0x62221AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #3
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622C676: sclsvrSCENARIO_JSDC::sclsvrSCENARIO_JSDC(sdbENTRY*) (sclsvrSCENARIO_JSDC.cpp:35)
    by 0x62221AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 4 by thread #5
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 1 at 0x5bb4e18 by thread #3
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622C676: sclsvrSCENARIO_JSDC::sclsvrSCENARIO_JSDC(sdbENTRY*) (sclsvrSCENARIO_JSDC.cpp:35)
    by 0x62221AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 1 by thread #5
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622E8F8: sclsvrSCENARIO_BRIGHT_K_CATALOG::sclsvrSCENARIO_BRIGHT_K_CATALOG(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K_CATALOG.cpp:43)
    by 0x62221C9: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #3
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622E8F8: sclsvrSCENARIO_BRIGHT_K_CATALOG::sclsvrSCENARIO_BRIGHT_K_CATALOG(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K_CATALOG.cpp:43)
    by 0x62221C9: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 4 by thread #5
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 1 at 0x5bb4e18 by thread #3
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622E8F8: sclsvrSCENARIO_BRIGHT_K_CATALOG::sclsvrSCENARIO_BRIGHT_K_CATALOG(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K_CATALOG.cpp:43)
    by 0x62221C9: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 1 by thread #5
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230371: sclsvrSCENARIO_BRIGHT_V::sclsvrSCENARIO_BRIGHT_V(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_V.cpp:36)
    by 0x62221E4: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #3
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230371: sclsvrSCENARIO_BRIGHT_V::sclsvrSCENARIO_BRIGHT_V(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_V.cpp:36)
    by 0x62221E4: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 4 by thread #5
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 1 at 0x5bb4e18 by thread #3
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230371: sclsvrSCENARIO_BRIGHT_V::sclsvrSCENARIO_BRIGHT_V(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_V.cpp:36)
    by 0x62221E4: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 1 by thread #5
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230A7A: sclsvrSCENARIO_BRIGHT_N::sclsvrSCENARIO_BRIGHT_N(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_N.cpp:35)
    by 0x62221FF: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #3
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230A7A: sclsvrSCENARIO_BRIGHT_N::sclsvrSCENARIO_BRIGHT_N(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_N.cpp:35)
    by 0x62221FF: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 4 by thread #5
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 1 at 0x5bb4e18 by thread #3
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230A7A: sclsvrSCENARIO_BRIGHT_N::sclsvrSCENARIO_BRIGHT_N(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_N.cpp:35)
    by 0x62221FF: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 1 by thread #5
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623290A: sclsvrSCENARIO_FAINT_K::sclsvrSCENARIO_FAINT_K(sdbENTRY*) (sclsvrSCENARIO_FAINT_K.cpp:39)
    by 0x622221A: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #3
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623290A: sclsvrSCENARIO_FAINT_K::sclsvrSCENARIO_FAINT_K(sdbENTRY*) (sclsvrSCENARIO_FAINT_K.cpp:39)
    by 0x622221A: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 4 by thread #5
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 1 at 0x5bb4e18 by thread #3
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623290A: sclsvrSCENARIO_FAINT_K::sclsvrSCENARIO_FAINT_K(sdbENTRY*) (sclsvrSCENARIO_FAINT_K.cpp:39)
    by 0x622221A: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 1 by thread #5
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623425E: sclsvrSCENARIO_SINGLE_STAR::sclsvrSCENARIO_SINGLE_STAR(sdbENTRY*) (sclsvrSCENARIO_SINGLE_STAR.cpp:35)
    by 0x6222235: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #3
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623425E: sclsvrSCENARIO_SINGLE_STAR::sclsvrSCENARIO_SINGLE_STAR(sdbENTRY*) (sclsvrSCENARIO_SINGLE_STAR.cpp:35)
    by 0x6222235: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 4 by thread #5
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 1 at 0x5bb4e18 by thread #3
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623425E: sclsvrSCENARIO_SINGLE_STAR::sclsvrSCENARIO_SINGLE_STAR(sdbENTRY*) (sclsvrSCENARIO_SINGLE_STAR.cpp:35)
    by 0x6222235: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 1 by thread #5
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473206: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:68)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x646BAF8: vobsSTAR::AddProperties() (vobsSTAR.cpp:1053)
    by 0x646CD49: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x64835CB: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:95)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 8 by thread #3
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #5
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646FDAC: std::pair<int const, std::string>::pair(int const&, std::string const&) (stl_pair.h:85)
    by 0x6471842: std::map<int, std::string, std::less<int>, std::allocator<std::pair<int const, std::string> > >::operator[](int const&) (stl_map.h:348)
    by 0x646B9F6: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x646BAF8: vobsSTAR::AddProperties() (vobsSTAR.cpp:1053)
    by 0x646CD49: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x64835CB: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:95)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous write of size 4 by thread #3
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x64732C5: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:98)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x646C0A6: vobsSTAR::AddProperties() (vobsSTAR.cpp:1115)
    by 0x646CD49: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x64835CB: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:95)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 8 by thread #3
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x646C0A6: vobsSTAR::AddProperties() (vobsSTAR.cpp:1115)
    by 0x646CD49: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x64835CB: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:95)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
  This conflicts with a previous write of size 8 by thread #3
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473206: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:68)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x646C0E4: vobsSTAR::AddProperties() (vobsSTAR.cpp:1117)
    by 0x646CD49: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x64835CB: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:95)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 8 by thread #3
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647375D: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY() (vobsSTAR_PROPERTY.cpp:42)
    by 0x6470A67: std::map<std::string, vobsSTAR_PROPERTY, std::less<std::string>, std::allocator<std::pair<std::string const, vobsSTAR_PROPERTY> > >::operator[](std::string const&) (stl_map.h:348)
    by 0x646B989: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1036)
    by 0x646CCE5: vobsSTAR::AddProperties() (vobsSTAR.cpp:1237)
    by 0x646CD49: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x64835CB: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:95)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous write of size 8 by thread #3
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x646CCE5: vobsSTAR::AddProperties() (vobsSTAR.cpp:1237)
    by 0x646CD49: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x64835CB: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:95)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
  This conflicts with a previous write of size 8 by thread #3
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 Thread #7 was created
    at 0x8A59F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x4033BD: main (sclwsServer.cpp:202)
 
 Possible data race during write of size 4 at 0x750283c by thread #7
    at 0x72FCF62: miscDynBufReset (miscDynBuf.c:466)
    by 0x72FE835: miscResolvePath (miscFile.c:473)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
  This conflicts with a previous write of size 4 by thread #5
    at 0x72FCF62: miscDynBufReset (miscDynBuf.c:466)
    by 0x72FE835: miscResolvePath (miscFile.c:473)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 Possible data race during read of size 4 at 0x7502840 by thread #7
    at 0x72FDE8A: miscDynBufAppendBytes (miscDynBuf.c:1499)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA5B: miscResolvePath (miscFile.c:555)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
  This conflicts with a previous write of size 4 by thread #5
    at 0x72FCF1F: miscDynBufStrip (miscDynBuf.c:433)
    by 0x72FEBE6: miscResolvePath (miscFile.c:640)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 Possible data race during read of size 8 at 0x7502830 by thread #7
    at 0x72FDEC9: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA5B: miscResolvePath (miscFile.c:555)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
  This conflicts with a previous write of size 8 by thread #5
    at 0x72FCF10: miscDynBufStrip (miscDynBuf.c:430)
    by 0x72FEBE6: miscResolvePath (miscFile.c:640)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 Possible data race during write of size 1 at 0x9367ff0 by thread #7
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA5B: miscResolvePath (miscFile.c:555)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
 
 Possible data race during write of size 1 at 0x9368001 by thread #7
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA8C: miscResolvePath (miscFile.c:563)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
 
 Possible data race during write of size 8 at 0x7502830 by thread #7
    at 0x72FCF10: miscDynBufStrip (miscDynBuf.c:430)
    by 0x72FEBE6: miscResolvePath (miscFile.c:640)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
  This conflicts with a previous write of size 8 by thread #5
    at 0x72FCF10: miscDynBufStrip (miscDynBuf.c:430)
    by 0x72FEBE6: miscResolvePath (miscFile.c:640)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 Possible data race during write of size 4 at 0x7502840 by thread #7
    at 0x72FCF1F: miscDynBufStrip (miscDynBuf.c:433)
    by 0x72FEBE6: miscResolvePath (miscFile.c:640)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
  This conflicts with a previous write of size 4 by thread #5
    at 0x72FCF1F: miscDynBufStrip (miscDynBuf.c:433)
    by 0x72FEBE6: miscResolvePath (miscFile.c:640)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 Possible data race during write of size 4 at 0x750287c by thread #7
    at 0x72FCF62: miscDynBufReset (miscDynBuf.c:466)
    by 0x72FEEE7: miscLocateFileInPath (miscFile.c:780)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 4 by thread #5
    at 0x72FCF62: miscDynBufReset (miscDynBuf.c:466)
    by 0x72FEEE7: miscLocateFileInPath (miscFile.c:780)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
 
 Possible data race during read of size 4 at 0x7502880 by thread #7
    at 0x72FDE8A: miscDynBufAppendBytes (miscDynBuf.c:1499)
    by 0x72FEF71: miscLocateFileInPath (miscFile.c:805)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 4 by thread #5
    at 0x72FCE03: miscDynBufAlloc (miscDynBuf.c:377)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEF99: miscLocateFileInPath (miscFile.c:807)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
 
 Possible data race during read of size 8 at 0x7502870 by thread #7
    at 0x72FDEC9: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FEF71: miscLocateFileInPath (miscFile.c:805)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #5
    at 0x72FCDC6: miscDynBufAlloc (miscDynBuf.c:370)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEF99: miscLocateFileInPath (miscFile.c:807)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
 
 Possible data race during write of size 1 at 0x9341200 by thread #7
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FEF71: miscLocateFileInPath (miscFile.c:805)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 1 by thread #5
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA5B: miscResolvePath (miscFile.c:555)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
 
 Possible data race during write of size 1 at 0x9341209 by thread #7
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FEF89: miscLocateFileInPath (miscFile.c:806)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 1 by thread #5
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA5B: miscResolvePath (miscFile.c:555)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
 
 Possible data race during write of size 1 at 0x934120a by thread #7
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEF99: miscLocateFileInPath (miscFile.c:807)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
  This conflicts with a previous write of size 1 by thread #5
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA5B: miscResolvePath (miscFile.c:555)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
 
 Possible data race during write of size 1 at 0xdbf7e2a by thread #7
    at 0x72FCDFA: miscDynBufAlloc (miscDynBuf.c:374)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA5B: miscResolvePath (miscFile.c:555)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FEFB7: miscLocateFileInPath (miscFile.c:811)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
 
 Possible data race during write of size 1 at 0xdbf7be0 by thread #7
    at 0x72FCDFA: miscDynBufAlloc (miscDynBuf.c:374)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FE93B: miscResolvePath (miscFile.c:511)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FEFB7: miscLocateFileInPath (miscFile.c:811)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
 
 Possible data race during write of size 8 at 0x7502870 by thread #7
    at 0x72FCF10: miscDynBufStrip (miscDynBuf.c:430)
    by 0x72FF01D: miscLocateFileInPath (miscFile.c:833)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #5
    at 0x72FCDC6: miscDynBufAlloc (miscDynBuf.c:370)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEF99: miscLocateFileInPath (miscFile.c:807)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
 
 Possible data race during write of size 4 at 0x7502880 by thread #7
    at 0x72FCF1F: miscDynBufStrip (miscDynBuf.c:433)
    by 0x72FF01D: miscLocateFileInPath (miscFile.c:833)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 4 by thread #5
    at 0x72FCE03: miscDynBufAlloc (miscDynBuf.c:377)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEF99: miscLocateFileInPath (miscFile.c:807)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
 
 Possible data race during read of size 1 at 0xdbf7e20 by thread #7
    at 0x72FCBA6: miscDynBufChkStringParam (miscDynBuf.c:252)
    by 0x72FDF1E: miscDynBufAppendString (miscDynBuf.c:1537)
    by 0x72FE7DE: miscResolvePath (miscFile.c:459)
    by 0x7D17560: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:966)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
 
 Possible data race during write of size 1 at 0xdbf7e20 by thread #7
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA5B: miscResolvePath (miscFile.c:555)
    by 0x7D17560: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:966)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
 
 Possible data race during write of size 1 at 0xdbf7e21 by thread #7
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA8C: miscResolvePath (miscFile.c:563)
    by 0x7D17560: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:966)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
 
 Possible data race during read of size 1 at 0x9367ff0 by thread #7
    at 0x5386974: xmlStrncasecmp (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341822: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341925: xmlLoadExternalEntity (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647F0CA: bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2200)
    by 0x647ED17: vobsLOCAL_CATALOG::SetOption(std::string) (vobsLOCAL_CATALOG.cpp:123)
    by 0x648A4D7: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:277)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478E2E: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6223FBA: sclsvrREQUEST::sclsvrREQUEST() (sclsvrREQUEST.cpp:38)
    by 0x6226F03: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:178)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during read of size 1 at 0x9367ff0 by thread #7
    at 0x53423D2: __xmlParserInputBufferCreateFilename (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531BECA: xmlNewInputFromFile (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342E6C: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
 
 Possible data race during read of size 1 at 0x9367ff1 by thread #7
    at 0x5387314: xmlStrdup (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C004: xmlNewInputFromFile (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342E6C: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x646C4E4: vobsSTAR::AddProperties() (vobsSTAR.cpp:1154)
    by 0x646CE15: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x621E46B: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:56)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473206: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:68)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x62174B8: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2217)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x621793F: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2264)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473206: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:68)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x6217ED5: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2307)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473206: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:68)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x646BD16: vobsSTAR::AddProperties() (vobsSTAR.cpp:1076)
    by 0x646CE15: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x621E46B: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:56)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473217: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:69)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x646BD16: vobsSTAR::AddProperties() (vobsSTAR.cpp:1076)
    by 0x646CE15: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x621E46B: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:56)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473295: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:89)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x646C376: vobsSTAR::AddProperties() (vobsSTAR.cpp:1139)
    by 0x646CE15: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x621E46B: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:56)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x64732DD: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:103)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x646C376: vobsSTAR::AddProperties() (vobsSTAR.cpp:1139)
    by 0x646CE15: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x621E46B: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:56)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x62174F5: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2219)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #5
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646FDE0: std::pair<int const, std::string>::pair(std::pair<int const, std::string> const&) (stl_pair.h:69)
    by 0x646FE1E: __gnu_cxx::new_allocator<std::pair<int const, std::string> >::construct(std::pair<int const, std::string>*, std::pair<int const, std::string> const&) (new_allocator.h:104)
    by 0x6470FEA: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_create_node(std::pair<int const, std::string> const&) (stl_tree.h:369)
    by 0x64710CC: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<int const, std::string> const&) (stl_tree.h:819)
    by 0x6471412: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::insert_unique(std::_Rb_tree_iterator<std::pair<int const, std::string> >, std::pair<int const, std::string> const&) (stl_tree.h:947)
    by 0x64717AA: std::map<int, std::string, std::less<int>, std::allocator<std::pair<int const, std::string> > >::insert(std::_Rb_tree_iterator<std::pair<int const, std::string> >, std::pair<int const, std::string> const&) (stl_map.h:420)
    by 0x6471853: std::map<int, std::string, std::less<int>, std::allocator<std::pair<int const, std::string> > >::operator[](int const&) (stl_map.h:348)
  This conflicts with a previous write of size 4 by thread #7
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x6217794: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2246)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x6217794: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2246)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473206: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:68)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x62177D1: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2249)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x62177D1: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2249)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x621780E: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2251)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x621784B: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2254)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x6217888: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2256)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x62178C5: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2259)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 More than 100 errors detected.  Subsequent errors
 will still be recorded, but in less detail than before.
 Possible data race during read of size 8 at 0x92ff730 by thread #7
    at 0x730028B: miscHashLookUp (miscHash.c:189)
    by 0x7300440: miscHashAddElement (miscHash.c:304)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #5
    at 0x73006D4: miscHashDeleteElement (miscHash.c:419)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 8 at 0x92ff730 by thread #7
    at 0x73004DB: miscHashAddElement (miscHash.c:327)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #5
    at 0x73006D4: miscHashDeleteElement (miscHash.c:419)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 8 at 0x7502870 by thread #7
    at 0x72FCDC6: miscDynBufAlloc (miscDynBuf.c:370)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEF99: miscLocateFileInPath (miscFile.c:807)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
  This conflicts with a previous write of size 8 by thread #5
    at 0x72FCDC6: miscDynBufAlloc (miscDynBuf.c:370)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEF99: miscLocateFileInPath (miscFile.c:807)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
 
 Possible data race during write of size 4 at 0x7502880 by thread #7
    at 0x72FCE03: miscDynBufAlloc (miscDynBuf.c:377)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEF99: miscLocateFileInPath (miscFile.c:807)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
  This conflicts with a previous write of size 4 by thread #5
    at 0x72FCE03: miscDynBufAlloc (miscDynBuf.c:377)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEF99: miscLocateFileInPath (miscFile.c:807)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
 
 Possible data race during read of size 1 at 0x9367ff0 by thread #7
    at 0x72FEC58: miscFileExists (miscFile.c:667)
    by 0x72FEFB7: miscLocateFileInPath (miscFile.c:811)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473302: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:108)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x646C2FC: vobsSTAR::AddProperties() (vobsSTAR.cpp:1134)
    by 0x646CD49: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x6218D82: sclsvrCALIBRATOR::ComputeDistance(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:1884)
    by 0x621E3C9: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:561)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5961D28: std::string::append(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x7D1BDB4: cmdCOMMAND::AppendParamsToVOTable(std::string&) (basic_string.h:822)
    by 0x62228BE: sclsvrREQUEST::AppendParamsToVOTable(std::string&) (sclsvrREQUEST.cpp:622)
    by 0x622752F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:360)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #5
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x7D1D040: cmdPARAM::GetUnit() (cmdPARAM.cpp:114)
    by 0x7D1BFCE: cmdCOMMAND::AppendParamsToVOTable(std::string&) (cmdCOMMAND.cpp:386)
    by 0x62228BE: sclsvrREQUEST::AppendParamsToVOTable(std::string&) (sclsvrREQUEST.cpp:622)
    by 0x622752F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:360)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 4 by thread #7
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5960653: std::string::length() const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6472CD0: vobsSTAR_PROPERTY::GetLink() const (vobsSTAR_PROPERTY.cpp:486)
    by 0x64942A6: vobsVOTABLE::GetVotable(vobsSTAR_LIST&, char const*, char const*, char const*, char const*, char const*, miscoDYN_BUF*) (vobsVOTABLE.cpp:230)
    by 0x6475267: vobsSTAR_LIST::GetVOTable(char const*, char const*, char const*, char const*, miscoDYN_BUF*) (vobsSTAR_LIST.cpp:556)
    by 0x62275D0: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:376)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5960653: std::string::length() const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6472D38: vobsSTAR_PROPERTY::GetDescription() const (vobsSTAR_PROPERTY.cpp:468)
    by 0x649425A: vobsVOTABLE::GetVotable(vobsSTAR_LIST&, char const*, char const*, char const*, char const*, char const*, miscoDYN_BUF*) (vobsVOTABLE.cpp:221)
    by 0x6475267: vobsSTAR_LIST::GetVOTable(char const*, char const*, char const*, char const*, miscoDYN_BUF*) (vobsSTAR_LIST.cpp:556)
    by 0x62275D0: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:376)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x92fe698 by thread #5
    at 0x7300768: miscHashGetElement (miscHash.c:462)
    by 0x75039E8: timlogStop (timlog.c:128)
    by 0x62277EC: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:432)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 8 by thread #7
    at 0x73005C1: miscHashAddElement (miscHash.c:365)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x6226F61: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:189)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 Possible data race during read of size 4 at 0x9302668 by thread #5
    at 0x7503A25: timlogStop (timlog.c:143)
    by 0x62277EC: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:432)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
  This conflicts with a previous write of size 8 by thread #4
    at 0x405B44: soap_free_iht (stdsoap2_cpp.cpp:5472)
    by 0x405E76: soap_end (stdsoap2_cpp.cpp:6862)
    by 0x4034A8: sclwsJobHandler(void*) (sclwsServer.cpp:79)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A59F6C: clone (in /lib64/libc-2.5.so)
 
 Possible data race during read of size 4 at 0x9302670 by thread #5
    at 0x7503A35: timlogStop (timlog.c:146)
    by 0x62277EC: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:432)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
  This conflicts with a previous write of size 8 by thread #4
    at 0x405B44: soap_free_iht (stdsoap2_cpp.cpp:5472)
    by 0x405E76: soap_end (stdsoap2_cpp.cpp:6862)
    by 0x4034A8: sclwsJobHandler(void*) (sclwsServer.cpp:79)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A59F6C: clone (in /lib64/libc-2.5.so)
 
 Possible data race during read of size 4 at 0x9302660 by thread #5
    at 0x7503AD4: timlogStop (timlog.c:163)
    by 0x62277EC: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:432)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
  This conflicts with a previous write of size 8 by thread #4
    at 0x405B44: soap_free_iht (stdsoap2_cpp.cpp:5472)
    by 0x405E76: soap_end (stdsoap2_cpp.cpp:6862)
    by 0x4034A8: sclwsJobHandler(void*) (sclwsServer.cpp:79)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A59F6C: clone (in /lib64/libc-2.5.so)
 
 Possible data race during write of size 8 at 0x92ff720 by thread #5
    at 0x73006D4: miscHashDeleteElement (miscHash.c:419)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x62277EC: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:432)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous read of size 8 by thread #7
    at 0x730028B: miscHashLookUp (miscHash.c:189)
    by 0x7300440: miscHashAddElement (miscHash.c:304)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x6226F61: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:189)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
 
 Possible data race during read of size 4 at 0x92fe6a0 by thread #5
    at 0x73006E7: miscHashDeleteElement (miscHash.c:427)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x62277EC: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:432)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 4 by thread #7
    at 0x73005CC: miscHashAddElement (miscHash.c:366)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x6226F61: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:189)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 Possible data race during read of size 8 at 0x92ff730 by thread #7
    at 0x730028B: miscHashLookUp (miscHash.c:189)
    by 0x7300758: miscHashGetElement (miscHash.c:456)
    by 0x75039E8: timlogStop (timlog.c:128)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #5
    at 0x73006D4: miscHashDeleteElement (miscHash.c:419)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during read of size 4 at 0x68d5540 by thread #7
    at 0x66B9C3B: alxGetTeffLoggTable (alxCorrectedMagnitude.c:1986)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #5
    at 0x66B9F79: alxGetTeffLoggTable (alxCorrectedMagnitude.c:2062)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  Location 0x68d5540 is 0 bytes inside teffloggTable.loaded,
  declared at alxCorrectedMagnitude.c:1980, in frame #0 of thread 5
 
 Possible data race during read of size 4 at 0x68d5550 by thread #7
    at 0x66BA084: alxGetLineForTeffLogg (alxCorrectedMagnitude.c:2079)
    by 0x66BA20A: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2179)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #5
    at 0x66B9F73: alxGetTeffLoggTable (alxCorrectedMagnitude.c:2059)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 1 at 0x68d5558 by thread #7
    at 0x66BA00D: alxGetLineForTeffLogg (alxCorrectedMagnitude.c:2082)
    by 0x66BA20A: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2179)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 1 by thread #5
    at 0x89DA461: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B9EEB: alxGetTeffLoggTable (alxCorrectedMagnitude.c:2042)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 8 at 0x68d6060 by thread #7
    at 0x66BA030: alxGetLineForTeffLogg (alxCorrectedMagnitude.c:2088)
    by 0x66BA20A: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2179)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #5
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B9EEB: alxGetTeffLoggTable (alxCorrectedMagnitude.c:2042)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 8 at 0x68d6920 by thread #7
    at 0x66BA319: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2207)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #5
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B9EEB: alxGetTeffLoggTable (alxCorrectedMagnitude.c:2042)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 8 at 0x68d6908 by thread #7
    at 0x66BA340: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2208)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #5
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B9EEB: alxGetTeffLoggTable (alxCorrectedMagnitude.c:2042)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 8 at 0x68d6ed8 by thread #7
    at 0x66BA3AE: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2212)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #5
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B9EEB: alxGetTeffLoggTable (alxCorrectedMagnitude.c:2042)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 8 at 0x68d6ec0 by thread #7
    at 0x66BA3D5: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2213)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #5
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B9EEB: alxGetTeffLoggTable (alxCorrectedMagnitude.c:2042)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 8 at 0x68d6020 by thread #7
    at 0x66BA26A: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2193)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #5
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B9EEB: alxGetTeffLoggTable (alxCorrectedMagnitude.c:2042)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 8 at 0x854f7f0 by thread #7
    at 0x8340704: evhHANDLER::~evhHANDLER() (evhHANDLER.cpp:58)
    by 0x834511B: evhSERVER::~evhSERVER() (evhSERVER.cpp:70)
    by 0x6221BC3: sclsvrSERVER::~sclsvrSERVER() (sclsvrSERVER.cpp:133)
    by 0x5FF3EF7: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:362)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
  This conflicts with a previous write of size 8 by thread #5
    at 0x8340709: evhHANDLER::~evhHANDLER() (evhHANDLER.cpp:60)
    by 0x834511B: evhSERVER::~evhSERVER() (evhSERVER.cpp:70)
    by 0x6221BC3: sclsvrSERVER::~sclsvrSERVER() (sclsvrSERVER.cpp:133)
    by 0x5FF3EF7: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:362)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 Thread #10 was created
    at 0x8A59F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x4033BD: main (sclwsServer.cpp:202)
 
 Possible data race during write of size 8 at 0x854f7f0 by thread #10
    at 0x8340535: evhHANDLER::evhHANDLER() (evhHANDLER.cpp:49)
    by 0x8345AEB: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:44)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
  This conflicts with a previous read of size 8 by thread #7
    at 0x8340704: evhHANDLER::~evhHANDLER() (evhHANDLER.cpp:58)
    by 0x834511B: evhSERVER::~evhSERVER() (evhSERVER.cpp:70)
    by 0x6221BC3: sclsvrSERVER::~sclsvrSERVER() (sclsvrSERVER.cpp:133)
    by 0x5FF3EF7: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:362)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #10
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x834574A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 4 by thread #7
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #10
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8345875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Thread #13 was created
    at 0x8A59F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x4033BD: main (sclwsServer.cpp:202)
 
 Possible data race during write of size 4 at 0xb10b890 by thread #13
    at 0x8EE4F8E: ??? (in /usr/lib64/libz.so.1.2.3)
    by 0x53422A5: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x534237A: __xmlParserInputBufferCreateFilename (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531BECA: xmlNewInputFromFile (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342E6C: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
  This conflicts with a previous read of size 4 by thread #10
    at 0x89C8720: vfprintf (in /lib64/libc-2.5.so)
    by 0x89E9B48: vsprintf (in /lib64/libc-2.5.so)
    by 0x89D3527: sprintf (in /lib64/libc-2.5.so)
    by 0x40DBC4: soap_element (stdsoap2_cpp.cpp:7169)
    by 0x40E4DF: soap_element_begin_out (stdsoap2_cpp.cpp:7246)
    by 0x6000AE1: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:111)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 Thread #15 was created
    at 0x8A59F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x4033BD: main (sclwsServer.cpp:202)
 
 Possible data race during read of size 4 at 0x92ffd90 by thread #15
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D17555: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:963)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CD3F: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:84)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 4 at 0x92ffd90 by thread #15
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D17555: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:963)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CD3F: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:84)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x92ffd90 by thread #15
    at 0x4E507D7: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1766D: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1003)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CD3F: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:84)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 4 at 0x92ffd90 by thread #15
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1766D: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1003)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CD3F: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:84)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x5626b10 by thread #13
    at 0x4E50281: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #15
    at 0x4E50488: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 4 at 0x5626b10 by thread #13
    at 0x4E50330: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #15
    at 0x4E50488: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during read of size 4 at 0x5626e18 by thread #13
    at 0x53D1B83: xmlDictCreate (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C9DB: xmlInitParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531CA4D: xmlNewParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECAE: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 4 by thread #15
    at 0x53D193A: xmlDictCleanup (in /usr/lib64/libxml2.so.2.6.26)
    by 0x532020E: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5626e20 by thread #13
    at 0x53D197A: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D1B91: xmlDictCreate (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C9DB: xmlInitParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531CA4D: xmlNewParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECAE: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
  This conflicts with a previous read of size 8 by thread #15
    at 0x53D192E: xmlDictCleanup (in /usr/lib64/libxml2.so.2.6.26)
    by 0x532020E: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 4 at 0x5626e18 by thread #13
    at 0x53D1985: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D1B91: xmlDictCreate (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C9DB: xmlInitParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531CA4D: xmlNewParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECAE: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
  This conflicts with a previous write of size 4 by thread #15
    at 0x53D193A: xmlDictCleanup (in /usr/lib64/libxml2.so.2.6.26)
    by 0x532020E: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5625a50 by thread #13
    at 0x53191F0: xmlGetCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341EEA: xmlAllocParserInputBuffer (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342000: xmlParserInputBufferCreateMem (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECC3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5317BD8: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625a50 by thread #13
    at 0x5318E4B: xmlInitCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531924B: xmlGetCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341EEA: xmlAllocParserInputBuffer (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342000: xmlParserInputBufferCreateMem (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECC3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5317BD8: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 4 at 0x5621368 by thread #13
    at 0x5318E67: xmlInitCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531924B: xmlGetCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341EEA: xmlAllocParserInputBuffer (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342000: xmlParserInputBufferCreateMem (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECC3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
  This conflicts with a previous write of size 4 by thread #15
    at 0x5318E67: xmlInitCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320299: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333994: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
 
 Possible data race during read of size 4 at 0x5625a60 by thread #13
    at 0x5319393: xmlRegisterCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5318DB2: xmlNewCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5318E94: xmlInitCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531924B: xmlGetCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341EEA: xmlAllocParserInputBuffer (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342000: xmlParserInputBufferCreateMem (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECC3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
  This conflicts with a previous write of size 4 by thread #15
    at 0x5317B93: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 4 at 0x5625a60 by thread #13
    at 0x53193B0: xmlRegisterCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x382D465454: ???
    by 0x4008BFF: check_match.8508 (in /lib64/ld-2.5.so)
    by 0x4008F63: do_lookup_x (in /lib64/ld-2.5.so)
    by 0x4009161: _dl_lookup_symbol_x (in /lib64/ld-2.5.so)
    by 0x5341EEA: xmlAllocParserInputBuffer (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342000: xmlParserInputBufferCreateMem (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECC3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
  This conflicts with a previous write of size 4 by thread #15
    at 0x5317B93: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625a68 by thread #13
    at 0x5318EC4: xmlInitCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531924B: xmlGetCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341EEA: xmlAllocParserInputBuffer (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342000: xmlParserInputBufferCreateMem (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECC3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5318EC4: xmlInitCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320299: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333994: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
 
 Possible data race during write of size 8 at 0x5625a70 by thread #13
    at 0x5318EE5: xmlInitCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531924B: xmlGetCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341EEA: xmlAllocParserInputBuffer (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342000: xmlParserInputBufferCreateMem (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECC3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5318EE5: xmlInitCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320299: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333994: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
 
 Possible data race during read of size 4 at 0x5625a8c by thread #13
    at 0x531BE49: xmlNewInputStream (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECD3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 4 by thread #15
    at 0x531BE6A: xmlNewInputStream (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531BF37: xmlNewInputFromFile (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342E6C: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
 
 Possible data race during write of size 4 at 0x5625a8c by thread #13
    at 0x531BE6A: xmlNewInputStream (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECD3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 4 by thread #15
    at 0x531BE6A: xmlNewInputStream (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531BF37: xmlNewInputFromFile (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342E6C: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
 
 Possible data race during read of size 4 at 0x5625a90 by thread #13
    at 0x5320254: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 4 by thread #15
    at 0x532023A: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 8 at 0x5626b60 by thread #13
    at 0x5383F69: xmlInitGlobals (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320285: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5383F45: xmlCleanupGlobals (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320229: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x5625ea0 by thread #13
    at 0x5344CC4: xmlInitMemory (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320294: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous write of size 4 by thread #15
    at 0x5344CA5: xmlCleanupMemory (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320239: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 4 at 0x5625ea0 by thread #13
    at 0x5344CD8: xmlInitMemory (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320294: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous write of size 4 by thread #15
    at 0x5344CA5: xmlCleanupMemory (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320239: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625ea8 by thread #13
    at 0x5344CEE: xmlInitMemory (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320294: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5344C9A: xmlCleanupMemory (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320239: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x5625ac0 by thread #13
    at 0x53414A0: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous write of size 4 by thread #15
    at 0x534129E: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x5625acc by thread #13
    at 0x53413E0: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414D0: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 4 by thread #15
    at 0x5341294: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 4 at 0x5625ac0 by thread #13
    at 0x5341408: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414D0: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 4 by thread #15
    at 0x534129E: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625ae0 by thread #13
    at 0x5341412: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414D0: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341270: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625ae8 by thread #13
    at 0x5341416: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414D0: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341278: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625af0 by thread #13
    at 0x534141A: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414D0: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341280: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625af8 by thread #13
    at 0x534141F: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414D0: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341289: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 4 at 0x5625acc by thread #13
    at 0x5341428: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414D0: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 4 by thread #15
    at 0x5341294: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625b00 by thread #13
    at 0x5341412: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414F1: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341270: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625b08 by thread #13
    at 0x5341416: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414F1: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341278: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625b10 by thread #13
    at 0x534141A: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414F1: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341280: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625b18 by thread #13
    at 0x534141F: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414F1: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341289: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625b20 by thread #13
    at 0x5341412: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341512: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341270: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625b28 by thread #13
    at 0x5341416: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341512: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341278: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625b30 by thread #13
    at 0x534141A: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341512: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341280: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625b38 by thread #13
    at 0x534141F: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341512: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341289: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625b40 by thread #13
    at 0x5341412: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341533: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341270: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625b48 by thread #13
    at 0x5341416: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341533: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341278: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625b50 by thread #13
    at 0x534141A: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341533: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341280: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625b58 by thread #13
    at 0x534141F: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341533: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341289: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x5625ac4 by thread #13
    at 0x5341540: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous write of size 4 by thread #15
    at 0x534136E: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x5625ac8 by thread #13
    at 0x5341440: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341570: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 4 by thread #15
    at 0x5341364: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 4 at 0x5625ac4 by thread #13
    at 0x5341468: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341570: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 4 by thread #15
    at 0x534136E: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625cc0 by thread #13
    at 0x5341472: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341570: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341340: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625cc8 by thread #13
    at 0x5341476: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341570: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341348: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625cd0 by thread #13
    at 0x534147A: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341570: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341350: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625cd8 by thread #13
    at 0x534147F: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341570: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341359: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 4 at 0x5625ac8 by thread #13
    at 0x5341488: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341570: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 4 by thread #15
    at 0x5341364: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625ce0 by thread #13
    at 0x5341472: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341591: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341340: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625ce8 by thread #13
    at 0x5341476: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341591: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341348: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625cf0 by thread #13
    at 0x534147A: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341591: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341350: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 8 at 0x5625cf8 by thread #13
    at 0x534147F: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341591: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341359: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 4 at 0x5625a90 by thread #13
    at 0x53202BA: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 4 by thread #15
    at 0x532023A: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during read of size 4 at 0x5626e18 by thread #13
    at 0x53D19C5: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 4 by thread #15
    at 0x53D193A: xmlDictCleanup (in /usr/lib64/libxml2.so.2.6.26)
    by 0x532020E: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5626e20 by thread #13
    at 0x53D19D1: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 8 by thread #15
    at 0x53D197A: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D1B91: xmlDictCreate (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C9DB: xmlInitParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531CA4D: xmlNewParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBBC: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
 
 Possible data race during read of size 8 at 0x5626e20 by thread #13
    at 0x53D1A38: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 8 by thread #15
    at 0x53D197A: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D1B91: xmlDictCreate (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C9DB: xmlInitParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531CA4D: xmlNewParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBBC: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
 
 Possible data race during write of size 4 at 0x5626b10 by thread #13
    at 0x4E502F8: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #15
    at 0x4E50488: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #13
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473235: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:72)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x646C99D: vobsSTAR::AddProperties() (vobsSTAR.cpp:1201)
    by 0x646CD49: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x64764F8: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
    by 0x647D2C7: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:211)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x622F01C: sclsvrSCENARIO_BRIGHT_V::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_V.cpp:115)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x92ffd90 by thread #13
    at 0x4E507D7: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647D393: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:225)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #15
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1766D: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1003)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 4 at 0x92ffd90 by thread #13
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647D393: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:225)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #15
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1766D: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1003)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during read of size 4 at 0x92ffd90 by thread #15
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CD3F: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:84)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647D393: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:225)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 4 at 0x92ffd90 by thread #15
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CD3F: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:84)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647D393: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:225)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #13
    at 0x5961A3E: std::string::assign(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D9DC: vobsREMOTE_CATALOG::SetOption(std::string) (vobsREMOTE_CATALOG.cpp:207)
    by 0x648A4D7: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:277)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 4 by thread #15
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x622F01C: sclsvrSCENARIO_BRIGHT_V::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_V.cpp:115)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x9366a68 by thread #13
    at 0x7503A25: timlogStop (timlog.c:143)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
 
 Possible data race during read of size 4 at 0x9366a70 by thread #13
    at 0x7503A35: timlogStop (timlog.c:146)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
 
 Possible data race during read of size 4 at 0x9366a60 by thread #13
    at 0x7503AD4: timlogStop (timlog.c:163)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #13
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x648933F: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
    by 0x648A392: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 4 by thread #15
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x622F01C: sclsvrSCENARIO_BRIGHT_V::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_V.cpp:115)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #13
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647A5AE: vobsCDATA::SetCatalogName(char const*) (vobsCDATA.cpp:84)
    by 0x647CD3A: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:81)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x622F01C: sclsvrSCENARIO_BRIGHT_V::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_V.cpp:115)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x92ffd90 by thread #15
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x70F52D9: errGetErrProp (errAddInLocalStack_L.c:88)
    by 0x70F5D08: errAddInLocalStack_v (errAddInLocalStack_L.c:398)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647D393: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:225)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 4 at 0x92ffd90 by thread #15
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x70F52D9: errGetErrProp (errAddInLocalStack_L.c:88)
    by 0x70F5D08: errAddInLocalStack_v (errAddInLocalStack_L.c:398)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647D393: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:225)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x5626b10 by thread #15
    at 0x4E5041C: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x70F53F0: errGetErrProp (errAddInLocalStack_L.c:152)
    by 0x70F5D08: errAddInLocalStack_v (errAddInLocalStack_L.c:398)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E502F8: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 4 at 0x5626b10 by thread #15
    at 0x4E504C0: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x70F53F0: errGetErrProp (errAddInLocalStack_L.c:152)
    by 0x70F5D08: errAddInLocalStack_v (errAddInLocalStack_L.c:398)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E502F8: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Thread #8 was created
    at 0x8A59F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x4033BD: main (sclwsServer.cpp:202)
 
 Possible data race during write of size 4 at 0xed0d890 by thread #15
    at 0x8EE45BB: ??? (in /usr/lib64/libz.so.1.2.3)
    by 0x8EE4FC6: ??? (in /usr/lib64/libz.so.1.2.3)
    by 0x53422A5: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x534237A: __xmlParserInputBufferCreateFilename (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531BECA: xmlNewInputFromFile (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342E6C: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
  This conflicts with a previous read of size 4 by thread #8
    at 0x89C8720: vfprintf (in /lib64/libc-2.5.so)
    by 0x89E9B48: vsprintf (in /lib64/libc-2.5.so)
    by 0x89D3527: sprintf (in /lib64/libc-2.5.so)
    by 0x40DBC4: soap_element (stdsoap2_cpp.cpp:7169)
    by 0x40E4DF: soap_element_begin_out (stdsoap2_cpp.cpp:7246)
    by 0x60005C5: soap_serve_ns__GetCalQueryStatus(soap*) (soapServer.cpp:199)
    by 0x6000CC4: soap_serve_request(soap*) (soapServer.cpp:81)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 Possible data race during read of size 4 at 0x5625a8c by thread #15
    at 0x531BE49: xmlNewInputStream (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531BF37: xmlNewInputFromFile (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342E6C: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x70F53F0: errGetErrProp (errAddInLocalStack_L.c:152)
    by 0x70F5D08: errAddInLocalStack_v (errAddInLocalStack_L.c:398)
  This conflicts with a previous write of size 4 by thread #13
    at 0x531BE6A: xmlNewInputStream (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECD3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
 
 Possible data race during write of size 4 at 0x5625a8c by thread #15
    at 0x531BE6A: xmlNewInputStream (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531BF37: xmlNewInputFromFile (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342E6C: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x70F53F0: errGetErrProp (errAddInLocalStack_L.c:152)
    by 0x70F5D08: errAddInLocalStack_v (errAddInLocalStack_L.c:398)
  This conflicts with a previous write of size 4 by thread #13
    at 0x531BE6A: xmlNewInputStream (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECD3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
 
 Possible data race during write of size 4 at 0x5626b10 by thread #15
    at 0x4E50488: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x70F53F0: errGetErrProp (errAddInLocalStack_L.c:152)
    by 0x70F5D08: errAddInLocalStack_v (errAddInLocalStack_L.c:398)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E502F8: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 4 at 0x92ffd90 by thread #15
    at 0x4E507D7: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x70F5C2B: errGetErrProp (errAddInLocalStack_L.c:355)
    by 0x70F5D08: errAddInLocalStack_v (errAddInLocalStack_L.c:398)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647D393: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:225)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 4 at 0x92ffd90 by thread #15
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x70F5C2B: errGetErrProp (errAddInLocalStack_L.c:355)
    by 0x70F5D08: errAddInLocalStack_v (errAddInLocalStack_L.c:398)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647D393: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:225)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x93ca0b0 by thread #15
    at 0x7300298: miscHashLookUp (miscHash.c:195)
    by 0x7300440: miscHashAddElement (miscHash.c:304)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Thread #14 was created
    at 0x8A59F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x4033BD: main (sclwsServer.cpp:202)
 
 Possible data race during read of size 1 at 0x932c270 by thread #15
    at 0x4C24D4A: strcmp (hg_intercepts.c:2309)
    by 0x73002A3: miscHashLookUp (miscHash.c:195)
    by 0x7300440: miscHashAddElement (miscHash.c:304)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 1 by thread #14
    at 0x5BD2C81: recv (in /lib64/libpthread-2.5.so)
    by 0x40FC96: frecv (stdsoap2_cpp.cpp:955)
    by 0x4121C6: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x412570: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4126AC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413924: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x6000D7D: soap_serve(soap*) (soapServer.cpp:35)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 Possible data race during read of size 1 at 0x932c271 by thread #15
    at 0x4C24D6E: strcmp (hg_intercepts.c:2309)
    by 0x73002A3: miscHashLookUp (miscHash.c:195)
    by 0x7300440: miscHashAddElement (miscHash.c:304)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 1 by thread #14
    at 0x5BD2C81: recv (in /lib64/libpthread-2.5.so)
    by 0x40FC96: frecv (stdsoap2_cpp.cpp:955)
    by 0x4121C6: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x412570: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4126AC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413924: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x6000D7D: soap_serve(soap*) (soapServer.cpp:35)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 Possible data race during read of size 4 at 0x93ca0c0 by thread #15
    at 0x73005A1: miscHashAddElement (miscHash.c:358)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during read of size 8 at 0x93ca0b8 by thread #15
    at 0x73005AD: miscHashAddElement (miscHash.c:360)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 8 at 0x93ca0b8 by thread #15
    at 0x73005C1: miscHashAddElement (miscHash.c:365)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 4 at 0x93ca0c0 by thread #15
    at 0x73005CC: miscHashAddElement (miscHash.c:366)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during read of size 8 at 0x93ca0b8 by thread #13
    at 0x73006F3: miscHashDeleteElement (miscHash.c:429)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #15
    at 0x73005C1: miscHashAddElement (miscHash.c:365)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 4 at 0x5625a60 by thread #13
    at 0x53193B0: xmlRegisterCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x2D2D00382D465454: ???
    by 0x2D2D2D2D2D2D2D08: ???
    by 0x2D2D2D2D2D2D2D08: ???
    by 0x300A2D2D092D2D2C: ???
    by 0x2E37332038322033: ???
    by 0x30312039312B092F: ???
    by 0x322020200937341F: ???
  This conflicts with a previous write of size 4 by thread #15
    at 0x5317B93: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x70F5C30: errGetErrProp (errAddInLocalStack_L.c:356)
    by 0x70F5D7B: errAddInLocalStack_v (errAddInLocalStack_L.c:414)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
 
 Possible data race during read of size 8 at 0x5625a50 by thread #13
    at 0x5318E24: xmlInitCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320299: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5317BD8: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x70F5C30: errGetErrProp (errAddInLocalStack_L.c:356)
    by 0x70F5D7B: errAddInLocalStack_v (errAddInLocalStack_L.c:414)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
 
 Possible data race during read of size 8 at 0x9340860 by thread #15
    at 0x73002B6: miscHashLookUp (miscHash.c:203)
    by 0x7300440: miscHashAddElement (miscHash.c:304)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x73006A1: miscHashDeleteElement (miscHash.c:412)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 8 at 0x9340860 by thread #15
    at 0x7300537: miscHashAddElement (miscHash.c:342)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x73006A1: miscHashDeleteElement (miscHash.c:412)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Thread #11 was created
    at 0x8A59F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x4033BD: main (sclwsServer.cpp:202)
 
 Possible data race during write of size 8 at 0x854f7f0 by thread #13
    at 0x8340709: evhHANDLER::~evhHANDLER() (evhHANDLER.cpp:60)
    by 0x834511B: evhSERVER::~evhSERVER() (evhSERVER.cpp:70)
    by 0x6221BC3: sclsvrSERVER::~sclsvrSERVER() (sclsvrSERVER.cpp:133)
    by 0x5FF3EF7: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:362)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
  This conflicts with a previous read of size 8 by thread #11
    at 0x834052F: evhHANDLER::evhHANDLER() (evhHANDLER.cpp:47)
    by 0x8345AEB: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:44)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 Possible data race during read of size 4 at 0x68e09c0 by thread #15
    at 0x66BC2C7: alxGetPolynamialForInterstellarAbsorption (alxInterstellarAbsorption.c:76)
    by 0x66BC5BD: alxComputeExtinctionCoefficient (alxInterstellarAbsorption.c:177)
    by 0x621C643: sclsvrCALIBRATOR::ComputeExtinctionCoefficient() (sclsvrCALIBRATOR.cpp:842)
    by 0x621CF77: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:108)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 4 by thread #13
    at 0x66BC54A: alxGetPolynamialForInterstellarAbsorption (alxInterstellarAbsorption.c:148)
    by 0x66BC5BD: alxComputeExtinctionCoefficient (alxInterstellarAbsorption.c:177)
    by 0x621C643: sclsvrCALIBRATOR::ComputeExtinctionCoefficient() (sclsvrCALIBRATOR.cpp:842)
    by 0x621CF77: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:108)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  Location 0x68e09c0 is 0 bytes inside polynomial.loaded,
  declared at alxInterstellarAbsorption.c:74, in frame #0 of thread 5
 
 Possible data race during read of size 4 at 0x68c3680 by thread #15
    at 0x66B4C23: alxGetExtinctionRatioTable (alxCorrectedMagnitude.c:121)
    by 0x66B9213: alxComputeCorrectedMagnitudes (alxCorrectedMagnitude.c:1718)
    by 0x621C34C: sclsvrCALIBRATOR::ComputeInterstellarAbsorption(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:972)
    by 0x621CF99: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:114)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 4 by thread #13
    at 0x66B501F: alxGetExtinctionRatioTable (alxCorrectedMagnitude.c:263)
    by 0x66B9213: alxComputeCorrectedMagnitudes (alxCorrectedMagnitude.c:1718)
    by 0x621C34C: sclsvrCALIBRATOR::ComputeInterstellarAbsorption(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:972)
    by 0x621CF99: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:114)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  Location 0x68c3680 is 0 bytes inside extinctionRatioTable.loaded,
  declared at alxCorrectedMagnitude.c:119, in frame #0 of thread 5
 
 Possible data race during read of size 8 at 0x68c3690 by thread #15
    at 0x66B927D: alxComputeCorrectedMagnitudes (alxCorrectedMagnitude.c:1736)
    by 0x621C34C: sclsvrCALIBRATOR::ComputeInterstellarAbsorption(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:972)
    by 0x621CF99: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:114)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x66B4C63: alxGetExtinctionRatioTable (alxCorrectedMagnitude.c:132)
    by 0x66B9213: alxComputeCorrectedMagnitudes (alxCorrectedMagnitude.c:1718)
    by 0x621C34C: sclsvrCALIBRATOR::ComputeInterstellarAbsorption(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:972)
    by 0x621CF99: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:114)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
 
 Possible data race during read of size 4 at 0x68c64b8 by thread #15
    at 0x66B540A: alxGetColorTableForStar (alxCorrectedMagnitude.c:412)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
  This conflicts with a previous write of size 4 by thread #13
    at 0x66B5734: alxGetColorTableForStar (alxCorrectedMagnitude.c:501)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
  Location 0x68c64b8 is 0 bytes inside colorTablesBright[1].loaded,
  declared at alxCorrectedMagnitude.c:387, in frame #0 of thread 5
 
 Possible data race during read of size 4 at 0x68c64c8 by thread #15
    at 0x66B66FD: alxGetLineForBrightStar (alxCorrectedMagnitude.c:812)
    by 0x66B6AD8: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1042)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
  This conflicts with a previous write of size 4 by thread #13
    at 0x66B572D: alxGetColorTableForStar (alxCorrectedMagnitude.c:498)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 Possible data race during read of size 1 at 0x68c64d0 by thread #15
    at 0x66B6686: alxGetLineForBrightStar (alxCorrectedMagnitude.c:815)
    by 0x66B6AD8: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1042)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
  This conflicts with a previous write of size 1 by thread #13
    at 0x89DA461: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B561F: alxGetColorTableForStar (alxCorrectedMagnitude.c:469)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
 
 Possible data race during read of size 8 at 0x68c65d8 by thread #15
    at 0x66B66A9: alxGetLineForBrightStar (alxCorrectedMagnitude.c:821)
    by 0x66B6AD8: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1042)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B561F: alxGetColorTableForStar (alxCorrectedMagnitude.c:469)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
 
 Possible data race during read of size 8 at 0x68c7910 by thread #15
    at 0x66B6BF1: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1065)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #13
    at 0x66B56C6: alxGetColorTableForStar (alxCorrectedMagnitude.c:488)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 Possible data race during read of size 8 at 0x68c7920 by thread #15
    at 0x66B6CAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1070)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #13
    at 0x66B56C6: alxGetColorTableForStar (alxCorrectedMagnitude.c:488)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 Possible data race during read of size 8 at 0x68c7930 by thread #15
    at 0x66B6CF1: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1072)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #13
    at 0x66B56C6: alxGetColorTableForStar (alxCorrectedMagnitude.c:488)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 Possible data race during read of size 8 at 0x68c7940 by thread #15
    at 0x66B6D38: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1074)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #13
    at 0x66B56C6: alxGetColorTableForStar (alxCorrectedMagnitude.c:488)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 Possible data race during read of size 8 at 0x68c7950 by thread #15
    at 0x66B6D7F: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1076)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #13
    at 0x66B56C6: alxGetColorTableForStar (alxCorrectedMagnitude.c:488)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 Possible data race during read of size 8 at 0x68c7960 by thread #15
    at 0x66B6DC6: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1078)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #13
    at 0x66B56C6: alxGetColorTableForStar (alxCorrectedMagnitude.c:488)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 Possible data race during read of size 8 at 0x68c7970 by thread #15
    at 0x66B6E0D: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1080)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #13
    at 0x66B56C6: alxGetColorTableForStar (alxCorrectedMagnitude.c:488)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 Possible data race during read of size 4 at 0x68c797c by thread #15
    at 0x66B6E49: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1082)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 4 by thread #13
    at 0x66B56E7: alxGetColorTableForStar (alxCorrectedMagnitude.c:489)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 Possible data race during read of size 4 at 0x68c798c by thread #15
    at 0x66B6E6A: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1082)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 4 by thread #13
    at 0x66B56E7: alxGetColorTableForStar (alxCorrectedMagnitude.c:489)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 Possible data race during read of size 8 at 0x68c7980 by thread #15
    at 0x66B6EB6: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1085)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #13
    at 0x66B56C6: alxGetColorTableForStar (alxCorrectedMagnitude.c:488)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 Possible data race during read of size 4 at 0x68c3480 by thread #15
    at 0x66B0B0B: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:71)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 4 by thread #13
    at 0x66B0E27: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:149)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  Location 0x68c3480 is 0 bytes inside polynomial.loaded,
  declared at alxAngularDiameter.c:69, in frame #0 of thread 5
 
 Possible data race during read of size 8 at 0x68c3490 by thread #15
    at 0x66B0FC1: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:195)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c3498 by thread #15
    at 0x66B0FD0: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:195)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c34a0 by thread #15
    at 0x66B100C: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:195)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c34a8 by thread #15
    at 0x66B105C: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:195)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c34b0 by thread #15
    at 0x66B10E2: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:195)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c34b8 by thread #15
    at 0x66B1168: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:195)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c34c0 by thread #15
    at 0x66B11EB: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:202)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c34c8 by thread #15
    at 0x66B11FA: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:202)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c34d0 by thread #15
    at 0x66B1236: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:202)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c34d8 by thread #15
    at 0x66B12BC: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:202)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c34e0 by thread #15
    at 0x66B1342: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:202)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c34e8 by thread #15
    at 0x66B13C8: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:202)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c34f0 by thread #15
    at 0x66B144B: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:209)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c34f8 by thread #15
    at 0x66B145A: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:209)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c3500 by thread #15
    at 0x66B1496: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:209)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c3508 by thread #15
    at 0x66B151F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:209)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c3510 by thread #15
    at 0x66B15A8: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:209)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c3518 by thread #15
    at 0x66B1631: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:209)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c3610 by thread #15
    at 0x66B18EC: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:220)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c3618 by thread #15
    at 0x66B1961: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:221)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 8 at 0x68c3620 by thread #15
    at 0x66B19D6: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:222)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 Possible data race during read of size 4 at 0x68d7020 by thread #15
    at 0x66BA483: alxGetUDTable (alxCorrectedMagnitude.c:2228)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #13
    at 0x66BA860: alxGetUDTable (alxCorrectedMagnitude.c:2306)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  Location 0x68d7020 is 0 bytes inside udTable.loaded,
  declared at alxCorrectedMagnitude.c:2226, in frame #0 of thread 5
 
 Possible data race during read of size 8 at 0x68d7d00 by thread #15
    at 0x66BA8FB: alxGetLineForUd (alxCorrectedMagnitude.c:2325)
    by 0x66BAD1C: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2385)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 8 at 0x68d7038 by thread #15
    at 0x66BA972: alxGetLineForUd (alxCorrectedMagnitude.c:2325)
    by 0x66BAD1C: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2385)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 4 at 0x68d7030 by thread #15
    at 0x66BABCF: alxGetLineForUd (alxCorrectedMagnitude.c:2327)
    by 0x66BAD1C: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2385)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #13
    at 0x66BA85A: alxGetUDTable (alxCorrectedMagnitude.c:2303)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x68d7d08 by thread #15
    at 0x66BAA76: alxGetLineForUd (alxCorrectedMagnitude.c:2329)
    by 0x66BAD1C: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2385)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 8 at 0x68d7040 by thread #15
    at 0x66BAAE4: alxGetLineForUd (alxCorrectedMagnitude.c:2329)
    by 0x66BAD1C: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2385)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 8 at 0x68de198 by thread #15
    at 0x66BAD41: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2387)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 8 at 0x68de1a0 by thread #15
    at 0x66BAEC6: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2392)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 8 at 0x68de1a8 by thread #15
    at 0x66BB04B: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2397)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 8 at 0x68de1b0 by thread #15
    at 0x66BB1D0: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2402)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 8 at 0x68de1b8 by thread #15
    at 0x66BB355: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2407)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 8 at 0x68de1c0 by thread #15
    at 0x66BB4DA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2412)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 8 at 0x68de1c8 by thread #15
    at 0x66BB65F: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2417)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 8 at 0x68de1d0 by thread #15
    at 0x66BB7E4: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2422)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 8 at 0x68de1d8 by thread #15
    at 0x66BB969: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2427)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Possible data race during read of size 8 at 0x68de1e0 by thread #15
    at 0x66BBADC: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2432)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 Thread #42 was created
    at 0x8A59F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x4033BD: main (sclwsServer.cpp:202)
 
 Thread #46 was created
    at 0x8A59F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x4033BD: main (sclwsServer.cpp:202)
 
 Possible data race during write of size 4 at 0x5625a60 by thread #42
    at 0x53193B0: xmlRegisterCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x363500382D465454: ???
    by 0x939372E30202008: ???
    by 0x202020206E563841: ???
    by 0x202020202020201F: ???
    by 0x2E3320092020201F: ???
    by 0x362E332009363134: ???
    by 0x200920094E09352F: ???
  This conflicts with a previous write of size 4 by thread #46
    at 0x5317B93: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during write of size 4 at 0x5625a60 by thread #42
    at 0x53193B0: xmlRegisterCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x616D00382D465454: ???
    by 0x616D0967616D0966: ???
    by 0x616D0967616D0966: ???
    by 0x616D0967616D0966: ???
    by 0x616D0967616D0966: ???
    by 0x2D2D0A73616D0972: ???
    by 0x2D2D2D2D2D2D2D2C: ???
  This conflicts with a previous write of size 4 by thread #46
    at 0x5317B93: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x70F5C30: errGetErrProp (errAddInLocalStack_L.c:356)
    by 0x70F5D7B: errAddInLocalStack_v (errAddInLocalStack_L.c:414)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
 
 Possible data race during write of size 4 at 0x5625a60 by thread #42
    at 0x53193B0: xmlRegisterCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x726F00382D465454: ???
    by 0xA3E2D2D200A7373: ???
    by 0x454C4241543C201F: ???
    by 0x5F4A223D6665721F: ???
    by 0x5F3339335F415F40: ???
    by 0x617461635F333830: ???
    by 0x20200A3E22676F6B: ???
  This conflicts with a previous write of size 4 by thread #46
    at 0x5317B93: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x70F5C30: errGetErrProp (errAddInLocalStack_L.c:356)
    by 0x70F5D7B: errAddInLocalStack_v (errAddInLocalStack_L.c:414)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
 
 Possible data race during write of size 8 at 0x93eb1f0 by thread #42
    at 0x73006A1: miscHashDeleteElement (miscHash.c:412)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous read of size 8 by thread #46
    at 0x73002B6: miscHashLookUp (miscHash.c:203)
    by 0x7300440: miscHashAddElement (miscHash.c:304)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 Possible data race during read of size 8 at 0x93eb1f0 by thread #46
    at 0x73002B6: miscHashLookUp (miscHash.c:203)
    by 0x7300758: miscHashGetElement (miscHash.c:456)
    by 0x75039E8: timlogStop (timlog.c:128)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #42
    at 0x73006A1: miscHashDeleteElement (miscHash.c:412)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during read of size 4 at 0xb39edf8 by thread #42
    at 0x538454D: xmlRMutexLock (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D19DC: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 Possible data race during write of size 8 at 0xb39ee00 by thread #42
    at 0x538455C: xmlRMutexLock (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D19DC: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 Possible data race during write of size 4 at 0xb39edf8 by thread #42
    at 0x5384560: xmlRMutexLock (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D19DC: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous read of size 8 by thread #46
    at 0x5962B95: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646F070: std::pair<int const, std::string>::~pair() (stl_pair.h:69)
    by 0x646F5B4: __gnu_cxx::new_allocator<std::pair<int const, std::string> >::destroy(std::pair<int const, std::string>*) (new_allocator.h:107)
    by 0x6471939: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::destroy_node(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:391)
    by 0x64719B8: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:1266)
    by 0x647199E: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:1264)
    by 0x647199E: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:1264)
    by 0x647199E: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:1264)
 
 Possible data race during read of size 4 at 0xb39edf8 by thread #42
    at 0x538431C: xmlRMutexUnlock (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D1A43: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 Possible data race during write of size 4 at 0xb39edf8 by thread #42
    at 0x5384324: xmlRMutexUnlock (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D1A43: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous read of size 8 by thread #46
    at 0x5962B95: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646F070: std::pair<int const, std::string>::~pair() (stl_pair.h:69)
    by 0x646F5B4: __gnu_cxx::new_allocator<std::pair<int const, std::string> >::destroy(std::pair<int const, std::string>*) (new_allocator.h:107)
    by 0x6471939: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::destroy_node(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:391)
    by 0x64719B8: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:1266)
    by 0x647199E: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:1264)
    by 0x647199E: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:1264)
    by 0x647199E: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:1264)
 
 Possible data race during read of size 4 at 0xb39edfc by thread #42
    at 0x5384329: xmlRMutexUnlock (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D1A43: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 Possible data race during write of size 8 at 0xb39ee00 by thread #42
    at 0x5384330: xmlRMutexUnlock (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D1A43: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 Possible data race during write of size 4 at 0x5625a60 by thread #42
    at 0x53193B0: xmlRegisterCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x412B00382D465454: ???
    by 0x206863726165731F: ???
    by 0x696C206120726F65: ???
    by 0x617420666F207472: ???
    by 0x6572207374656771: ???
    by 0x7420736572697570: ???
    by 0x2065687420746167: ???
  This conflicts with a previous write of size 4 by thread #46
    at 0x5317B93: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x70F5C30: errGetErrProp (errAddInLocalStack_L.c:356)
    by 0x70F5D7B: errAddInLocalStack_v (errAddInLocalStack_L.c:414)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
 
 Possible data race during read of size 8 at 0xbcc12f0 by thread #42
    at 0x7300526: miscHashAddElement (miscHash.c:336)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during read of size 8 at 0xc20f178 by thread #42
    at 0x7300688: miscHashDeleteElement (miscHash.c:410)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #46
    at 0x7300680: miscHashDeleteElement (miscHash.c:408)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 Process terminating with default action of signal 11 (SIGSEGV)
  Access not within mapped region at address 0x0
    at 0x4E3FC89: gdome_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x6CEF812: mcsExit (mcs.c:155)
    by 0x40312D: sclwsExit(int) (sclwsServer.cpp:97)
    by 0x403464: sclwsSignalHandler(int) (sclwsServer.cpp:117)
    by 0x89B62CF: ??? (in /lib64/libc-2.5.so)
    by 0x5BD2B38: ??? (in /lib64/libpthread-2.5.so)
    by 0x4107A7: soap_accept (stdsoap2_cpp.cpp:4564)
    by 0x403383: main (sclwsServer.cpp:190)
  If you believe this happened as a result of a stack
  overflow in your program's main thread (unlikely but
  possible), you can try to increase the size of the
  main thread stack using the --main-stacksize= flag.
  The main thread stack size used in this run was 8388608.
 
 ERROR SUMMARY: 8774 errors from 295 contexts (suppressed: 716419 from 1008)
 
 1 errors in context 1 of 295:
 Possible data race during read of size 8 at 0xc20f178 by thread #42
    at 0x7300688: miscHashDeleteElement (miscHash.c:410)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #46
    at 0x7300680: miscHashDeleteElement (miscHash.c:408)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 2 of 295:
 Possible data race during read of size 8 at 0xbcc12f0 by thread #42
    at 0x7300526: miscHashAddElement (miscHash.c:336)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 3 of 295:
 Possible data race during write of size 4 at 0x5625a60 by thread #42
    at 0x53193B0: xmlRegisterCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x412B00382D465454: ???
    by 0x206863726165731F: ???
    by 0x696C206120726F65: ???
    by 0x617420666F207472: ???
    by 0x6572207374656771: ???
    by 0x7420736572697570: ???
    by 0x2065687420746167: ???
  This conflicts with a previous write of size 4 by thread #46
    at 0x5317B93: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x70F5C30: errGetErrProp (errAddInLocalStack_L.c:356)
    by 0x70F5D7B: errAddInLocalStack_v (errAddInLocalStack_L.c:414)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
 
 
 1 errors in context 4 of 295:
 Possible data race during write of size 8 at 0xb39ee00 by thread #42
    at 0x5384330: xmlRMutexUnlock (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D1A43: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 
 1 errors in context 5 of 295:
 Possible data race during read of size 4 at 0xb39edfc by thread #42
    at 0x5384329: xmlRMutexUnlock (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D1A43: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 
 1 errors in context 6 of 295:
 Possible data race during write of size 4 at 0xb39edf8 by thread #42
    at 0x5384324: xmlRMutexUnlock (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D1A43: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous read of size 8 by thread #46
    at 0x5962B95: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646F070: std::pair<int const, std::string>::~pair() (stl_pair.h:69)
    by 0x646F5B4: __gnu_cxx::new_allocator<std::pair<int const, std::string> >::destroy(std::pair<int const, std::string>*) (new_allocator.h:107)
    by 0x6471939: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::destroy_node(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:391)
    by 0x64719B8: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:1266)
    by 0x647199E: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:1264)
    by 0x647199E: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:1264)
    by 0x647199E: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:1264)
 
 
 1 errors in context 7 of 295:
 Possible data race during read of size 4 at 0xb39edf8 by thread #42
    at 0x538431C: xmlRMutexUnlock (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D1A43: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 
 1 errors in context 8 of 295:
 Possible data race during write of size 4 at 0xb39edf8 by thread #42
    at 0x5384560: xmlRMutexLock (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D19DC: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous read of size 8 by thread #46
    at 0x5962B95: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646F070: std::pair<int const, std::string>::~pair() (stl_pair.h:69)
    by 0x646F5B4: __gnu_cxx::new_allocator<std::pair<int const, std::string> >::destroy(std::pair<int const, std::string>*) (new_allocator.h:107)
    by 0x6471939: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::destroy_node(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:391)
    by 0x64719B8: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:1266)
    by 0x647199E: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:1264)
    by 0x647199E: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:1264)
    by 0x647199E: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::string> >*) (stl_tree.h:1264)
 
 
 1 errors in context 9 of 295:
 Possible data race during write of size 8 at 0xb39ee00 by thread #42
    at 0x538455C: xmlRMutexLock (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D19DC: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 
 1 errors in context 10 of 295:
 Possible data race during read of size 4 at 0xb39edf8 by thread #42
    at 0x538454D: xmlRMutexLock (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D19DC: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 
 1 errors in context 11 of 295:
 Possible data race during read of size 8 at 0x93eb1f0 by thread #46
    at 0x73002B6: miscHashLookUp (miscHash.c:203)
    by 0x7300758: miscHashGetElement (miscHash.c:456)
    by 0x75039E8: timlogStop (timlog.c:128)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #42
    at 0x73006A1: miscHashDeleteElement (miscHash.c:412)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 12 of 295:
 Possible data race during write of size 8 at 0x93eb1f0 by thread #42
    at 0x73006A1: miscHashDeleteElement (miscHash.c:412)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous read of size 8 by thread #46
    at 0x73002B6: miscHashLookUp (miscHash.c:203)
    by 0x7300440: miscHashAddElement (miscHash.c:304)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 13 of 295:
 Possible data race during write of size 4 at 0x5625a60 by thread #42
    at 0x53193B0: xmlRegisterCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x726F00382D465454: ???
    by 0xA3E2D2D200A7373: ???
    by 0x454C4241543C201F: ???
    by 0x5F4A223D6665721F: ???
    by 0x5F3339335F415F40: ???
    by 0x617461635F333830: ???
    by 0x20200A3E22676F6B: ???
  This conflicts with a previous write of size 4 by thread #46
    at 0x5317B93: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x70F5C30: errGetErrProp (errAddInLocalStack_L.c:356)
    by 0x70F5D7B: errAddInLocalStack_v (errAddInLocalStack_L.c:414)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
 
 
 1 errors in context 14 of 295:
 Possible data race during write of size 4 at 0x5625a60 by thread #42
    at 0x53193B0: xmlRegisterCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x616D00382D465454: ???
    by 0x616D0967616D0966: ???
    by 0x616D0967616D0966: ???
    by 0x616D0967616D0966: ???
    by 0x616D0967616D0966: ???
    by 0x2D2D0A73616D0972: ???
    by 0x2D2D2D2D2D2D2D2C: ???
  This conflicts with a previous write of size 4 by thread #46
    at 0x5317B93: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x70F5C30: errGetErrProp (errAddInLocalStack_L.c:356)
    by 0x70F5D7B: errAddInLocalStack_v (errAddInLocalStack_L.c:414)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
 
 
 1 errors in context 15 of 295:
 Possible data race during write of size 4 at 0x5625a60 by thread #42
    at 0x53193B0: xmlRegisterCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x363500382D465454: ???
    by 0x939372E30202008: ???
    by 0x202020206E563841: ???
    by 0x202020202020201F: ???
    by 0x2E3320092020201F: ???
    by 0x362E332009363134: ???
    by 0x200920094E09352F: ???
  This conflicts with a previous write of size 4 by thread #46
    at 0x5317B93: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 16 of 295:
 Possible data race during write of size 4 at 0x5625a60 by thread #13
    at 0x53193B0: xmlRegisterCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x2D2D00382D465454: ???
    by 0x2D2D2D2D2D2D2D08: ???
    by 0x2D2D2D2D2D2D2D08: ???
    by 0x300A2D2D092D2D2C: ???
    by 0x2E37332038322033: ???
    by 0x30312039312B092F: ???
    by 0x322020200937341F: ???
  This conflicts with a previous write of size 4 by thread #15
    at 0x5317B93: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x70F5C30: errGetErrProp (errAddInLocalStack_L.c:356)
    by 0x70F5D7B: errAddInLocalStack_v (errAddInLocalStack_L.c:414)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
 
 
 1 errors in context 17 of 295:
 Possible data race during read of size 8 at 0x93ca0b8 by thread #13
    at 0x73006F3: miscHashDeleteElement (miscHash.c:429)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #15
    at 0x73005C1: miscHashAddElement (miscHash.c:365)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 18 of 295:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #13
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x648933F: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
    by 0x648A392: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 4 by thread #15
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x622F01C: sclsvrSCENARIO_BRIGHT_V::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_V.cpp:115)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 19 of 295:
 Possible data race during write of size 4 at 0x5625a60 by thread #13
    at 0x53193B0: xmlRegisterCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x382D465454: ???
    by 0x4008BFF: check_match.8508 (in /lib64/ld-2.5.so)
    by 0x4008F63: do_lookup_x (in /lib64/ld-2.5.so)
    by 0x4009161: _dl_lookup_symbol_x (in /lib64/ld-2.5.so)
    by 0x5341EEA: xmlAllocParserInputBuffer (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342000: xmlParserInputBufferCreateMem (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECC3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
  This conflicts with a previous write of size 4 by thread #15
    at 0x5317B93: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 20 of 295:
 Possible data race during read of size 8 at 0x68d6020 by thread #7
    at 0x66BA26A: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2193)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #5
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B9EEB: alxGetTeffLoggTable (alxCorrectedMagnitude.c:2042)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 1 errors in context 21 of 295:
 Possible data race during read of size 4 at 0x9302660 by thread #5
    at 0x7503AD4: timlogStop (timlog.c:163)
    by 0x62277EC: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:432)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
  This conflicts with a previous write of size 8 by thread #4
    at 0x405B44: soap_free_iht (stdsoap2_cpp.cpp:5472)
    by 0x405E76: soap_end (stdsoap2_cpp.cpp:6862)
    by 0x4034A8: sclwsJobHandler(void*) (sclwsServer.cpp:79)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A59F6C: clone (in /lib64/libc-2.5.so)
 
 
 1 errors in context 22 of 295:
 Possible data race during read of size 4 at 0x9302670 by thread #5
    at 0x7503A35: timlogStop (timlog.c:146)
    by 0x62277EC: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:432)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
  This conflicts with a previous write of size 8 by thread #4
    at 0x405B44: soap_free_iht (stdsoap2_cpp.cpp:5472)
    by 0x405E76: soap_end (stdsoap2_cpp.cpp:6862)
    by 0x4034A8: sclwsJobHandler(void*) (sclwsServer.cpp:79)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A59F6C: clone (in /lib64/libc-2.5.so)
 
 
 1 errors in context 23 of 295:
 Possible data race during read of size 4 at 0x9302668 by thread #5
    at 0x7503A25: timlogStop (timlog.c:143)
    by 0x62277EC: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:432)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
  This conflicts with a previous write of size 8 by thread #4
    at 0x405B44: soap_free_iht (stdsoap2_cpp.cpp:5472)
    by 0x405E76: soap_end (stdsoap2_cpp.cpp:6862)
    by 0x4034A8: sclwsJobHandler(void*) (sclwsServer.cpp:79)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A59F6C: clone (in /lib64/libc-2.5.so)
 
 
 1 errors in context 24 of 295:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #5
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x7D1D040: cmdPARAM::GetUnit() (cmdPARAM.cpp:114)
    by 0x7D1BFCE: cmdCOMMAND::AppendParamsToVOTable(std::string&) (cmdCOMMAND.cpp:386)
    by 0x62228BE: sclsvrREQUEST::AppendParamsToVOTable(std::string&) (sclsvrREQUEST.cpp:622)
    by 0x622752F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:360)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 4 by thread #7
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 25 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5961D28: std::string::append(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x7D1BDB4: cmdCOMMAND::AppendParamsToVOTable(std::string&) (basic_string.h:822)
    by 0x62228BE: sclsvrREQUEST::AppendParamsToVOTable(std::string&) (sclsvrREQUEST.cpp:622)
    by 0x622752F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:360)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 26 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x6217888: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2256)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 27 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x621784B: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2254)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 28 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x621780E: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2251)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 29 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x62177D1: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2249)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 30 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x6217794: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2246)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 31 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x62174F5: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2219)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 32 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473206: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:68)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x646BD16: vobsSTAR::AddProperties() (vobsSTAR.cpp:1076)
    by 0x646CE15: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x621E46B: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:56)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 33 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473206: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:68)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x6217ED5: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2307)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 34 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x621793F: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2264)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 35 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x646C4E4: vobsSTAR::AddProperties() (vobsSTAR.cpp:1154)
    by 0x646CE15: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x621E46B: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:56)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 36 of 295:
 Possible data race during read of size 1 at 0x9367ff0 by thread #7
    at 0x53423D2: __xmlParserInputBufferCreateFilename (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531BECA: xmlNewInputFromFile (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342E6C: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
 
 
 1 errors in context 37 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647F0CA: bool std::operator!=<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) (basic_string.h:2200)
    by 0x647ED17: vobsLOCAL_CATALOG::SetOption(std::string) (vobsLOCAL_CATALOG.cpp:123)
    by 0x648A4D7: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:277)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478E2E: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6223FBA: sclsvrREQUEST::sclsvrREQUEST() (sclsvrREQUEST.cpp:38)
    by 0x6226F03: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:178)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 38 of 295:
 Possible data race during read of size 1 at 0x9367ff0 by thread #7
    at 0x5386974: xmlStrncasecmp (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341822: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341925: xmlLoadExternalEntity (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
 
 
 1 errors in context 39 of 295:
 Possible data race during write of size 4 at 0x7502880 by thread #7
    at 0x72FCF1F: miscDynBufStrip (miscDynBuf.c:433)
    by 0x72FF01D: miscLocateFileInPath (miscFile.c:833)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 4 by thread #5
    at 0x72FCE03: miscDynBufAlloc (miscDynBuf.c:377)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEF99: miscLocateFileInPath (miscFile.c:807)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
 
 
 1 errors in context 40 of 295:
 Possible data race during write of size 8 at 0x7502870 by thread #7
    at 0x72FCF10: miscDynBufStrip (miscDynBuf.c:430)
    by 0x72FF01D: miscLocateFileInPath (miscFile.c:833)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #5
    at 0x72FCDC6: miscDynBufAlloc (miscDynBuf.c:370)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEF99: miscLocateFileInPath (miscFile.c:807)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
 
 
 1 errors in context 41 of 295:
 Possible data race during write of size 1 at 0x9368001 by thread #7
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA8C: miscResolvePath (miscFile.c:563)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
 
 
 1 errors in context 42 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x646CCE5: vobsSTAR::AddProperties() (vobsSTAR.cpp:1237)
    by 0x646CD49: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x64835CB: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:95)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
  This conflicts with a previous write of size 8 by thread #3
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 
 1 errors in context 43 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473206: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:68)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x646C0E4: vobsSTAR::AddProperties() (vobsSTAR.cpp:1117)
    by 0x646CD49: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x64835CB: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:95)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 8 by thread #3
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 
 1 errors in context 44 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x646C0A6: vobsSTAR::AddProperties() (vobsSTAR.cpp:1115)
    by 0x646CD49: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x64835CB: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:95)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
  This conflicts with a previous write of size 8 by thread #3
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 
 1 errors in context 45 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x64732C5: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:98)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x646C0A6: vobsSTAR::AddProperties() (vobsSTAR.cpp:1115)
    by 0x646CD49: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x64835CB: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:95)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 8 by thread #3
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 
 1 errors in context 46 of 295:
 Possible data race during write of size 1 at 0x5bb4e18 by thread #3
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623290A: sclsvrSCENARIO_FAINT_K::sclsvrSCENARIO_FAINT_K(sdbENTRY*) (sclsvrSCENARIO_FAINT_K.cpp:39)
    by 0x622221A: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 1 by thread #5
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 47 of 295:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #3
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623290A: sclsvrSCENARIO_FAINT_K::sclsvrSCENARIO_FAINT_K(sdbENTRY*) (sclsvrSCENARIO_FAINT_K.cpp:39)
    by 0x622221A: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 4 by thread #5
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 48 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623290A: sclsvrSCENARIO_FAINT_K::sclsvrSCENARIO_FAINT_K(sdbENTRY*) (sclsvrSCENARIO_FAINT_K.cpp:39)
    by 0x622221A: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 49 of 295:
 Possible data race during write of size 1 at 0x5bb4e18 by thread #3
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230A7A: sclsvrSCENARIO_BRIGHT_N::sclsvrSCENARIO_BRIGHT_N(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_N.cpp:35)
    by 0x62221FF: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 1 by thread #5
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 50 of 295:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #3
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230A7A: sclsvrSCENARIO_BRIGHT_N::sclsvrSCENARIO_BRIGHT_N(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_N.cpp:35)
    by 0x62221FF: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 4 by thread #5
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 51 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230A7A: sclsvrSCENARIO_BRIGHT_N::sclsvrSCENARIO_BRIGHT_N(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_N.cpp:35)
    by 0x62221FF: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 52 of 295:
 Possible data race during write of size 1 at 0x5bb4e18 by thread #3
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230371: sclsvrSCENARIO_BRIGHT_V::sclsvrSCENARIO_BRIGHT_V(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_V.cpp:36)
    by 0x62221E4: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 1 by thread #5
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 53 of 295:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #3
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230371: sclsvrSCENARIO_BRIGHT_V::sclsvrSCENARIO_BRIGHT_V(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_V.cpp:36)
    by 0x62221E4: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 4 by thread #5
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 54 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230371: sclsvrSCENARIO_BRIGHT_V::sclsvrSCENARIO_BRIGHT_V(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_V.cpp:36)
    by 0x62221E4: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 55 of 295:
 Possible data race during write of size 1 at 0x5bb4e18 by thread #3
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622E8F8: sclsvrSCENARIO_BRIGHT_K_CATALOG::sclsvrSCENARIO_BRIGHT_K_CATALOG(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K_CATALOG.cpp:43)
    by 0x62221C9: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 1 by thread #5
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 56 of 295:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #3
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622E8F8: sclsvrSCENARIO_BRIGHT_K_CATALOG::sclsvrSCENARIO_BRIGHT_K_CATALOG(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K_CATALOG.cpp:43)
    by 0x62221C9: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 4 by thread #5
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 57 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622E8F8: sclsvrSCENARIO_BRIGHT_K_CATALOG::sclsvrSCENARIO_BRIGHT_K_CATALOG(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K_CATALOG.cpp:43)
    by 0x62221C9: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 58 of 295:
 Possible data race during write of size 1 at 0x5bb4e18 by thread #3
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622C676: sclsvrSCENARIO_JSDC::sclsvrSCENARIO_JSDC(sdbENTRY*) (sclsvrSCENARIO_JSDC.cpp:35)
    by 0x62221AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 1 by thread #5
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 59 of 295:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #3
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622C676: sclsvrSCENARIO_JSDC::sclsvrSCENARIO_JSDC(sdbENTRY*) (sclsvrSCENARIO_JSDC.cpp:35)
    by 0x62221AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 4 by thread #5
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 60 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622C676: sclsvrSCENARIO_JSDC::sclsvrSCENARIO_JSDC(sdbENTRY*) (sclsvrSCENARIO_JSDC.cpp:35)
    by 0x62221AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 61 of 295:
 Possible data race during write of size 1 at 0x5bb4e18 by thread #3
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 1 by thread #5
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 62 of 295:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #3
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 4 by thread #5
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 63 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 1 errors in context 64 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D64D: vobsCATALOG::vobsCATALOG(char const*) (vobsCATALOG.cpp:47)
    by 0x647EA44: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
    by 0x64844E5: vobsCATALOG_WDS::vobsCATALOG_WDS() (vobsCATALOG_WDS.cpp:34)
    by 0x6485B32: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478E2E: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6223FBA: sclsvrREQUEST::sclsvrREQUEST() (sclsvrREQUEST.cpp:38)
    by 0x6226F03: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:178)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 65 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D64D: vobsCATALOG::vobsCATALOG(char const*) (vobsCATALOG.cpp:47)
    by 0x647EA44: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
    by 0x6484221: vobsCATALOG_SB9::vobsCATALOG_SB9() (vobsCATALOG_SB9.cpp:34)
    by 0x6485B1F: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478E2E: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6223FBA: sclsvrREQUEST::sclsvrREQUEST() (sclsvrREQUEST.cpp:38)
    by 0x6226F03: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:178)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 66 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647EA90: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:58)
    by 0x6483F85: vobsCATALOG_UNSO::vobsCATALOG_UNSO() (vobsCATALOG_UNSO.cpp:34)
    by 0x6485B0C: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
  This conflicts with a previous write of size 8 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 
 1 errors in context 67 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D64D: vobsCATALOG::vobsCATALOG(char const*) (vobsCATALOG.cpp:47)
    by 0x647EA44: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
    by 0x6483F85: vobsCATALOG_UNSO::vobsCATALOG_UNSO() (vobsCATALOG_UNSO.cpp:34)
    by 0x6485B0C: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
  This conflicts with a previous write of size 8 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 
 1 errors in context 68 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D64D: vobsCATALOG::vobsCATALOG(char const*) (vobsCATALOG.cpp:47)
    by 0x647EA44: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
    by 0x6483F85: vobsCATALOG_UNSO::vobsCATALOG_UNSO() (vobsCATALOG_UNSO.cpp:34)
    by 0x6485B0C: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
  This conflicts with a previous write of size 8 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 
 1 errors in context 69 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D64D: vobsCATALOG::vobsCATALOG(char const*) (vobsCATALOG.cpp:47)
    by 0x647F04F: vobsLOCAL_CATALOG::vobsLOCAL_CATALOG(char const*, char const*) (vobsLOCAL_CATALOG.cpp:39)
    by 0x6483C7E: vobsCATALOG_MIDI::vobsCATALOG_MIDI() (vobsCATALOG_MIDI.cpp:37)
    by 0x6485AF9: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
  This conflicts with a previous write of size 8 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 
 1 errors in context 70 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D64D: vobsCATALOG::vobsCATALOG(char const*) (vobsCATALOG.cpp:47)
    by 0x647EA44: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
    by 0x6480E99: vobsCATALOG_DENIS_JK::vobsCATALOG_DENIS_JK() (vobsCATALOG_DENIS_JK.cpp:35)
    by 0x6485AE6: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
  This conflicts with a previous write of size 8 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 
 1 errors in context 71 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D64D: vobsCATALOG::vobsCATALOG(char const*) (vobsCATALOG.cpp:47)
    by 0x647EA44: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
    by 0x6480BC1: vobsCATALOG_DENIS::vobsCATALOG_DENIS() (vobsCATALOG_DENIS.cpp:41)
    by 0x6485AD3: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
  This conflicts with a previous write of size 8 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 
 1 errors in context 72 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D64D: vobsCATALOG::vobsCATALOG(char const*) (vobsCATALOG.cpp:47)
    by 0x647EA44: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
    by 0x6483079: vobsCATALOG_SBSC::vobsCATALOG_SBSC() (vobsCATALOG_SBSC.cpp:41)
    by 0x6485AC0: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
  This conflicts with a previous write of size 8 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 
 2 errors in context 73 of 295:
 Possible data race during write of size 8 at 0x854f7f0 by thread #13
    at 0x8340709: evhHANDLER::~evhHANDLER() (evhHANDLER.cpp:60)
    by 0x834511B: evhSERVER::~evhSERVER() (evhSERVER.cpp:70)
    by 0x6221BC3: sclsvrSERVER::~sclsvrSERVER() (sclsvrSERVER.cpp:133)
    by 0x5FF3EF7: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:362)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
  This conflicts with a previous read of size 8 by thread #11
    at 0x834052F: evhHANDLER::evhHANDLER() (evhHANDLER.cpp:47)
    by 0x8345AEB: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:44)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 
 2 errors in context 74 of 295:
 Possible data race during write of size 8 at 0x9340860 by thread #15
    at 0x7300537: miscHashAddElement (miscHash.c:342)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x73006A1: miscHashDeleteElement (miscHash.c:412)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 2 errors in context 75 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #13
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647A5AE: vobsCDATA::SetCatalogName(char const*) (vobsCDATA.cpp:84)
    by 0x647CD3A: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:81)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x622F01C: sclsvrSCENARIO_BRIGHT_V::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_V.cpp:115)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 2 errors in context 76 of 295:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #13
    at 0x5961A3E: std::string::assign(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D9DC: vobsREMOTE_CATALOG::SetOption(std::string) (vobsREMOTE_CATALOG.cpp:207)
    by 0x648A4D7: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:277)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 4 by thread #15
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x622F01C: sclsvrSCENARIO_BRIGHT_V::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_V.cpp:115)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 2 errors in context 77 of 295:
 Possible data race during write of size 4 at 0x92ffd90 by thread #15
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1766D: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1003)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CD3F: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:84)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 2 errors in context 78 of 295:
 Possible data race during read of size 4 at 0x92ffd90 by thread #15
    at 0x4E507D7: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1766D: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1003)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CD3F: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:84)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 2 errors in context 79 of 295:
 Possible data race during write of size 4 at 0x92ffd90 by thread #15
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D17555: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:963)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CD3F: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:84)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 2 errors in context 80 of 295:
 Possible data race during read of size 4 at 0x92ffd90 by thread #15
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D17555: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:963)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CD3F: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:84)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 2 errors in context 81 of 295:
 Possible data race during write of size 8 at 0x854f7f0 by thread #10
    at 0x8340535: evhHANDLER::evhHANDLER() (evhHANDLER.cpp:49)
    by 0x8345AEB: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:44)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
  This conflicts with a previous read of size 8 by thread #7
    at 0x8340704: evhHANDLER::~evhHANDLER() (evhHANDLER.cpp:58)
    by 0x834511B: evhSERVER::~evhSERVER() (evhSERVER.cpp:70)
    by 0x6221BC3: sclsvrSERVER::~sclsvrSERVER() (sclsvrSERVER.cpp:133)
    by 0x5FF3EF7: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:362)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 
 2 errors in context 82 of 295:
 Possible data race during read of size 8 at 0x68d6ec0 by thread #7
    at 0x66BA3D5: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2213)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #5
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B9EEB: alxGetTeffLoggTable (alxCorrectedMagnitude.c:2042)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 2 errors in context 83 of 295:
 Possible data race during read of size 8 at 0x68d6ed8 by thread #7
    at 0x66BA3AE: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2212)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #5
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B9EEB: alxGetTeffLoggTable (alxCorrectedMagnitude.c:2042)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 2 errors in context 84 of 295:
 Possible data race during read of size 8 at 0x68d6908 by thread #7
    at 0x66BA340: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2208)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #5
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B9EEB: alxGetTeffLoggTable (alxCorrectedMagnitude.c:2042)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 2 errors in context 85 of 295:
 Possible data race during read of size 8 at 0x68d6920 by thread #7
    at 0x66BA319: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2207)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #5
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B9EEB: alxGetTeffLoggTable (alxCorrectedMagnitude.c:2042)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 2 errors in context 86 of 295:
 Possible data race during read of size 4 at 0x68d5550 by thread #7
    at 0x66BA084: alxGetLineForTeffLogg (alxCorrectedMagnitude.c:2079)
    by 0x66BA20A: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2179)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #5
    at 0x66B9F73: alxGetTeffLoggTable (alxCorrectedMagnitude.c:2059)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 2 errors in context 87 of 295:
 Possible data race during read of size 4 at 0x68d5540 by thread #7
    at 0x66B9C3B: alxGetTeffLoggTable (alxCorrectedMagnitude.c:1986)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #5
    at 0x66B9F79: alxGetTeffLoggTable (alxCorrectedMagnitude.c:2062)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  Location 0x68d5540 is 0 bytes inside teffloggTable.loaded,
  declared at alxCorrectedMagnitude.c:1980, in frame #0 of thread 5
 
 
 2 errors in context 88 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5960653: std::string::length() const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6472D38: vobsSTAR_PROPERTY::GetDescription() const (vobsSTAR_PROPERTY.cpp:468)
    by 0x649425A: vobsVOTABLE::GetVotable(vobsSTAR_LIST&, char const*, char const*, char const*, char const*, char const*, miscoDYN_BUF*) (vobsVOTABLE.cpp:221)
    by 0x6475267: vobsSTAR_LIST::GetVOTable(char const*, char const*, char const*, char const*, miscoDYN_BUF*) (vobsSTAR_LIST.cpp:556)
    by 0x62275D0: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:376)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 2 errors in context 89 of 295:
 Possible data race during read of size 1 at 0x9367ff0 by thread #7
    at 0x72FEC58: miscFileExists (miscFile.c:667)
    by 0x72FEFB7: miscLocateFileInPath (miscFile.c:811)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
 
 
 2 errors in context 90 of 295:
 Possible data race during write of size 4 at 0x7502880 by thread #7
    at 0x72FCE03: miscDynBufAlloc (miscDynBuf.c:377)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEF99: miscLocateFileInPath (miscFile.c:807)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
  This conflicts with a previous write of size 4 by thread #5
    at 0x72FCE03: miscDynBufAlloc (miscDynBuf.c:377)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEF99: miscLocateFileInPath (miscFile.c:807)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
 
 
 2 errors in context 91 of 295:
 Possible data race during write of size 8 at 0x7502870 by thread #7
    at 0x72FCDC6: miscDynBufAlloc (miscDynBuf.c:370)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEF99: miscLocateFileInPath (miscFile.c:807)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
  This conflicts with a previous write of size 8 by thread #5
    at 0x72FCDC6: miscDynBufAlloc (miscDynBuf.c:370)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEF99: miscLocateFileInPath (miscFile.c:807)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
 
 
 2 errors in context 92 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473206: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:68)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x62174B8: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2217)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 2 errors in context 93 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473206: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:68)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x646BAF8: vobsSTAR::AddProperties() (vobsSTAR.cpp:1053)
    by 0x646CD49: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x64835CB: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:95)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 8 by thread #3
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 
 2 errors in context 94 of 295:
 Possible data race during write of size 8 at 0x5bb4e00 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478E2E: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6223FBA: sclsvrREQUEST::sclsvrREQUEST() (sclsvrREQUEST.cpp:38)
    by 0x6226F03: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:178)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 
 2 errors in context 95 of 295:
 Possible data race during write of size 4 at 0x5bb4e10 by thread #5
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478E2E: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6223FBA: sclsvrREQUEST::sclsvrREQUEST() (sclsvrREQUEST.cpp:38)
    by 0x6226F03: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:178)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 4 by thread #2
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 
 2 errors in context 96 of 295:
 Possible data race during write of size 8 at 0x5bb4e00 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623425E: sclsvrSCENARIO_SINGLE_STAR::sclsvrSCENARIO_SINGLE_STAR(sdbENTRY*) (sclsvrSCENARIO_SINGLE_STAR.cpp:35)
    by 0x6222235: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 8 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8345875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 
 2 errors in context 97 of 295:
 Possible data race during write of size 4 at 0x5bb4e10 by thread #2
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623425E: sclsvrSCENARIO_SINGLE_STAR::sclsvrSCENARIO_SINGLE_STAR(sdbENTRY*) (sclsvrSCENARIO_SINGLE_STAR.cpp:35)
    by 0x6222235: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 4 by thread #3
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x834574A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 
 2 errors in context 98 of 295:
 Possible data race during write of size 8 at 0x5bb4e00 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623290A: sclsvrSCENARIO_FAINT_K::sclsvrSCENARIO_FAINT_K(sdbENTRY*) (sclsvrSCENARIO_FAINT_K.cpp:39)
    by 0x622221A: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 8 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8345875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 
 2 errors in context 99 of 295:
 Possible data race during write of size 4 at 0x5bb4e10 by thread #2
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623290A: sclsvrSCENARIO_FAINT_K::sclsvrSCENARIO_FAINT_K(sdbENTRY*) (sclsvrSCENARIO_FAINT_K.cpp:39)
    by 0x622221A: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 4 by thread #3
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x834574A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 
 2 errors in context 100 of 295:
 Possible data race during write of size 8 at 0x5bb4e00 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230A7A: sclsvrSCENARIO_BRIGHT_N::sclsvrSCENARIO_BRIGHT_N(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_N.cpp:35)
    by 0x62221FF: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 8 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8345875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 
 2 errors in context 101 of 295:
 Possible data race during write of size 4 at 0x5bb4e10 by thread #2
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230A7A: sclsvrSCENARIO_BRIGHT_N::sclsvrSCENARIO_BRIGHT_N(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_N.cpp:35)
    by 0x62221FF: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 4 by thread #3
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x834574A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 
 2 errors in context 102 of 295:
 Possible data race during write of size 8 at 0x5bb4e00 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230371: sclsvrSCENARIO_BRIGHT_V::sclsvrSCENARIO_BRIGHT_V(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_V.cpp:36)
    by 0x62221E4: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 8 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8345875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 
 2 errors in context 103 of 295:
 Possible data race during write of size 4 at 0x5bb4e10 by thread #2
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x6230371: sclsvrSCENARIO_BRIGHT_V::sclsvrSCENARIO_BRIGHT_V(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_V.cpp:36)
    by 0x62221E4: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 4 by thread #3
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x834574A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 
 2 errors in context 104 of 295:
 Possible data race during write of size 8 at 0x5bb4e00 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622E8F8: sclsvrSCENARIO_BRIGHT_K_CATALOG::sclsvrSCENARIO_BRIGHT_K_CATALOG(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K_CATALOG.cpp:43)
    by 0x62221C9: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 8 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8345875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 
 2 errors in context 105 of 295:
 Possible data race during write of size 4 at 0x5bb4e10 by thread #2
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622E8F8: sclsvrSCENARIO_BRIGHT_K_CATALOG::sclsvrSCENARIO_BRIGHT_K_CATALOG(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K_CATALOG.cpp:43)
    by 0x62221C9: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 4 by thread #3
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x834574A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 
 2 errors in context 106 of 295:
 Possible data race during write of size 8 at 0x5bb4e00 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622C676: sclsvrSCENARIO_JSDC::sclsvrSCENARIO_JSDC(sdbENTRY*) (sclsvrSCENARIO_JSDC.cpp:35)
    by 0x62221AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 8 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8345875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 
 2 errors in context 107 of 295:
 Possible data race during write of size 4 at 0x5bb4e10 by thread #2
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622C676: sclsvrSCENARIO_JSDC::sclsvrSCENARIO_JSDC(sdbENTRY*) (sclsvrSCENARIO_JSDC.cpp:35)
    by 0x62221AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 4 by thread #3
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x834574A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 
 2 errors in context 108 of 295:
 Possible data race during write of size 8 at 0x5bb4e00 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 8 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8345875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 
 2 errors in context 109 of 295:
 Possible data race during write of size 4 at 0x5bb4e10 by thread #2
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous read of size 4 by thread #3
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x834574A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 
 3 errors in context 110 of 295:
 Possible data race during read of size 8 at 0x9340860 by thread #15
    at 0x73002B6: miscHashLookUp (miscHash.c:203)
    by 0x7300440: miscHashAddElement (miscHash.c:304)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x73006A1: miscHashDeleteElement (miscHash.c:412)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 3 errors in context 111 of 295:
 Possible data race during write of size 4 at 0x93ca0c0 by thread #15
    at 0x73005CC: miscHashAddElement (miscHash.c:366)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 3 errors in context 112 of 295:
 Possible data race during write of size 8 at 0x93ca0b8 by thread #15
    at 0x73005C1: miscHashAddElement (miscHash.c:365)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 3 errors in context 113 of 295:
 Possible data race during read of size 8 at 0x93ca0b8 by thread #15
    at 0x73005AD: miscHashAddElement (miscHash.c:360)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 3 errors in context 114 of 295:
 Possible data race during read of size 4 at 0x93ca0c0 by thread #15
    at 0x73005A1: miscHashAddElement (miscHash.c:358)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 3 errors in context 115 of 295:
 Possible data race during write of size 1 at 0x9341209 by thread #7
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FEF89: miscLocateFileInPath (miscFile.c:806)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 1 by thread #5
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA5B: miscResolvePath (miscFile.c:555)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
 
 
 3 errors in context 116 of 295:
 Possible data race during read of size 8 at 0x7502870 by thread #7
    at 0x72FDEC9: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FEF71: miscLocateFileInPath (miscFile.c:805)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #5
    at 0x72FCDC6: miscDynBufAlloc (miscDynBuf.c:370)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEF99: miscLocateFileInPath (miscFile.c:807)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
 
 
 3 errors in context 117 of 295:
 Possible data race during read of size 4 at 0x7502880 by thread #7
    at 0x72FDE8A: miscDynBufAppendBytes (miscDynBuf.c:1499)
    by 0x72FEF71: miscLocateFileInPath (miscFile.c:805)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 4 by thread #5
    at 0x72FCE03: miscDynBufAlloc (miscDynBuf.c:377)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEF99: miscLocateFileInPath (miscFile.c:807)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
 
 
 3 errors in context 118 of 295:
 Possible data race during write of size 4 at 0x750287c by thread #7
    at 0x72FCF62: miscDynBufReset (miscDynBuf.c:466)
    by 0x72FEEE7: miscLocateFileInPath (miscFile.c:780)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 4 by thread #5
    at 0x72FCF62: miscDynBufReset (miscDynBuf.c:466)
    by 0x72FEEE7: miscLocateFileInPath (miscFile.c:780)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
 
 
 3 errors in context 119 of 295:
 Possible data race during write of size 4 at 0x7502840 by thread #7
    at 0x72FCF1F: miscDynBufStrip (miscDynBuf.c:433)
    by 0x72FEBE6: miscResolvePath (miscFile.c:640)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
  This conflicts with a previous write of size 4 by thread #5
    at 0x72FCF1F: miscDynBufStrip (miscDynBuf.c:433)
    by 0x72FEBE6: miscResolvePath (miscFile.c:640)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 
 3 errors in context 120 of 295:
 Possible data race during write of size 8 at 0x7502830 by thread #7
    at 0x72FCF10: miscDynBufStrip (miscDynBuf.c:430)
    by 0x72FEBE6: miscResolvePath (miscFile.c:640)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
  This conflicts with a previous write of size 8 by thread #5
    at 0x72FCF10: miscDynBufStrip (miscDynBuf.c:430)
    by 0x72FEBE6: miscResolvePath (miscFile.c:640)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 
 3 errors in context 121 of 295:
 Possible data race during read of size 8 at 0x7502830 by thread #7
    at 0x72FDEC9: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA5B: miscResolvePath (miscFile.c:555)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
  This conflicts with a previous write of size 8 by thread #5
    at 0x72FCF10: miscDynBufStrip (miscDynBuf.c:430)
    by 0x72FEBE6: miscResolvePath (miscFile.c:640)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 
 3 errors in context 122 of 295:
 Possible data race during read of size 4 at 0x7502840 by thread #7
    at 0x72FDE8A: miscDynBufAppendBytes (miscDynBuf.c:1499)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA5B: miscResolvePath (miscFile.c:555)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
  This conflicts with a previous write of size 4 by thread #5
    at 0x72FCF1F: miscDynBufStrip (miscDynBuf.c:433)
    by 0x72FEBE6: miscResolvePath (miscFile.c:640)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 
 3 errors in context 123 of 295:
 Possible data race during write of size 4 at 0x750283c by thread #7
    at 0x72FCF62: miscDynBufReset (miscDynBuf.c:466)
    by 0x72FE835: miscResolvePath (miscFile.c:473)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
  This conflicts with a previous write of size 4 by thread #5
    at 0x72FCF62: miscDynBufReset (miscDynBuf.c:466)
    by 0x72FE835: miscResolvePath (miscFile.c:473)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
 
 
 3 errors in context 124 of 295:
 Possible data race during write of size 1 at 0xdbf7e21 by thread #7
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA8C: miscResolvePath (miscFile.c:563)
    by 0x7D17560: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:966)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
 
 
 4 errors in context 125 of 295:
 Possible data race during read of size 1 at 0x932c270 by thread #15
    at 0x4C24D4A: strcmp (hg_intercepts.c:2309)
    by 0x73002A3: miscHashLookUp (miscHash.c:195)
    by 0x7300440: miscHashAddElement (miscHash.c:304)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 1 by thread #14
    at 0x5BD2C81: recv (in /lib64/libpthread-2.5.so)
    by 0x40FC96: frecv (stdsoap2_cpp.cpp:955)
    by 0x4121C6: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x412570: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4126AC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413924: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x6000D7D: soap_serve(soap*) (soapServer.cpp:35)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 
 4 errors in context 126 of 295:
 Possible data race during read of size 8 at 0x93ca0b0 by thread #15
    at 0x7300298: miscHashLookUp (miscHash.c:195)
    by 0x7300440: miscHashAddElement (miscHash.c:304)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 4 errors in context 127 of 295:
 Possible data race during read of size 8 at 0x5625a50 by thread #13
    at 0x5318E24: xmlInitCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320299: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5317BD8: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x70F5C30: errGetErrProp (errAddInLocalStack_L.c:356)
    by 0x70F5D7B: errAddInLocalStack_v (errAddInLocalStack_L.c:414)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
 
 
 4 errors in context 128 of 295:
 Possible data race during read of size 4 at 0x9366a60 by thread #13
    at 0x7503AD4: timlogStop (timlog.c:163)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
 
 
 4 errors in context 129 of 295:
 Possible data race during read of size 4 at 0x9366a70 by thread #13
    at 0x7503A35: timlogStop (timlog.c:146)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
 
 
 4 errors in context 130 of 295:
 Possible data race during read of size 4 at 0x9366a68 by thread #13
    at 0x7503A25: timlogStop (timlog.c:143)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
 
 
 4 errors in context 131 of 295:
 Possible data race during write of size 4 at 0x5625a8c by thread #15
    at 0x531BE6A: xmlNewInputStream (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531BF37: xmlNewInputFromFile (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342E6C: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x70F53F0: errGetErrProp (errAddInLocalStack_L.c:152)
    by 0x70F5D08: errAddInLocalStack_v (errAddInLocalStack_L.c:398)
  This conflicts with a previous write of size 4 by thread #13
    at 0x531BE6A: xmlNewInputStream (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECD3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
 
 
 4 errors in context 132 of 295:
 Possible data race during read of size 4 at 0x5625a8c by thread #15
    at 0x531BE49: xmlNewInputStream (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531BF37: xmlNewInputFromFile (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342E6C: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x70F53F0: errGetErrProp (errAddInLocalStack_L.c:152)
    by 0x70F5D08: errAddInLocalStack_v (errAddInLocalStack_L.c:398)
  This conflicts with a previous write of size 4 by thread #13
    at 0x531BE6A: xmlNewInputStream (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECD3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
 
 
 4 errors in context 133 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #10
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8345875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 4 errors in context 134 of 295:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #10
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x834574A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8345BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 4 by thread #7
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 5 errors in context 135 of 295:
 Possible data race during read of size 8 at 0x854f7f0 by thread #7
    at 0x8340704: evhHANDLER::~evhHANDLER() (evhHANDLER.cpp:58)
    by 0x834511B: evhSERVER::~evhSERVER() (evhSERVER.cpp:70)
    by 0x6221BC3: sclsvrSERVER::~sclsvrSERVER() (sclsvrSERVER.cpp:133)
    by 0x5FF3EF7: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:362)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
  This conflicts with a previous write of size 8 by thread #5
    at 0x8340709: evhHANDLER::~evhHANDLER() (evhHANDLER.cpp:60)
    by 0x834511B: evhSERVER::~evhSERVER() (evhSERVER.cpp:70)
    by 0x6221BC3: sclsvrSERVER::~sclsvrSERVER() (sclsvrSERVER.cpp:133)
    by 0x5FF3EF7: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:362)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 
 5 errors in context 136 of 295:
 Possible data race during read of size 4 at 0x92fe6a0 by thread #5
    at 0x73006E7: miscHashDeleteElement (miscHash.c:427)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x62277EC: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:432)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 4 by thread #7
    at 0x73005CC: miscHashAddElement (miscHash.c:366)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x6226F61: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:189)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 
 5 errors in context 137 of 295:
 Possible data race during read of size 8 at 0x92fe698 by thread #5
    at 0x7300768: miscHashGetElement (miscHash.c:462)
    by 0x75039E8: timlogStop (timlog.c:128)
    by 0x62277EC: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:432)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 8 by thread #7
    at 0x73005C1: miscHashAddElement (miscHash.c:365)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x6226F61: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:189)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 
 5 errors in context 138 of 295:
 Possible data race during read of size 8 at 0x854f7f0 by thread #3
    at 0x834052F: evhHANDLER::evhHANDLER() (evhHANDLER.cpp:47)
    by 0x8345AEB: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:44)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
  This conflicts with a previous write of size 8 by thread #2
    at 0x8340535: evhHANDLER::evhHANDLER() (evhHANDLER.cpp:49)
    by 0x8345AEB: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:44)
    by 0x6222130: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 
 6 errors in context 139 of 295:
 Possible data race during write of size 4 at 0x5625a90 by thread #13
    at 0x53202BA: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 4 by thread #15
    at 0x532023A: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 6 errors in context 140 of 295:
 Possible data race during write of size 8 at 0x5625cf8 by thread #13
    at 0x534147F: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341591: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341359: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 141 of 295:
 Possible data race during write of size 8 at 0x5625cf0 by thread #13
    at 0x534147A: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341591: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341350: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 142 of 295:
 Possible data race during write of size 8 at 0x5625ce8 by thread #13
    at 0x5341476: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341591: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341348: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 143 of 295:
 Possible data race during write of size 8 at 0x5625ce0 by thread #13
    at 0x5341472: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341591: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341340: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 144 of 295:
 Possible data race during write of size 4 at 0x5625ac8 by thread #13
    at 0x5341488: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341570: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 4 by thread #15
    at 0x5341364: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 145 of 295:
 Possible data race during write of size 8 at 0x5625cd8 by thread #13
    at 0x534147F: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341570: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341359: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 146 of 295:
 Possible data race during write of size 8 at 0x5625cd0 by thread #13
    at 0x534147A: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341570: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341350: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 147 of 295:
 Possible data race during write of size 8 at 0x5625cc8 by thread #13
    at 0x5341476: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341570: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341348: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 148 of 295:
 Possible data race during write of size 8 at 0x5625cc0 by thread #13
    at 0x5341472: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341570: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341340: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 149 of 295:
 Possible data race during write of size 4 at 0x5625ac4 by thread #13
    at 0x5341468: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341570: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 4 by thread #15
    at 0x534136E: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 150 of 295:
 Possible data race during read of size 4 at 0x5625ac8 by thread #13
    at 0x5341440: xmlRegisterOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341570: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 4 by thread #15
    at 0x5341364: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 151 of 295:
 Possible data race during read of size 4 at 0x5625ac4 by thread #13
    at 0x5341540: xmlRegisterDefaultOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A9: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous write of size 4 by thread #15
    at 0x534136E: xmlCleanupOutputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320219: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 152 of 295:
 Possible data race during write of size 8 at 0x5625b58 by thread #13
    at 0x534141F: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341533: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341289: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 153 of 295:
 Possible data race during write of size 8 at 0x5625b50 by thread #13
    at 0x534141A: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341533: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341280: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 154 of 295:
 Possible data race during write of size 8 at 0x5625b48 by thread #13
    at 0x5341416: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341533: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341278: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 155 of 295:
 Possible data race during write of size 8 at 0x5625b40 by thread #13
    at 0x5341412: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341533: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341270: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 156 of 295:
 Possible data race during write of size 8 at 0x5625b38 by thread #13
    at 0x534141F: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341512: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341289: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 157 of 295:
 Possible data race during write of size 8 at 0x5625b30 by thread #13
    at 0x534141A: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341512: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341280: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 158 of 295:
 Possible data race during write of size 8 at 0x5625b28 by thread #13
    at 0x5341416: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341512: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341278: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 159 of 295:
 Possible data race during write of size 8 at 0x5625b20 by thread #13
    at 0x5341412: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341512: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341270: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 160 of 295:
 Possible data race during write of size 8 at 0x5625b18 by thread #13
    at 0x534141F: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414F1: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341289: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 161 of 295:
 Possible data race during write of size 8 at 0x5625b10 by thread #13
    at 0x534141A: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414F1: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341280: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 162 of 295:
 Possible data race during write of size 8 at 0x5625b08 by thread #13
    at 0x5341416: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414F1: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341278: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 163 of 295:
 Possible data race during write of size 8 at 0x5625b00 by thread #13
    at 0x5341412: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414F1: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341270: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 164 of 295:
 Possible data race during write of size 4 at 0x5625acc by thread #13
    at 0x5341428: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414D0: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 4 by thread #15
    at 0x5341294: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 165 of 295:
 Possible data race during write of size 8 at 0x5625af8 by thread #13
    at 0x534141F: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414D0: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341289: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 166 of 295:
 Possible data race during write of size 8 at 0x5625af0 by thread #13
    at 0x534141A: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414D0: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341280: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 167 of 295:
 Possible data race during write of size 8 at 0x5625ae8 by thread #13
    at 0x5341416: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414D0: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341278: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 168 of 295:
 Possible data race during write of size 8 at 0x5625ae0 by thread #13
    at 0x5341412: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414D0: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5341270: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 169 of 295:
 Possible data race during write of size 4 at 0x5625ac0 by thread #13
    at 0x5341408: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414D0: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 4 by thread #15
    at 0x534129E: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 170 of 295:
 Possible data race during read of size 4 at 0x5625acc by thread #13
    at 0x53413E0: xmlRegisterInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53414D0: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 4 by thread #15
    at 0x5341294: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 171 of 295:
 Possible data race during read of size 4 at 0x5625ac0 by thread #13
    at 0x53414A0: xmlRegisterDefaultInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53202A4: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous write of size 4 by thread #15
    at 0x534129E: xmlCleanupInputCallbacks (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320214: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 172 of 295:
 Possible data race during write of size 8 at 0x5625ea8 by thread #13
    at 0x5344CEE: xmlInitMemory (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320294: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5344C9A: xmlCleanupMemory (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320239: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 173 of 295:
 Possible data race during write of size 4 at 0x5625ea0 by thread #13
    at 0x5344CD8: xmlInitMemory (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320294: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous write of size 4 by thread #15
    at 0x5344CA5: xmlCleanupMemory (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320239: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 174 of 295:
 Possible data race during read of size 4 at 0x5625ea0 by thread #13
    at 0x5344CC4: xmlInitMemory (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320294: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous write of size 4 by thread #15
    at 0x5344CA5: xmlCleanupMemory (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320239: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 175 of 295:
 Possible data race during write of size 8 at 0x5626b60 by thread #13
    at 0x5383F69: xmlInitGlobals (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320285: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5383F45: xmlCleanupGlobals (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320229: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 176 of 295:
 Possible data race during write of size 8 at 0x5625a70 by thread #13
    at 0x5318EE5: xmlInitCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531924B: xmlGetCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341EEA: xmlAllocParserInputBuffer (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342000: xmlParserInputBufferCreateMem (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECC3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5318EE5: xmlInitCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320299: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333994: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
 
 
 6 errors in context 177 of 295:
 Possible data race during write of size 8 at 0x5625a68 by thread #13
    at 0x5318EC4: xmlInitCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531924B: xmlGetCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341EEA: xmlAllocParserInputBuffer (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342000: xmlParserInputBufferCreateMem (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECC3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5318EC4: xmlInitCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320299: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333994: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
 
 
 6 errors in context 178 of 295:
 Possible data race during read of size 4 at 0x5625a60 by thread #13
    at 0x5319393: xmlRegisterCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5318DB2: xmlNewCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5318E94: xmlInitCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531924B: xmlGetCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341EEA: xmlAllocParserInputBuffer (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342000: xmlParserInputBufferCreateMem (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECC3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
  This conflicts with a previous write of size 4 by thread #15
    at 0x5317B93: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 179 of 295:
 Possible data race during write of size 4 at 0x5621368 by thread #13
    at 0x5318E67: xmlInitCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531924B: xmlGetCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341EEA: xmlAllocParserInputBuffer (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342000: xmlParserInputBufferCreateMem (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECC3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
  This conflicts with a previous write of size 4 by thread #15
    at 0x5318E67: xmlInitCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320299: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333994: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
 
 
 6 errors in context 180 of 295:
 Possible data race during write of size 8 at 0x5625a50 by thread #13
    at 0x5318E4B: xmlInitCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531924B: xmlGetCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341EEA: xmlAllocParserInputBuffer (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342000: xmlParserInputBufferCreateMem (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECC3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5317BD8: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 181 of 295:
 Possible data race during write of size 4 at 0x5626e18 by thread #13
    at 0x53D1985: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D1B91: xmlDictCreate (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C9DB: xmlInitParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531CA4D: xmlNewParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECAE: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
  This conflicts with a previous write of size 4 by thread #15
    at 0x53D193A: xmlDictCleanup (in /usr/lib64/libxml2.so.2.6.26)
    by 0x532020E: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 182 of 295:
 Possible data race during write of size 8 at 0x5626e20 by thread #13
    at 0x53D197A: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D1B91: xmlDictCreate (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C9DB: xmlInitParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531CA4D: xmlNewParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECAE: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
  This conflicts with a previous read of size 8 by thread #15
    at 0x53D192E: xmlDictCleanup (in /usr/lib64/libxml2.so.2.6.26)
    by 0x532020E: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 183 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473295: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:89)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x646C376: vobsSTAR::AddProperties() (vobsSTAR.cpp:1139)
    by 0x646CE15: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x621E46B: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:56)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 184 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #13
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473235: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:72)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x646C99D: vobsSTAR::AddProperties() (vobsSTAR.cpp:1201)
    by 0x646CD49: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x64764F8: mcsCOMPL_STAT vobsCDATA::Extract<vobsSTAR, vobsSTAR_LIST>(vobsSTAR&, vobsSTAR_LIST&, mcsLOGICAL) (vobsCDATA.h:260)
    by 0x647D2C7: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:211)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x622F01C: sclsvrSCENARIO_BRIGHT_V::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_V.cpp:115)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 185 of 295:
 Possible data race during read of size 4 at 0x9339d60 by thread #5
    at 0x81333B4: sdbENTRY::IsInit() (sdbENTRY.cpp:225)
    by 0x8133427: sdbENTRY::Write(char const*) (sdbENTRY.cpp:88)
    by 0x648A23E: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:242)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 4 by thread #4
    at 0x8133342: sdbENTRY::Destroy() (sdbENTRY.cpp:272)
    by 0x813335A: sdbENTRY::Init() (sdbENTRY.cpp:239)
    by 0x813356C: sdbENTRY::Read(char*, mcsLOGICAL, int) (sdbENTRY.cpp:142)
    by 0x6227A9A: sclsvrSERVER::GetStatus(char*, int) (sclsvrGetCalCB.cpp:68)
    by 0x5FF3054: ns__GetCalQueryStatus(soap*, char*, char**) (sclwsWS.cpp:429)
    by 0x6000544: soap_serve_ns__GetCalQueryStatus(soap*) (soapServer.cpp:191)
    by 0x6000CC4: soap_serve_request(soap*) (soapServer.cpp:81)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 
 6 errors in context 186 of 295:
 Possible data race during read of size 8 at 0x68de1e0 by thread #15
    at 0x66BBADC: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2432)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 6 errors in context 187 of 295:
 Possible data race during read of size 8 at 0x68de1d8 by thread #15
    at 0x66BB969: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2427)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 6 errors in context 188 of 295:
 Possible data race during read of size 8 at 0x68de1d0 by thread #15
    at 0x66BB7E4: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2422)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 6 errors in context 189 of 295:
 Possible data race during read of size 8 at 0x68de1c8 by thread #15
    at 0x66BB65F: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2417)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 6 errors in context 190 of 295:
 Possible data race during read of size 8 at 0x68de1c0 by thread #15
    at 0x66BB4DA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2412)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 6 errors in context 191 of 295:
 Possible data race during read of size 8 at 0x68de1b8 by thread #15
    at 0x66BB355: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2407)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 6 errors in context 192 of 295:
 Possible data race during read of size 8 at 0x68de1b0 by thread #15
    at 0x66BB1D0: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2402)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 6 errors in context 193 of 295:
 Possible data race during read of size 8 at 0x68de1a8 by thread #15
    at 0x66BB04B: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2397)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 6 errors in context 194 of 295:
 Possible data race during read of size 8 at 0x68de1a0 by thread #15
    at 0x66BAEC6: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2392)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 6 errors in context 195 of 295:
 Possible data race during read of size 8 at 0x68de198 by thread #15
    at 0x66BAD41: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2387)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 6 errors in context 196 of 295:
 Possible data race during read of size 4 at 0x68d7030 by thread #15
    at 0x66BABCF: alxGetLineForUd (alxCorrectedMagnitude.c:2327)
    by 0x66BAD1C: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2385)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #13
    at 0x66BA85A: alxGetUDTable (alxCorrectedMagnitude.c:2303)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 6 errors in context 197 of 295:
 Possible data race during read of size 8 at 0x68d7038 by thread #15
    at 0x66BA972: alxGetLineForUd (alxCorrectedMagnitude.c:2325)
    by 0x66BAD1C: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2385)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 6 errors in context 198 of 295:
 Possible data race during read of size 8 at 0x68d7d00 by thread #15
    at 0x66BA8FB: alxGetLineForUd (alxCorrectedMagnitude.c:2325)
    by 0x66BAD1C: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2385)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 6 errors in context 199 of 295:
 Possible data race during read of size 4 at 0x68d7020 by thread #15
    at 0x66BA483: alxGetUDTable (alxCorrectedMagnitude.c:2228)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #13
    at 0x66BA860: alxGetUDTable (alxCorrectedMagnitude.c:2306)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  Location 0x68d7020 is 0 bytes inside udTable.loaded,
  declared at alxCorrectedMagnitude.c:2226, in frame #0 of thread 5
 
 
 6 errors in context 200 of 295:
 Possible data race during read of size 8 at 0x68c3620 by thread #15
    at 0x66B19D6: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:222)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 201 of 295:
 Possible data race during read of size 8 at 0x68c3618 by thread #15
    at 0x66B1961: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:221)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 202 of 295:
 Possible data race during read of size 8 at 0x68c3610 by thread #15
    at 0x66B18EC: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:220)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 203 of 295:
 Possible data race during read of size 8 at 0x68c3518 by thread #15
    at 0x66B1631: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:209)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 204 of 295:
 Possible data race during read of size 8 at 0x68c3510 by thread #15
    at 0x66B15A8: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:209)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 205 of 295:
 Possible data race during read of size 8 at 0x68c3508 by thread #15
    at 0x66B151F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:209)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 206 of 295:
 Possible data race during read of size 8 at 0x68c3500 by thread #15
    at 0x66B1496: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:209)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 207 of 295:
 Possible data race during read of size 8 at 0x68c34f8 by thread #15
    at 0x66B145A: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:209)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 208 of 295:
 Possible data race during read of size 8 at 0x68c34f0 by thread #15
    at 0x66B144B: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:209)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 209 of 295:
 Possible data race during read of size 8 at 0x68c34e8 by thread #15
    at 0x66B13C8: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:202)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 210 of 295:
 Possible data race during read of size 8 at 0x68c34e0 by thread #15
    at 0x66B1342: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:202)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 211 of 295:
 Possible data race during read of size 8 at 0x68c34d8 by thread #15
    at 0x66B12BC: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:202)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 212 of 295:
 Possible data race during read of size 8 at 0x68c34d0 by thread #15
    at 0x66B1236: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:202)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 213 of 295:
 Possible data race during read of size 8 at 0x68c34c8 by thread #15
    at 0x66B11FA: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:202)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 214 of 295:
 Possible data race during read of size 8 at 0x68c34c0 by thread #15
    at 0x66B11EB: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:202)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 215 of 295:
 Possible data race during read of size 8 at 0x68c34b8 by thread #15
    at 0x66B1168: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:195)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 216 of 295:
 Possible data race during read of size 8 at 0x68c34b0 by thread #15
    at 0x66B10E2: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:195)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 217 of 295:
 Possible data race during read of size 8 at 0x68c34a8 by thread #15
    at 0x66B105C: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:195)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 218 of 295:
 Possible data race during read of size 8 at 0x68c34a0 by thread #15
    at 0x66B100C: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:195)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 219 of 295:
 Possible data race during read of size 8 at 0x68c3498 by thread #15
    at 0x66B0FD0: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:195)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 220 of 295:
 Possible data race during read of size 8 at 0x68c3490 by thread #15
    at 0x66B0FC1: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:195)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B0D48: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:117)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
 
 
 6 errors in context 221 of 295:
 Possible data race during read of size 4 at 0x68c3480 by thread #15
    at 0x66B0B0B: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:71)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 4 by thread #13
    at 0x66B0E27: alxGetPolynamialForAngularDiameter (alxAngularDiameter.c:149)
    by 0x66B0F0F: alxComputeAngularDiameterForBrightStar (alxAngularDiameter.c:180)
    by 0x621AB07: sclsvrCALIBRATOR::ComputeAngularDiameter(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:1250)
    by 0x621CFF6: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:132)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  Location 0x68c3480 is 0 bytes inside polynomial.loaded,
  declared at alxAngularDiameter.c:69, in frame #0 of thread 5
 
 
 6 errors in context 222 of 295:
 Possible data race during read of size 8 at 0x68c7980 by thread #15
    at 0x66B6EB6: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1085)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #13
    at 0x66B56C6: alxGetColorTableForStar (alxCorrectedMagnitude.c:488)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 
 6 errors in context 223 of 295:
 Possible data race during read of size 4 at 0x68c798c by thread #15
    at 0x66B6E6A: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1082)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 4 by thread #13
    at 0x66B56E7: alxGetColorTableForStar (alxCorrectedMagnitude.c:489)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 
 6 errors in context 224 of 295:
 Possible data race during read of size 4 at 0x68c797c by thread #15
    at 0x66B6E49: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1082)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 4 by thread #13
    at 0x66B56E7: alxGetColorTableForStar (alxCorrectedMagnitude.c:489)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 
 6 errors in context 225 of 295:
 Possible data race during read of size 8 at 0x68c7970 by thread #15
    at 0x66B6E0D: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1080)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #13
    at 0x66B56C6: alxGetColorTableForStar (alxCorrectedMagnitude.c:488)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 
 6 errors in context 226 of 295:
 Possible data race during read of size 8 at 0x68c7960 by thread #15
    at 0x66B6DC6: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1078)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #13
    at 0x66B56C6: alxGetColorTableForStar (alxCorrectedMagnitude.c:488)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 
 6 errors in context 227 of 295:
 Possible data race during read of size 8 at 0x68c7950 by thread #15
    at 0x66B6D7F: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1076)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #13
    at 0x66B56C6: alxGetColorTableForStar (alxCorrectedMagnitude.c:488)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 
 6 errors in context 228 of 295:
 Possible data race during read of size 8 at 0x68c7940 by thread #15
    at 0x66B6D38: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1074)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #13
    at 0x66B56C6: alxGetColorTableForStar (alxCorrectedMagnitude.c:488)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 
 6 errors in context 229 of 295:
 Possible data race during read of size 8 at 0x68c7930 by thread #15
    at 0x66B6CF1: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1072)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #13
    at 0x66B56C6: alxGetColorTableForStar (alxCorrectedMagnitude.c:488)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 
 6 errors in context 230 of 295:
 Possible data race during read of size 8 at 0x68c7920 by thread #15
    at 0x66B6CAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1070)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #13
    at 0x66B56C6: alxGetColorTableForStar (alxCorrectedMagnitude.c:488)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 
 6 errors in context 231 of 295:
 Possible data race during read of size 8 at 0x68c7910 by thread #15
    at 0x66B6BF1: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1065)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #13
    at 0x66B56C6: alxGetColorTableForStar (alxCorrectedMagnitude.c:488)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 
 6 errors in context 232 of 295:
 Possible data race during read of size 4 at 0x68c64c8 by thread #15
    at 0x66B66FD: alxGetLineForBrightStar (alxCorrectedMagnitude.c:812)
    by 0x66B6AD8: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1042)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
  This conflicts with a previous write of size 4 by thread #13
    at 0x66B572D: alxGetColorTableForStar (alxCorrectedMagnitude.c:498)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
 
 
 6 errors in context 233 of 295:
 Possible data race during read of size 4 at 0x68c64b8 by thread #15
    at 0x66B540A: alxGetColorTableForStar (alxCorrectedMagnitude.c:412)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
  This conflicts with a previous write of size 4 by thread #13
    at 0x66B5734: alxGetColorTableForStar (alxCorrectedMagnitude.c:501)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
  Location 0x68c64b8 is 0 bytes inside colorTablesBright[1].loaded,
  declared at alxCorrectedMagnitude.c:387, in frame #0 of thread 5
 
 
 6 errors in context 234 of 295:
 Possible data race during read of size 4 at 0x68c3680 by thread #15
    at 0x66B4C23: alxGetExtinctionRatioTable (alxCorrectedMagnitude.c:121)
    by 0x66B9213: alxComputeCorrectedMagnitudes (alxCorrectedMagnitude.c:1718)
    by 0x621C34C: sclsvrCALIBRATOR::ComputeInterstellarAbsorption(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:972)
    by 0x621CF99: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:114)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 4 by thread #13
    at 0x66B501F: alxGetExtinctionRatioTable (alxCorrectedMagnitude.c:263)
    by 0x66B9213: alxComputeCorrectedMagnitudes (alxCorrectedMagnitude.c:1718)
    by 0x621C34C: sclsvrCALIBRATOR::ComputeInterstellarAbsorption(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:972)
    by 0x621CF99: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:114)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  Location 0x68c3680 is 0 bytes inside extinctionRatioTable.loaded,
  declared at alxCorrectedMagnitude.c:119, in frame #0 of thread 5
 
 
 6 errors in context 235 of 295:
 Possible data race during read of size 4 at 0x68e09c0 by thread #15
    at 0x66BC2C7: alxGetPolynamialForInterstellarAbsorption (alxInterstellarAbsorption.c:76)
    by 0x66BC5BD: alxComputeExtinctionCoefficient (alxInterstellarAbsorption.c:177)
    by 0x621C643: sclsvrCALIBRATOR::ComputeExtinctionCoefficient() (sclsvrCALIBRATOR.cpp:842)
    by 0x621CF77: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:108)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 4 by thread #13
    at 0x66BC54A: alxGetPolynamialForInterstellarAbsorption (alxInterstellarAbsorption.c:148)
    by 0x66BC5BD: alxComputeExtinctionCoefficient (alxInterstellarAbsorption.c:177)
    by 0x621C643: sclsvrCALIBRATOR::ComputeExtinctionCoefficient() (sclsvrCALIBRATOR.cpp:842)
    by 0x621CF77: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:108)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  Location 0x68e09c0 is 0 bytes inside polynomial.loaded,
  declared at alxInterstellarAbsorption.c:74, in frame #0 of thread 5
 
 
 6 errors in context 236 of 295:
 Possible data race during read of size 8 at 0x68d6060 by thread #7
    at 0x66BA030: alxGetLineForTeffLogg (alxCorrectedMagnitude.c:2088)
    by 0x66BA20A: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2179)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #5
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B9EEB: alxGetTeffLoggTable (alxCorrectedMagnitude.c:2042)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 7 errors in context 237 of 295:
 Possible data race during write of size 4 at 0x92ffd90 by thread #15
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x70F52D9: errGetErrProp (errAddInLocalStack_L.c:88)
    by 0x70F5D08: errAddInLocalStack_v (errAddInLocalStack_L.c:398)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647D393: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:225)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 7 errors in context 238 of 295:
 Possible data race during read of size 4 at 0x92ffd90 by thread #15
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x70F52D9: errGetErrProp (errAddInLocalStack_L.c:88)
    by 0x70F5D08: errAddInLocalStack_v (errAddInLocalStack_L.c:398)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647D393: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:225)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 7 errors in context 239 of 295:
 Possible data race during write of size 4 at 0xb10b890 by thread #13
    at 0x8EE4F8E: ??? (in /usr/lib64/libz.so.1.2.3)
    by 0x53422A5: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x534237A: __xmlParserInputBufferCreateFilename (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531BECA: xmlNewInputFromFile (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342E6C: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
  This conflicts with a previous read of size 4 by thread #10
    at 0x89C8720: vfprintf (in /lib64/libc-2.5.so)
    by 0x89E9B48: vsprintf (in /lib64/libc-2.5.so)
    by 0x89D3527: sprintf (in /lib64/libc-2.5.so)
    by 0x40DBC4: soap_element (stdsoap2_cpp.cpp:7169)
    by 0x40E4DF: soap_element_begin_out (stdsoap2_cpp.cpp:7246)
    by 0x6000AE1: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:111)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 
 7 errors in context 240 of 295:
 Possible data race during write of size 1 at 0xdbf7e2a by thread #7
    at 0x72FCDFA: miscDynBufAlloc (miscDynBuf.c:374)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA5B: miscResolvePath (miscFile.c:555)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FEFB7: miscLocateFileInPath (miscFile.c:811)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
 
 
 8 errors in context 241 of 295:
 Possible data race during read of size 8 at 0x5626e20 by thread #13
    at 0x53D1A38: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 8 by thread #15
    at 0x53D197A: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D1B91: xmlDictCreate (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C9DB: xmlInitParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531CA4D: xmlNewParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBBC: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
 
 
 8 errors in context 242 of 295:
 Possible data race during write of size 4 at 0x5626b10 by thread #15
    at 0x4E504C0: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x70F53F0: errGetErrProp (errAddInLocalStack_L.c:152)
    by 0x70F5D08: errAddInLocalStack_v (errAddInLocalStack_L.c:398)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E502F8: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 8 errors in context 243 of 295:
 Possible data race during read of size 4 at 0x5626b10 by thread #15
    at 0x4E5041C: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x70F53F0: errGetErrProp (errAddInLocalStack_L.c:152)
    by 0x70F5D08: errAddInLocalStack_v (errAddInLocalStack_L.c:398)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E502F8: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 8 errors in context 244 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x64732DD: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:103)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x646C376: vobsSTAR::AddProperties() (vobsSTAR.cpp:1139)
    by 0x646CE15: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x621E46B: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:56)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 10 errors in context 245 of 295:
 Possible data race during write of size 8 at 0x92ff720 by thread #5
    at 0x73006D4: miscHashDeleteElement (miscHash.c:419)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x62277EC: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:432)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous read of size 8 by thread #7
    at 0x730028B: miscHashLookUp (miscHash.c:189)
    by 0x7300440: miscHashAddElement (miscHash.c:304)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x6226F61: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:189)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x6000C92: soap_serve_request(soap*) (soapServer.cpp:79)
 
 
 12 errors in context 246 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x6217794: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2246)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 12 errors in context 247 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5960653: std::string::length() const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6472CD0: vobsSTAR_PROPERTY::GetLink() const (vobsSTAR_PROPERTY.cpp:486)
    by 0x64942A6: vobsVOTABLE::GetVotable(vobsSTAR_LIST&, char const*, char const*, char const*, char const*, char const*, miscoDYN_BUF*) (vobsVOTABLE.cpp:230)
    by 0x6475267: vobsSTAR_LIST::GetVOTable(char const*, char const*, char const*, char const*, miscoDYN_BUF*) (vobsSTAR_LIST.cpp:556)
    by 0x62275D0: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:376)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 13 errors in context 248 of 295:
 Possible data race during read of size 8 at 0x92ff730 by thread #7
    at 0x730028B: miscHashLookUp (miscHash.c:189)
    by 0x7300758: miscHashGetElement (miscHash.c:456)
    by 0x75039E8: timlogStop (timlog.c:128)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #5
    at 0x73006D4: miscHashDeleteElement (miscHash.c:419)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 13 errors in context 249 of 295:
 Possible data race during write of size 4 at 0xed0d890 by thread #15
    at 0x8EE45BB: ??? (in /usr/lib64/libz.so.1.2.3)
    by 0x8EE4FC6: ??? (in /usr/lib64/libz.so.1.2.3)
    by 0x53422A5: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x534237A: __xmlParserInputBufferCreateFilename (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531BECA: xmlNewInputFromFile (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342E6C: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
  This conflicts with a previous read of size 4 by thread #8
    at 0x89C8720: vfprintf (in /lib64/libc-2.5.so)
    by 0x89E9B48: vsprintf (in /lib64/libc-2.5.so)
    by 0x89D3527: sprintf (in /lib64/libc-2.5.so)
    by 0x40DBC4: soap_element (stdsoap2_cpp.cpp:7169)
    by 0x40E4DF: soap_element_begin_out (stdsoap2_cpp.cpp:7246)
    by 0x60005C5: soap_serve_ns__GetCalQueryStatus(soap*) (soapServer.cpp:199)
    by 0x6000CC4: soap_serve_request(soap*) (soapServer.cpp:81)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
 
 
 14 errors in context 250 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473217: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:69)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x646BD16: vobsSTAR::AddProperties() (vobsSTAR.cpp:1076)
    by 0x646CE15: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x621E46B: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:56)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 16 errors in context 251 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473302: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:108)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x646C2FC: vobsSTAR::AddProperties() (vobsSTAR.cpp:1134)
    by 0x646CD49: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x6218D82: sclsvrCALIBRATOR::ComputeDistance(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:1884)
    by 0x621E3C9: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:561)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 16 errors in context 252 of 295:
 Possible data race during read of size 1 at 0x9367ff1 by thread #7
    at 0x5387314: xmlStrdup (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C004: xmlNewInputFromFile (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342E6C: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
 
 
 17 errors in context 253 of 295:
 Possible data race during write of size 1 at 0x9367ff0 by thread #7
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA5B: miscResolvePath (miscFile.c:555)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
 
 
 19 errors in context 254 of 295:
 Possible data race during write of size 8 at 0x92ff730 by thread #7
    at 0x73004DB: miscHashAddElement (miscHash.c:327)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
  This conflicts with a previous write of size 8 by thread #5
    at 0x73006D4: miscHashDeleteElement (miscHash.c:419)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 21 errors in context 255 of 295:
 Possible data race during read of size 8 at 0x5626e20 by thread #13
    at 0x53D19D1: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 8 by thread #15
    at 0x53D197A: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53D1B91: xmlDictCreate (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C9DB: xmlInitParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531CA4D: xmlNewParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBBC: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
 
 
 21 errors in context 256 of 295:
 Possible data race during read of size 4 at 0x5626e18 by thread #13
    at 0x53D19C5: xmlDictFree (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C3F4: xmlFreeParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5333803: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 4 by thread #15
    at 0x53D193A: xmlDictCleanup (in /usr/lib64/libxml2.so.2.6.26)
    by 0x532020E: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 21 errors in context 257 of 295:
 Possible data race during read of size 4 at 0x5625a90 by thread #13
    at 0x5320254: xmlInitParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533294D: xmlParseDocument (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337E5: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 4 by thread #15
    at 0x532023A: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 21 errors in context 258 of 295:
 Possible data race during read of size 8 at 0x5625a50 by thread #13
    at 0x53191F0: xmlGetCharEncodingHandler (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5341EEA: xmlAllocParserInputBuffer (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342000: xmlParserInputBufferCreateMem (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECC3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 8 by thread #15
    at 0x5317BD8: xmlCleanupCharEncodingHandlers (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5320204: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 21 errors in context 259 of 295:
 Possible data race during read of size 4 at 0x5626e18 by thread #13
    at 0x53D1B83: xmlDictCreate (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531C9DB: xmlInitParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531CA4D: xmlNewParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECAE: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
  This conflicts with a previous write of size 4 by thread #15
    at 0x53D193A: xmlDictCleanup (in /usr/lib64/libxml2.so.2.6.26)
    by 0x532020E: xmlCleanupParser (in /usr/lib64/libxml2.so.2.6.26)
    by 0x7D17672: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1004)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 21 errors in context 260 of 295:
 Possible data race during write of size 4 at 0x92ffd90 by thread #15
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x70F5C2B: errGetErrProp (errAddInLocalStack_L.c:355)
    by 0x70F5D08: errAddInLocalStack_v (errAddInLocalStack_L.c:398)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647D393: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:225)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 21 errors in context 261 of 295:
 Possible data race during read of size 4 at 0x92ffd90 by thread #15
    at 0x4E507D7: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x70F5C2B: errGetErrProp (errAddInLocalStack_L.c:355)
    by 0x70F5D08: errAddInLocalStack_v (errAddInLocalStack_L.c:398)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647D393: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:225)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 21 errors in context 262 of 295:
 Possible data race during write of size 4 at 0x5626b10 by thread #15
    at 0x4E50488: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x70F53F0: errGetErrProp (errAddInLocalStack_L.c:152)
    by 0x70F5D08: errAddInLocalStack_v (errAddInLocalStack_L.c:398)
    by 0x70F62ED: errAddInStack (errAddInStack.c:63)
    by 0x7503A0D: timlogStop (timlog.c:131)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E502F8: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 22 errors in context 263 of 295:
 Possible data race during read of size 8 at 0x92ff730 by thread #7
    at 0x730028B: miscHashLookUp (miscHash.c:189)
    by 0x7300440: miscHashAddElement (miscHash.c:304)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #5
    at 0x73006D4: miscHashDeleteElement (miscHash.c:419)
    by 0x7503AF8: timlogStop (timlog.c:166)
    by 0x648A517: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:280)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 23 errors in context 264 of 295:
 Possible data race during write of size 1 at 0x934120a by thread #7
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEF99: miscLocateFileInPath (miscFile.c:807)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
  This conflicts with a previous write of size 1 by thread #5
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA5B: miscResolvePath (miscFile.c:555)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
 
 
 24 errors in context 265 of 295:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #5
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646FDE0: std::pair<int const, std::string>::pair(std::pair<int const, std::string> const&) (stl_pair.h:69)
    by 0x646FE1E: __gnu_cxx::new_allocator<std::pair<int const, std::string> >::construct(std::pair<int const, std::string>*, std::pair<int const, std::string> const&) (new_allocator.h:104)
    by 0x6470FEA: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_create_node(std::pair<int const, std::string> const&) (stl_tree.h:369)
    by 0x64710CC: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<int const, std::string> const&) (stl_tree.h:819)
    by 0x6471412: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::insert_unique(std::_Rb_tree_iterator<std::pair<int const, std::string> >, std::pair<int const, std::string> const&) (stl_tree.h:947)
    by 0x64717AA: std::map<int, std::string, std::less<int>, std::allocator<std::pair<int const, std::string> > >::insert(std::_Rb_tree_iterator<std::pair<int const, std::string> >, std::pair<int const, std::string> const&) (stl_map.h:420)
    by 0x6471853: std::map<int, std::string, std::less<int>, std::allocator<std::pair<int const, std::string> > >::operator[](int const&) (stl_map.h:348)
  This conflicts with a previous write of size 4 by thread #7
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 27 errors in context 266 of 295:
 Possible data race during write of size 1 at 0x9341200 by thread #7
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FEF71: miscLocateFileInPath (miscFile.c:805)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 1 by thread #5
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA5B: miscResolvePath (miscFile.c:555)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FF0EE: miscLocateFile (miscFile.c:878)
    by 0x647EDC7: vobsLOCAL_CATALOG::Load() (vobsLOCAL_CATALOG.cpp:91)
    by 0x6483188: vobsCATALOG_MIDI::Load() (vobsCATALOG_MIDI.cpp:238)
    by 0x64834CC: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:71)
 
 
 29 errors in context 267 of 295:
 Possible data race during write of size 1 at 0x5bb4e18 by thread #3
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623425E: sclsvrSCENARIO_SINGLE_STAR::sclsvrSCENARIO_SINGLE_STAR(sdbENTRY*) (sclsvrSCENARIO_SINGLE_STAR.cpp:35)
    by 0x6222235: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 1 by thread #5
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 29 errors in context 268 of 295:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #3
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623425E: sclsvrSCENARIO_SINGLE_STAR::sclsvrSCENARIO_SINGLE_STAR(sdbENTRY*) (sclsvrSCENARIO_SINGLE_STAR.cpp:35)
    by 0x6222235: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
  This conflicts with a previous write of size 4 by thread #5
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 29 errors in context 269 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x623425E: sclsvrSCENARIO_SINGLE_STAR::sclsvrSCENARIO_SINGLE_STAR(sdbENTRY*) (sclsvrSCENARIO_SINGLE_STAR.cpp:35)
    by 0x6222235: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x6000DE3: soap_serve(soap*) (soapServer.cpp:49)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 30 errors in context 270 of 295:
 Possible data race during write of size 4 at 0x5bb4e10 by thread #5
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #2
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 
 34 errors in context 271 of 295:
 Possible data race during write of size 8 at 0x5bb4e00 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #2
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 
 39 errors in context 272 of 295:
 Possible data race during read of size 8 at 0x68c65d8 by thread #15
    at 0x66B66A9: alxGetLineForBrightStar (alxCorrectedMagnitude.c:821)
    by 0x66B6AD8: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1042)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B561F: alxGetColorTableForStar (alxCorrectedMagnitude.c:469)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
 
 
 44 errors in context 273 of 295:
 Possible data race during write of size 4 at 0x5625a8c by thread #13
    at 0x531BE6A: xmlNewInputStream (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECD3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 4 by thread #15
    at 0x531BE6A: xmlNewInputStream (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531BF37: xmlNewInputFromFile (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342E6C: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
 
 
 44 errors in context 274 of 295:
 Possible data race during read of size 4 at 0x5625a8c by thread #13
    at 0x531BE49: xmlNewInputStream (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531ECD3: xmlCreateMemoryParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x53337A1: xmlSAXParseMemoryWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E50342: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
  This conflicts with a previous write of size 4 by thread #15
    at 0x531BE6A: xmlNewInputStream (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531BF37: xmlNewInputFromFile (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342E6C: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
 
 
 44 errors in context 275 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #3
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647D64D: vobsCATALOG::vobsCATALOG(char const*) (vobsCATALOG.cpp:47)
    by 0x647EA44: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
    by 0x64847D1: vobsCATALOG_AKARI::vobsCATALOG_AKARI() (vobsCATALOG_AKARI.cpp:34)
    by 0x6485B45: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6489139: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x6222178: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
  This conflicts with a previous write of size 8 by thread #5
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 48 errors in context 276 of 295:
 Possible data race during read of size 8 at 0x68c3690 by thread #15
    at 0x66B927D: alxComputeCorrectedMagnitudes (alxCorrectedMagnitude.c:1736)
    by 0x621C34C: sclsvrCALIBRATOR::ComputeInterstellarAbsorption(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:972)
    by 0x621CF99: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:114)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x66B4C63: alxGetExtinctionRatioTable (alxCorrectedMagnitude.c:132)
    by 0x66B9213: alxComputeCorrectedMagnitudes (alxCorrectedMagnitude.c:1718)
    by 0x621C34C: sclsvrCALIBRATOR::ComputeInterstellarAbsorption(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:972)
    by 0x621CF99: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:114)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
 
 
 48 errors in context 277 of 295:
 Possible data race during read of size 1 at 0xdbf7e20 by thread #7
    at 0x72FCBA6: miscDynBufChkStringParam (miscDynBuf.c:252)
    by 0x72FDF1E: miscDynBufAppendString (miscDynBuf.c:1537)
    by 0x72FE7DE: miscResolvePath (miscFile.c:459)
    by 0x7D17560: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:966)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
 
 
 55 errors in context 278 of 295:
 Possible data race during write of size 4 at 0x92ffd90 by thread #13
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647D393: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:225)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #15
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1766D: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1003)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 55 errors in context 279 of 295:
 Possible data race during read of size 4 at 0x92ffd90 by thread #13
    at 0x4E507D7: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647D393: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:225)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #15
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1766D: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1003)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 57 errors in context 280 of 295:
 Possible data race during write of size 4 at 0x5626b10 by thread #13
    at 0x4E502F8: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #15
    at 0x4E50488: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 57 errors in context 281 of 295:
 Possible data race during write of size 4 at 0x5626b10 by thread #13
    at 0x4E50330: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #15
    at 0x4E50488: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 57 errors in context 282 of 295:
 Possible data race during read of size 4 at 0x5626b10 by thread #13
    at 0x4E50281: gdome_xml_di_createDocFromMemory (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CE0D: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:102)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #15
    at 0x4E50488: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7D1759F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
    by 0x60007D6: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 57 errors in context 283 of 295:
 Possible data race during write of size 4 at 0x92ffd90 by thread #15
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CD3F: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:84)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647D393: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:225)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 57 errors in context 284 of 295:
 Possible data race during read of size 4 at 0x92ffd90 by thread #15
    at 0x4E50C70: gdome_xml_di_mkref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647CD3F: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:84)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 4 by thread #13
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x647D393: vobsPARSER::Parse(char const*, char const*, char const*, vobsSTAR_LIST&, char const*) (vobsPARSER.cpp:225)
    by 0x647E544: vobsREMOTE_CATALOG::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsREMOTE_CATALOG.cpp:187)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 66 errors in context 285 of 295:
 Possible data race during read of size 1 at 0x932c271 by thread #15
    at 0x4C24D6E: strcmp (hg_intercepts.c:2309)
    by 0x73002A3: miscHashLookUp (miscHash.c:195)
    by 0x7300440: miscHashAddElement (miscHash.c:304)
    by 0x7503C32: timlogStart (timlog.c:89)
    by 0x648A1E9: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:235)
    by 0x6488E39: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x622727B: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 1 by thread #14
    at 0x5BD2C81: recv (in /lib64/libpthread-2.5.so)
    by 0x40FC96: frecv (stdsoap2_cpp.cpp:955)
    by 0x4121C6: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x412570: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4126AC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413924: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x6000D7D: soap_serve(soap*) (soapServer.cpp:35)
    by 0x403491: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 
 72 errors in context 286 of 295:
 Possible data race during write of size 1 at 0xdbf7be0 by thread #7
    at 0x72FCDFA: miscDynBufAlloc (miscDynBuf.c:374)
    by 0x72FDEB3: miscDynBufAppendBytes (miscDynBuf.c:1501)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FE93B: miscResolvePath (miscFile.c:511)
    by 0x72FECAB: miscFileExists (miscFile.c:680)
    by 0x72FEFB7: miscLocateFileInPath (miscFile.c:811)
    by 0x72FF1C2: miscLocateFile (miscFile.c:910)
    by 0x7D17519: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:954)
 
 
 91 errors in context 287 of 295:
 Possible data race during read of size 1 at 0x68c64d0 by thread #15
    at 0x66B6686: alxGetLineForBrightStar (alxCorrectedMagnitude.c:815)
    by 0x66B6AD8: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1042)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
    by 0x621DBE3: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:393)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
  This conflicts with a previous write of size 1 by thread #13
    at 0x89DA461: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B561F: alxGetColorTableForStar (alxCorrectedMagnitude.c:469)
    by 0x66B6AAA: alxComputeDiffMagnitudeForBrightStar (alxCorrectedMagnitude.c:1035)
    by 0x66B8A73: alxComputeMagnitudesForBrightStar (alxCorrectedMagnitude.c:1568)
    by 0x621CB1A: sclsvrCALIBRATOR::ComputeMissingMagnitude(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:641)
    by 0x621CFB8: sclsvrCALIBRATOR::CompleteWithParallax(mcsLOGICAL) (sclsvrCALIBRATOR.cpp:120)
 
 
 94 errors in context 288 of 295:
 Possible data race during read of size 1 at 0x68d5558 by thread #7
    at 0x66BA00D: alxGetLineForTeffLogg (alxCorrectedMagnitude.c:2082)
    by 0x66BA20A: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2179)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 1 by thread #5
    at 0x89DA461: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66B9EEB: alxGetTeffLoggTable (alxCorrectedMagnitude.c:2042)
    by 0x66BA197: alxRetrieveTeffAndLoggFromSptype (alxCorrectedMagnitude.c:2172)
    by 0x6218C05: sclsvrCALIBRATOR::ComputeTeffLogg() (sclsvrCALIBRATOR.cpp:1981)
    by 0x621D286: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:239)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 136 errors in context 289 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x647375D: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY() (vobsSTAR_PROPERTY.cpp:42)
    by 0x6470A67: std::map<std::string, vobsSTAR_PROPERTY, std::less<std::string>, std::allocator<std::pair<std::string const, vobsSTAR_PROPERTY> > >::operator[](std::string const&) (stl_map.h:348)
    by 0x646B989: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1036)
    by 0x646CCE5: vobsSTAR::AddProperties() (vobsSTAR.cpp:1237)
    by 0x646CD49: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x64835CB: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:95)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous write of size 8 by thread #3
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 
 159 errors in context 290 of 295:
 Possible data race during write of size 1 at 0xdbf7e20 by thread #7
    at 0x72FDEE5: miscDynBufAppendBytes (miscDynBuf.c:1507)
    by 0x72FDFA9: miscDynBufAppendString (miscDynBuf.c:1576)
    by 0x72FEA5B: miscResolvePath (miscFile.c:555)
    by 0x7D17560: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:966)
    by 0x7D177BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62231A7: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x6226F16: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
 
 
 245 errors in context 291 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6473206: vobsSTAR_PROPERTY::vobsSTAR_PROPERTY(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR_PROPERTY.cpp:68)
    by 0x646B958: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1033)
    by 0x62177D1: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2249)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 353 errors in context 292 of 295:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #5
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646BA32: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x62178C5: sclsvrCALIBRATOR::AddProperties() (sclsvrCALIBRATOR.cpp:2259)
    by 0x621E493: sclsvrCALIBRATOR::sclsvrCALIBRATOR(vobsSTAR&) (sclsvrCALIBRATOR.cpp:61)
    by 0x621F66D: sclsvrCALIBRATOR_LIST::AddAtTail(vobsSTAR&) (sclsvrCALIBRATOR_LIST.cpp:148)
    by 0x621EA82: sclsvrCALIBRATOR_LIST::Copy(vobsSTAR_LIST&) (sclsvrCALIBRATOR_LIST.cpp:67)
    by 0x62272B3: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:309)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
  This conflicts with a previous write of size 8 by thread #7
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6489879: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (vobsSCENARIO_ENTRY.cpp:42)
    by 0x648AB13: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x62306DB: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x622723D: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
 
 
 544 errors in context 293 of 295:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #5
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x646FDAC: std::pair<int const, std::string>::pair(int const&, std::string const&) (stl_pair.h:85)
    by 0x6471842: std::map<int, std::string, std::less<int>, std::allocator<std::pair<int const, std::string> > >::operator[](int const&) (stl_map.h:348)
    by 0x646B9F6: vobsSTAR::AddProperty(char const*, char const*, vobsPROPERTY_TYPE, char const*, char const*, char const*, char const*) (vobsSTAR.cpp:1037)
    by 0x646BAF8: vobsSTAR::AddProperties() (vobsSTAR.cpp:1053)
    by 0x646CD49: vobsSTAR::vobsSTAR() (vobsSTAR.cpp:46)
    by 0x64835CB: vobsCATALOG_MIDI::Search(vobsREQUEST&, vobsSTAR_LIST&) (vobsCATALOG_MIDI.cpp:95)
    by 0x648A42A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:269)
  This conflicts with a previous write of size 4 by thread #3
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6478CA8: vobsREQUEST::vobsREQUEST() (vobsREQUEST.cpp:38)
    by 0x622B30E: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x6222193: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FF43E7: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:231)
    by 0x6000A60: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x6000C5D: soap_serve_request(soap*) (soapServer.cpp:77)
 
 
 2448 errors in context 294 of 295:
 Possible data race during read of size 8 at 0x68d7040 by thread #15
    at 0x66BAAE4: alxGetLineForUd (alxCorrectedMagnitude.c:2329)
    by 0x66BAD1C: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2385)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 2448 errors in context 295 of 295:
 Possible data race during read of size 8 at 0x68d7d08 by thread #15
    at 0x66BAA76: alxGetLineForUd (alxCorrectedMagnitude.c:2329)
    by 0x66BAD1C: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2385)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
    by 0x62272DF: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:315)
    by 0x6226E72: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FF39B2: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:315)
  This conflicts with a previous write of size 8 by thread #13
    at 0x89DC1B2: _IO_vfscanf (in /lib64/libc-2.5.so)
    by 0x89E9C14: vsscanf (in /lib64/libc-2.5.so)
    by 0x89E4F67: sscanf (in /lib64/libc-2.5.so)
    by 0x66BA7D2: alxGetUDTable (alxCorrectedMagnitude.c:2286)
    by 0x66BACAA: alxGetUDFromLDAndSP (alxCorrectedMagnitude.c:2375)
    by 0x6219F6F: sclsvrCALIBRATOR::ComputeUDFromLDAndSP() (sclsvrCALIBRATOR.cpp:1602)
    by 0x621E3A0: sclsvrCALIBRATOR::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR.cpp:555)
    by 0x621F5BB: sclsvrCALIBRATOR_LIST::Complete(sclsvrREQUEST&) (sclsvrCALIBRATOR_LIST.cpp:173)
 
 
 used_suppression:  41201 helgrind-glibc2X-005
 used_suppression: 672843 helgrind-glibc2X-004
 used_suppression:   1675 gSoap2_recv
 used_suppression:     82 helgrind-glibc2X-112
 used_suppression:     76 gSoap2_http_parse
 used_suppression:    228 gSoap2_tag_cmp
 used_suppression:    304 helgrind-glibc2X-102
 used_suppression:     10 helgrind-glibc2X-101
 
 ERROR SUMMARY: 8774 errors from 295 contexts (suppressed: 716419 from 1008)

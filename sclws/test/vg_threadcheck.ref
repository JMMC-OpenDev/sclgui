 Helgrind, a thread error detector
 Copyright (C) 2007-2009, and GNU GPL'd, by OpenWorks LLP et al.
 Using Valgrind-3.5.0 and LibVEX; rerun with -h for copyright info
 Command: sclwsServer -v 1
 Parent PID: 27641
 
 
 Valgrind options:
    -v
    --tool=helgrind
    --conflict-cache-size=10000000
    --read-var-info=yes
    --log-file=./vg_threadcheck.log
 Contents of /proc/version:
   Linux version 2.6.32-4-pve (unknown) (root@oahu) (gcc version 4.3.2 (Debian 4.3.2-1.1) ) #1 SMP Tue Mar 29 09:08:37 CEST 2011
 Arch and hwcaps: AMD64, amd64-sse3-cx16
 Page sizes: currently 4096, max supported 4096
 Valgrind library directory: /usr/lib64/valgrind
 Reading syms from /home/users/bourgesl/dev/SCALIB/DEVELOPMENT/sclws/bin/sclwsServer (0x400000)
 warning: addVar: unknown size (cliHandler)
 Reading syms from /lib64/ld-2.5.so (0x4000000)
 Reading syms from /usr/lib64/valgrind/helgrind-amd64-linux (0x38000000)
    object doesn't have a dynamic symbol table
 Reading suppressions file: /usr/lib64/valgrind/default.supp
 Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so (0x4a1d000)
 Reading syms from /usr/lib64/valgrind/vgpreload_helgrind-amd64-linux.so (0x4c1e000)
 REDIR: 0x4014370 (index) redirected to 0x4c24c8b (index)
 REDIR: 0x4014520 (strcmp) redirected to 0x4c24d98 (strcmp)
 REDIR: 0x4014550 (strlen) redirected to 0x4c24cf9 (strlen)
 Reading syms from /usr/lib64/libgdome.so.0.8.1 (0x4e29000)
    object doesn't have a symbol table
 Reading syms from /lib64/libm-2.5.so (0x5067000)
 Reading syms from /usr/lib64/libxml2.so.2.6.26 (0x52ea000)
    object doesn't have a symbol table
 Reading syms from /lib64/libglib-2.0.so.0.1200.3 (0x5627000)
    object doesn't have a symbol table
 Reading syms from /usr/lib64/libstdc++.so.6.0.8 (0x58c5000)
    object doesn't have a symbol table
 Reading syms from /lib64/libpthread-2.5.so (0x5bc5000)
 Reading syms from /lib64/libuuid.so.1.2 (0x5de0000)
    object doesn't have a symbol table
 Reading syms from /home/users/bourgesl/dev/SCALIB/DEVELOPMENT/sclws/lib/libsclws.so (0x5fe4000)
 warning: addVar: unknown size (dynBuf)
 Reading syms from /home/users/bourgesl/INTROOT/lib/libsclsvr.so (0x61fe000)
 warning: addVar: unknown size (scienceObject)
 warning: addVar: unknown size (object)
 warning: addVar: unknown size (cData)
 warning: addVar: unknown size (calibrator)
 warning: addVar: unknown size (cdata)
 warning: addVar: unknown size (calibrator)
 warning: addVar: unknown size (star)
 warning: addVar: unknown size (star)
 Reading syms from /home/users/bourgesl/INTROOT/lib/libvobs.so (0x642c000)
 Reading syms from /home/users/bourgesl/INTROOT/lib/libalx.so (0x666f000)
 Reading syms from /home/users/bourgesl/INTROOT/lib/libsimcli.so (0x689f000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libthrd.so (0x6aa7000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libmcs.so (0x6cab000)
 Reading syms from /home/users/bourgesl/INTROOT/lib/liblog.so (0x6eac000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/liberr.so (0x70af000)
 Reading syms from /home/users/bourgesl/INTROOT/lib/libmisc.so (0x72b6000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libtimlog.so (0x74be000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libfnd.so (0x76c0000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libmisco.so (0x78c2000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libenv.so (0x7aca000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libcmd.so (0x7ccf000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libmsg.so (0x7ede000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libsdb.so (0x80ed000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libevh.so (0x82f0000)
 Reading syms from /home/MCS/DEVELOPMENT/lib/libgwt.so (0x850b000)
 Reading syms from /lib64/libgcc_s-4.1.2-20080825.so.1 (0x8733000)
    object doesn't have a symbol table
 Reading syms from /lib64/libc-2.5.so (0x8941000)
 Reading syms from /lib64/libdl-2.5.so (0x8c98000)
 Reading syms from /usr/lib64/libz.so.1.2.3 (0x8e9c000)
    object doesn't have a symbol table
 Reading syms from /lib64/librt-2.5.so (0x90b0000)
 REDIR: 0x89bd0f0 (memcpy) redirected to 0x4c24e3c (memcpy)
 REDIR: 0x89ba2d0 (index) redirected to 0x4c24bc9 (index)
 REDIR: 0x89baa00 (strlen) redirected to 0x4c24cbb (strlen)
 REDIR: 0x89b5890 (calloc) redirected to 0x4c20942 (calloc)
 REDIR: 0x59821c0 (operator new(unsigned long)) redirected to 0x4c21e9a (operator new(unsigned long))
 REDIR: 0x5980f50 (operator delete(void*)) redirected to 0x4c20f6c (operator delete(void*))
 REDIR: 0x89b5c70 (malloc) redirected to 0x4c2164a (malloc)
 REDIR: 0xffffffffff600000 (???) redirected to 0x3802e3b3 (vgPlain_amd64_linux_REDIR_FOR_vgettimeofday)
 REDIR: 0x89b3720 (free) redirected to 0x4c2125a (free)
 REDIR: 0x89ba4c0 (strcpy) redirected to 0x4c24d18 (strcpy)
 REDIR: 0x89ba480 (strcmp) redirected to 0x4c24d46 (strcmp)
 REDIR: 0x5bcdca0 (pthread_mutex_lock) redirected to 0x4c226c2 (pthread_mutex_lock)
 Reading syms from /lib64/libnss_files-2.5.so (0x96b9000)
 REDIR: 0x5bcf020 (pthread_mutex_unlock) redirected to 0x4c22b66 (pthread_mutex_unlock)
 REDIR: 0x5bcb9a0 (pthread_create@@GLIBC_2.2.5) redirected to 0x4c262a5 (pthread_create@*)
 Thread #3 was created
    at 0x8A14F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x40333F: main (sclwsServer.cpp:202)
 
 Thread #2 was created
    at 0x8A14F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x40333F: main (sclwsServer.cpp:202)
 
 Possible data race during write of size 8 at 0xa0c3f78 by thread #3
    at 0x40F900: frecv (stdsoap2_cpp.cpp:865)
    by 0x412106: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x4124B0: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4125EC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413864: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous read of size 1 by thread #2
    at 0x4C24EC8: memcpy (hg_intercepts.c:2358)
    by 0x873B2E5: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873B756: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
    by 0x40340D: sclwsJobHandler(void*) (sclwsServer.cpp:84)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
 
 Possible data race during write of size 8 at 0xa0c3f88 by thread #3
    at 0x40F905: frecv (stdsoap2_cpp.cpp:865)
    by 0x412106: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x4124B0: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4125EC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413864: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #2
    at 0x873B757: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
    by 0x40340D: sclwsJobHandler(void*) (sclwsServer.cpp:84)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
 
 Possible data race during write of size 8 at 0xa0c3f90 by thread #3
    at 0x40F90D: frecv (stdsoap2_cpp.cpp:865)
    by 0x412106: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x4124B0: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4125EC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413864: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous read of size 1 by thread #2
    at 0x4C24EC8: memcpy (hg_intercepts.c:2358)
    by 0x873B2E5: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873B756: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
    by 0x40340D: sclwsJobHandler(void*) (sclwsServer.cpp:84)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
 
 Possible data race during write of size 8 at 0xa0c3f80 by thread #3
    at 0x40F912: frecv (stdsoap2_cpp.cpp:865)
    by 0x412106: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x4124B0: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4125EC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413864: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 1 by thread #2
    at 0x873B3D4: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873B756: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
    by 0x40340D: sclwsJobHandler(void*) (sclwsServer.cpp:84)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
 
 Possible data race during write of size 8 at 0xa0c3f98 by thread #3
    at 0x40F91A: frecv (stdsoap2_cpp.cpp:865)
    by 0x412106: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x4124B0: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4125EC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413864: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #2
    at 0x873D6D1: _Unwind_Find_FDE (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873A624: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873B66A: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
    by 0x40340D: sclwsJobHandler(void*) (sclwsServer.cpp:84)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
 
 Possible data race during write of size 8 at 0xa0c1f60 by thread #3
    at 0x403670: soap_tag_cmp (stdsoap2_cpp.cpp:2844)
    by 0x413D0D: http_parse_header (stdsoap2_cpp.cpp:13223)
    by 0x4142F9: http_parse (stdsoap2_cpp.cpp:13123)
    by 0x4139CA: soap_begin_recv (stdsoap2_cpp.cpp:12968)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
 
 Possible data race during write of size 8 at 0xa0c1f68 by thread #3
    at 0x403675: soap_tag_cmp (stdsoap2_cpp.cpp:2844)
    by 0x413D0D: http_parse_header (stdsoap2_cpp.cpp:13223)
    by 0x4142F9: http_parse (stdsoap2_cpp.cpp:13123)
    by 0x4139CA: soap_begin_recv (stdsoap2_cpp.cpp:12968)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
 
 Possible data race during write of size 8 at 0xa0c1f70 by thread #3
    at 0x40367D: soap_tag_cmp (stdsoap2_cpp.cpp:2844)
    by 0x413D0D: http_parse_header (stdsoap2_cpp.cpp:13223)
    by 0x4142F9: http_parse (stdsoap2_cpp.cpp:13123)
    by 0x4139CA: soap_begin_recv (stdsoap2_cpp.cpp:12968)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
 
 Possible data race during write of size 8 at 0xa0c1f48 by thread #3
    at 0x403F60: soap_malloc (stdsoap2_cpp.cpp:5520)
    by 0x407343: soap_strdup (stdsoap2_cpp.cpp:2113)
    by 0x413D7B: http_parse_header (stdsoap2_cpp.cpp:13237)
    by 0x4142F9: http_parse (stdsoap2_cpp.cpp:13123)
    by 0x4139CA: soap_begin_recv (stdsoap2_cpp.cpp:12968)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
 
 REDIR: 0x5bcd5b0 (pthread_mutex_init) redirected to 0x4c25ff1 (pthread_mutex_init)
 REDIR: 0x89b6190 (realloc) redirected to 0x4c216fb (realloc)
 REDIR: 0x5bcd740 (pthread_mutex_destroy) redirected to 0x4c2257a (pthread_mutex_destroy)
 REDIR: 0x89b60e0 (posix_memalign) redirected to 0x4c208f7 (posix_memalign)
 Thread #4 was created
    at 0x8A14F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x40333F: main (sclwsServer.cpp:202)
 
 Possible data race during read of size 4 at 0x92d8960 by thread #4
    at 0x80EE3B4: sdbENTRY::IsInit() (sdbENTRY.cpp:225)
    by 0x80EE427: sdbENTRY::Write(char const*) (sdbENTRY.cpp:88)
    by 0x6457B8A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:242)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x5FF81FA: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
  This conflicts with a previous write of size 4 by thread #3
    at 0x80EE342: sdbENTRY::Destroy() (sdbENTRY.cpp:272)
    by 0x80EE35A: sdbENTRY::Init() (sdbENTRY.cpp:239)
    by 0x80EE56C: sdbENTRY::Read(char*, mcsLOGICAL, int) (sdbENTRY.cpp:142)
    by 0x621756D: sclsvrSERVER::GetStatus(char*, int) (sclsvrGetCalCB.cpp:68)
    by 0x5FEF97A: ns__GetCalQueryStatus(soap*, char*, char**) (sclwsWS.cpp:399)
    by 0x5FF7DB3: soap_serve_ns__GetCalQueryStatus(soap*) (soapServer.cpp:191)
    by 0x5FF821A: soap_serve_request(soap*) (soapServer.cpp:81)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
 
 Thread #6 was created
    at 0x8A14F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x40333F: main (sclwsServer.cpp:202)
 
 Possible data race during write of size 1 at 0xa8c4f78 by thread #6
    at 0x40F900: frecv (stdsoap2_cpp.cpp:865)
    by 0x412106: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x4124B0: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4125EC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413864: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous read of size 1 by thread #4
    at 0x4C24EC8: memcpy (hg_intercepts.c:2358)
    by 0x873B2E5: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873B756: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
    by 0x40340D: sclwsJobHandler(void*) (sclwsServer.cpp:84)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
 
 Possible data race during write of size 1 at 0xa8c4f90 by thread #6
    at 0x40F90D: frecv (stdsoap2_cpp.cpp:865)
    by 0x412106: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x4124B0: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4125EC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413864: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous read of size 1 by thread #4
    at 0x4C24EC8: memcpy (hg_intercepts.c:2358)
    by 0x873B2E5: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873B756: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
    by 0x40340D: sclwsJobHandler(void*) (sclwsServer.cpp:84)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
 
 Possible data race during write of size 1 at 0xa8c4f80 by thread #6
    at 0x40F912: frecv (stdsoap2_cpp.cpp:865)
    by 0x412106: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x4124B0: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4125EC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413864: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 1 by thread #4
    at 0x873B3D4: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873B756: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
    by 0x40340D: sclwsJobHandler(void*) (sclwsServer.cpp:84)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
 
 Possible data race during read of size 1 at 0x92f9010 by thread #6
    at 0x4C24D4D: strcmp (hg_intercepts.c:2309)
    by 0x89CD85C: tzset_internal (in /lib64/libc-2.5.so)
    by 0x89CE17D: __tz_convert (in /lib64/libc-2.5.so)
    by 0x6EAD203: logGetTimeStamp (log.c:700)
    by 0x6EAD654: logPrint (log.c:488)
    by 0x5FEE4EE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:181)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7CD266D: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1003)
    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during read of size 1 at 0x92f9011 by thread #6
    at 0x4C24D72: strcmp (hg_intercepts.c:2309)
    by 0x89CD85C: tzset_internal (in /lib64/libc-2.5.so)
    by 0x89CE17D: __tz_convert (in /lib64/libc-2.5.so)
    by 0x6EAD203: logGetTimeStamp (log.c:700)
    by 0x6EAD654: logPrint (log.c:488)
    by 0x5FEE4EE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:181)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7CD266D: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1003)
    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during read of size 4 at 0x5fe33a8 by thread #6
    at 0x5DE16D8: ??? (in /lib64/libuuid.so.1.2)
    by 0x5DE2418: uuid_generate (in /lib64/libuuid.so.1.2)
    by 0x5FEE4F8: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:185)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #2
    at 0x5DE1733: ??? (in /lib64/libuuid.so.1.2)
    by 0x5DE2418: uuid_generate (in /lib64/libuuid.so.1.2)
    by 0x5FEE4F8: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:185)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
 
 Possible data race during read of size 8 at 0x850a7f0 by thread #6
    at 0x82FB52F: evhHANDLER::evhHANDLER() (evhHANDLER.cpp:47)
    by 0x8300AEB: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:44)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x82FB709: evhHANDLER::~evhHANDLER() (evhHANDLER.cpp:60)
    by 0x830011B: evhSERVER::~evhSERVER() (evhSERVER.cpp:70)
    by 0x621219C: sclsvrSERVER::~sclsvrSERVER() (sclsvrSERVER.cpp:133)
    by 0x5FEE315: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:332)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x5FF81FA: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 Possible data race during write of size 8 at 0x850a7f0 by thread #6
    at 0x82FB535: evhHANDLER::evhHANDLER() (evhHANDLER.cpp:49)
    by 0x8300AEB: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:44)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x82FB709: evhHANDLER::~evhHANDLER() (evhHANDLER.cpp:60)
    by 0x830011B: evhSERVER::~evhSERVER() (evhSERVER.cpp:70)
    by 0x621219C: sclsvrSERVER::~sclsvrSERVER() (sclsvrSERVER.cpp:133)
    by 0x5FEE315: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:332)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x5FF81FA: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x830074A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8300BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6444356: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<int const, std::string> const&) (stl_pair.h:69)
    by 0x6444421: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::insert_unique(std::pair<int const, std::string> const&) (stl_tree.h:927)
    by 0x6444608: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::insert_unique(std::_Rb_tree_iterator<std::pair<int const, std::string> >, std::pair<int const, std::string> const&) (stl_tree.h:949)
    by 0x8300758: evhSERVER::AddState(int, char*) (stl_map.h:420)
    by 0x8300BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8300875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8300BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8300875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8300BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x830074A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8300BBA: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:48)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6444356: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<int const, std::string> const&) (stl_pair.h:69)
    by 0x64444C8: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::insert_unique(std::_Rb_tree_iterator<std::pair<int const, std::string> >, std::pair<int const, std::string> const&) (stl_tree.h:947)
    by 0x8300758: evhSERVER::AddState(int, char*) (stl_map.h:420)
    by 0x8300BBA: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:48)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8300875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8300BBA: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:48)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8300875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8300BBA: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:48)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x830074A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8300BCE: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:49)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8300875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8300BCE: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:49)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8300875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8300BCE: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:49)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x830074A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8300BE2: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:50)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8300875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8300BE2: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:50)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8300875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8300BE2: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:50)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83003A2: evhSERVER::AddSubState(int, char*) (stl_pair.h:85)
    by 0x8300BF6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:53)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300BF6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:53)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300BF6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:53)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83003A2: evhSERVER::AddSubState(int, char*) (stl_pair.h:85)
    by 0x8300C0A: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:54)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6444356: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<int const, std::string> const&) (stl_pair.h:69)
    by 0x64444C8: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::insert_unique(std::_Rb_tree_iterator<std::pair<int const, std::string> >, std::pair<int const, std::string> const&) (stl_tree.h:947)
    by 0x83003B0: evhSERVER::AddSubState(int, char*) (stl_map.h:420)
    by 0x8300C0A: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:54)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300C0A: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:54)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300C0A: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:54)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83003A2: evhSERVER::AddSubState(int, char*) (stl_pair.h:85)
    by 0x8300C1E: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:55)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300C1E: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:55)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300C1E: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:55)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83003A2: evhSERVER::AddSubState(int, char*) (stl_pair.h:85)
    by 0x8300C32: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:56)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300C32: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:56)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300C32: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:56)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83003A2: evhSERVER::AddSubState(int, char*) (stl_pair.h:85)
    by 0x8300C46: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:57)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300C46: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:57)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300C46: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:57)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644E316: vobsCATALOG::vobsCATALOG(char const*) (basic_string.h:915)
    by 0x644F011: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
    by 0x64508BD: vobsCATALOG_CIO::vobsCATALOG_CIO() (vobsCATALOG_CIO.cpp:44)
    by 0x6453EB7: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during write of size 4 at 0x5bb4e10 by thread #6
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 4 by thread #4
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456C5E: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
    by 0x6457CD1: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 8 at 0x5bb4e00 by thread #6
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 8 by thread #4
    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644F552: vobsLOCAL_CATALOG::SetOption(std::string) (basic_string.h:2200)
    by 0x6457CF5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:265)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 1 at 0x5bb4e18 by thread #6
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 1 by thread #4
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during write of size 4 at 0x5bb4e10 by thread #6
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 4 by thread #4
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456C5E: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
    by 0x6457CD1: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 8 at 0x5bb4e00 by thread #6
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 8 by thread #4
    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644F552: vobsLOCAL_CATALOG::SetOption(std::string) (basic_string.h:2200)
    by 0x6457CF5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:265)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 1 at 0x5bb4e18 by thread #6
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 1 by thread #4
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during write of size 4 at 0x5bb4e10 by thread #6
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 4 by thread #4
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456C5E: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
    by 0x6457CD1: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 8 at 0x5bb4e00 by thread #6
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 8 by thread #4
    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644F552: vobsLOCAL_CATALOG::SetOption(std::string) (basic_string.h:2200)
    by 0x6457CF5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:265)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 1 at 0x5bb4e18 by thread #6
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 1 by thread #4
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during write of size 4 at 0x5bb4e10 by thread #6
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 4 by thread #4
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456C5E: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
    by 0x6457CD1: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 8 at 0x5bb4e00 by thread #6
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 8 by thread #4
    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644F552: vobsLOCAL_CATALOG::SetOption(std::string) (basic_string.h:2200)
    by 0x6457CF5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:265)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 1 at 0x5bb4e18 by thread #6
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 1 by thread #4
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during write of size 4 at 0x5bb4e10 by thread #6
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 4 by thread #4
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456C5E: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
    by 0x6457CD1: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 8 at 0x5bb4e00 by thread #6
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 8 by thread #4
    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644F552: vobsLOCAL_CATALOG::SetOption(std::string) (basic_string.h:2200)
    by 0x6457CF5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:265)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 1 at 0x5bb4e18 by thread #6
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 1 by thread #4
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during write of size 4 at 0x5bb4e10 by thread #6
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 4 by thread #4
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456C5E: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
    by 0x6457CD1: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 8 at 0x5bb4e00 by thread #6
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 8 by thread #4
    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644F552: vobsLOCAL_CATALOG::SetOption(std::string) (basic_string.h:2200)
    by 0x6457CF5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:265)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 1 at 0x5bb4e18 by thread #6
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 1 by thread #4
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during write of size 4 at 0x5bb4e10 by thread #6
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 4 by thread #4
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456C5E: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
    by 0x6457CD1: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 8 at 0x5bb4e00 by thread #6
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 8 by thread #4
    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644F552: vobsLOCAL_CATALOG::SetOption(std::string) (basic_string.h:2200)
    by 0x6457CF5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:265)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 1 at 0x5bb4e18 by thread #6
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 1 by thread #4
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during write of size 4 at 0x5bb4e10 by thread #6
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 4 by thread #4
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456C5E: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
    by 0x6457CD1: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 8 at 0x5bb4e00 by thread #6
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 8 by thread #4
    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644F552: vobsLOCAL_CATALOG::SetOption(std::string) (basic_string.h:2200)
    by 0x6457CF5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:265)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 Possible data race during write of size 1 at 0x5bb4e18 by thread #6
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 1 by thread #4
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x621AF04: sclsvrSCENARIO_JSDC::sclsvrSCENARIO_JSDC(sdbENTRY*) (sclsvrSCENARIO_JSDC.cpp:35)
    by 0x62124DC: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x621AF04: sclsvrSCENARIO_JSDC::sclsvrSCENARIO_JSDC(sdbENTRY*) (sclsvrSCENARIO_JSDC.cpp:35)
    by 0x62124DC: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x621AF04: sclsvrSCENARIO_JSDC::sclsvrSCENARIO_JSDC(sdbENTRY*) (sclsvrSCENARIO_JSDC.cpp:35)
    by 0x62124DC: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 More than 100 errors detected.  Subsequent errors
 will still be recorded, but in less detail than before.
 Thread #8 was created
    at 0x8A14F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x40333F: main (sclwsServer.cpp:202)
 
 Thread #5 was created
    at 0x8A14F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x40333F: main (sclwsServer.cpp:202)
 
 Possible data race during write of size 4 at 0xdcc6890 by thread #8
    at 0x8E9FF8E: ??? (in /usr/lib64/libz.so.1.2.3)
    by 0x53422A5: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x534237A: __xmlParserInputBufferCreateFilename (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531BECA: xmlNewInputFromFile (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342E6C: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7CD259F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
  This conflicts with a previous read of size 4 by thread #5
    at 0x8983720: vfprintf (in /lib64/libc-2.5.so)
    by 0x89A4B48: vsprintf (in /lib64/libc-2.5.so)
    by 0x898E527: sprintf (in /lib64/libc-2.5.so)
    by 0x40DB04: soap_element (stdsoap2_cpp.cpp:7169)
    by 0x40E41F: soap_element_begin_out (stdsoap2_cpp.cpp:7246)
    by 0x5FF7CB3: soap_serve_ns__GetCalQueryStatus(soap*) (soapServer.cpp:199)
    by 0x5FF821A: soap_serve_request(soap*) (soapServer.cpp:81)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
 
 Possible data race during read of size 8 at 0x850a7f0 by thread #8
    at 0x82FB704: evhHANDLER::~evhHANDLER() (evhHANDLER.cpp:58)
    by 0x830011B: evhSERVER::~evhSERVER() (evhSERVER.cpp:70)
    by 0x621219C: sclsvrSERVER::~sclsvrSERVER() (sclsvrSERVER.cpp:133)
    by 0x5FEE315: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:332)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x5FF81FA: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #6
    at 0x82FB535: evhHANDLER::evhHANDLER() (evhHANDLER.cpp:49)
    by 0x8300AEB: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:44)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 Possible data race during write of size 8 at 0x850a7f0 by thread #8
    at 0x82FB709: evhHANDLER::~evhHANDLER() (evhHANDLER.cpp:60)
    by 0x830011B: evhSERVER::~evhSERVER() (evhSERVER.cpp:70)
    by 0x621219C: sclsvrSERVER::~sclsvrSERVER() (sclsvrSERVER.cpp:133)
    by 0x5FEE315: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:332)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x5FF81FA: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #6
    at 0x82FB535: evhHANDLER::evhHANDLER() (evhHANDLER.cpp:49)
    by 0x8300AEB: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:44)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 Thread #21 was created
    at 0x8A14F2E: clone (in /lib64/libc-2.5.so)
    by 0x5BCBD87: pthread_create@@GLIBC_2.2.5 (in /lib64/libpthread-2.5.so)
    by 0x4C26206: pthread_create_WRK (hg_intercepts.c:229)
    by 0x4C262AD: pthread_create@* (hg_intercepts.c:256)
    by 0x40333F: main (sclwsServer.cpp:202)
 
 Possible data race during read of size 8 at 0x5bb4e00 by thread #21
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644F04F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (basic_string.h:915)
    by 0x6451857: vobsCATALOG_MERAND::vobsCATALOG_MERAND() (vobsCATALOG_MERAND.cpp:35)
    by 0x6453F0E: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
  This conflicts with a previous write of size 8 by thread #8
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621D89B: sclsvrSCENARIO_BRIGHT_V::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_V.cpp:115)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 ERROR SUMMARY: 1330 errors from 104 contexts (suppressed: 15068 from 250)
 
 1 errors in context 1 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #21
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644F04F: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (basic_string.h:915)
    by 0x6451857: vobsCATALOG_MERAND::vobsCATALOG_MERAND() (vobsCATALOG_MERAND.cpp:35)
    by 0x6453F0E: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
  This conflicts with a previous write of size 8 by thread #8
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621D89B: sclsvrSCENARIO_BRIGHT_V::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_V.cpp:115)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 2 of 104:
 Possible data race during write of size 4 at 0xdcc6890 by thread #8
    at 0x8E9FF8E: ??? (in /usr/lib64/libz.so.1.2.3)
    by 0x53422A5: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x534237A: __xmlParserInputBufferCreateFilename (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531BECA: xmlNewInputFromFile (in /usr/lib64/libxml2.so.2.6.26)
    by 0x5342E6C: ??? (in /usr/lib64/libxml2.so.2.6.26)
    by 0x531EBE3: xmlCreateURLParserCtxt (in /usr/lib64/libxml2.so.2.6.26)
    by 0x533399C: xmlSAXParseFileWithData (in /usr/lib64/libxml2.so.2.6.26)
    by 0x4E504CF: gdome_xml_di_createDocFromURI (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7CD259F: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:971)
    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
  This conflicts with a previous read of size 4 by thread #5
    at 0x8983720: vfprintf (in /lib64/libc-2.5.so)
    by 0x89A4B48: vsprintf (in /lib64/libc-2.5.so)
    by 0x898E527: sprintf (in /lib64/libc-2.5.so)
    by 0x40DB04: soap_element (stdsoap2_cpp.cpp:7169)
    by 0x40E41F: soap_element_begin_out (stdsoap2_cpp.cpp:7246)
    by 0x5FF7CB3: soap_serve_ns__GetCalQueryStatus(soap*) (soapServer.cpp:199)
    by 0x5FF821A: soap_serve_request(soap*) (soapServer.cpp:81)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
 
 
 1 errors in context 3 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 4 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 5 of 104:
 Possible data race during write of size 1 at 0x5bb4e18 by thread #6
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 1 by thread #4
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 6 of 104:
 Possible data race during write of size 8 at 0x5bb4e00 by thread #6
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 8 by thread #4
    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644F552: vobsLOCAL_CATALOG::SetOption(std::string) (basic_string.h:2200)
    by 0x6457CF5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:265)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 7 of 104:
 Possible data race during write of size 4 at 0x5bb4e10 by thread #6
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 4 by thread #4
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456C5E: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
    by 0x6457CD1: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 8 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 9 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 10 of 104:
 Possible data race during write of size 1 at 0x5bb4e18 by thread #6
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 1 by thread #4
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 11 of 104:
 Possible data race during write of size 8 at 0x5bb4e00 by thread #6
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 8 by thread #4
    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644F552: vobsLOCAL_CATALOG::SetOption(std::string) (basic_string.h:2200)
    by 0x6457CF5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:265)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 12 of 104:
 Possible data race during write of size 4 at 0x5bb4e10 by thread #6
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 4 by thread #4
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456C5E: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
    by 0x6457CD1: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 13 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 14 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 15 of 104:
 Possible data race during write of size 1 at 0x5bb4e18 by thread #6
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 1 by thread #4
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 16 of 104:
 Possible data race during write of size 8 at 0x5bb4e00 by thread #6
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 8 by thread #4
    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644F552: vobsLOCAL_CATALOG::SetOption(std::string) (basic_string.h:2200)
    by 0x6457CF5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:265)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 17 of 104:
 Possible data race during write of size 4 at 0x5bb4e10 by thread #6
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 4 by thread #4
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456C5E: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
    by 0x6457CD1: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 18 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 19 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 20 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 21 of 104:
 Possible data race during write of size 1 at 0x5bb4e18 by thread #6
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 1 by thread #4
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 22 of 104:
 Possible data race during write of size 8 at 0x5bb4e00 by thread #6
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 8 by thread #4
    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644F552: vobsLOCAL_CATALOG::SetOption(std::string) (basic_string.h:2200)
    by 0x6457CF5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:265)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 23 of 104:
 Possible data race during write of size 4 at 0x5bb4e10 by thread #6
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 4 by thread #4
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456C5E: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
    by 0x6457CD1: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 24 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 25 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 26 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 27 of 104:
 Possible data race during write of size 1 at 0x5bb4e18 by thread #6
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 1 by thread #4
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 28 of 104:
 Possible data race during write of size 8 at 0x5bb4e00 by thread #6
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 8 by thread #4
    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644F552: vobsLOCAL_CATALOG::SetOption(std::string) (basic_string.h:2200)
    by 0x6457CF5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:265)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 29 of 104:
 Possible data race during write of size 4 at 0x5bb4e10 by thread #6
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 4 by thread #4
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456C5E: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
    by 0x6457CD1: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 30 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 31 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 32 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 33 of 104:
 Possible data race during write of size 1 at 0x5bb4e18 by thread #6
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 1 by thread #4
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 34 of 104:
 Possible data race during write of size 8 at 0x5bb4e00 by thread #6
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 8 by thread #4
    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644F552: vobsLOCAL_CATALOG::SetOption(std::string) (basic_string.h:2200)
    by 0x6457CF5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:265)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 35 of 104:
 Possible data race during write of size 4 at 0x5bb4e10 by thread #6
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 4 by thread #4
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456C5E: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
    by 0x6457CD1: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 36 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 37 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 38 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 39 of 104:
 Possible data race during write of size 1 at 0x5bb4e18 by thread #6
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 1 by thread #4
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 40 of 104:
 Possible data race during write of size 8 at 0x5bb4e00 by thread #6
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 8 by thread #4
    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644F552: vobsLOCAL_CATALOG::SetOption(std::string) (basic_string.h:2200)
    by 0x6457CF5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:265)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 41 of 104:
 Possible data race during write of size 4 at 0x5bb4e10 by thread #6
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 4 by thread #4
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456C5E: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
    by 0x6457CD1: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 1 errors in context 42 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 43 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 44 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191BE: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 45 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300C46: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:57)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 46 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300C32: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:56)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 47 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300C32: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:56)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 48 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83003A2: evhSERVER::AddSubState(int, char*) (stl_pair.h:85)
    by 0x8300C32: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:56)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 49 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300C1E: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:55)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 50 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300C1E: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:55)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 51 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83003A2: evhSERVER::AddSubState(int, char*) (stl_pair.h:85)
    by 0x8300C1E: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:55)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 52 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300C0A: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:54)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 53 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300C0A: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:54)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 54 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83003A2: evhSERVER::AddSubState(int, char*) (stl_pair.h:85)
    by 0x8300C0A: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:54)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 55 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300BF6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:53)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 56 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300BF6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:53)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 57 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83003A2: evhSERVER::AddSubState(int, char*) (stl_pair.h:85)
    by 0x8300BF6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:53)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 58 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8300875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8300BE2: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:50)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 59 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8300875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8300BCE: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:49)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 60 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8300875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8300BCE: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:49)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 61 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x830074A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8300BCE: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:49)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 62 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8300875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8300BBA: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:48)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 63 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8300875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8300BBA: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:48)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 64 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x830074A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8300BBA: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:48)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 65 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8300875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8300BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 66 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8300875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8300BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 1 errors in context 67 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x830074A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8300BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 2 errors in context 68 of 104:
 Possible data race during write of size 8 at 0x850a7f0 by thread #8
    at 0x82FB709: evhHANDLER::~evhHANDLER() (evhHANDLER.cpp:60)
    by 0x830011B: evhSERVER::~evhSERVER() (evhSERVER.cpp:70)
    by 0x621219C: sclsvrSERVER::~sclsvrSERVER() (sclsvrSERVER.cpp:133)
    by 0x5FEE315: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:332)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x5FF81FA: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #6
    at 0x82FB535: evhHANDLER::evhHANDLER() (evhHANDLER.cpp:49)
    by 0x8300AEB: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:44)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 
 2 errors in context 69 of 104:
 Possible data race during read of size 8 at 0x850a7f0 by thread #8
    at 0x82FB704: evhHANDLER::~evhHANDLER() (evhHANDLER.cpp:58)
    by 0x830011B: evhSERVER::~evhSERVER() (evhSERVER.cpp:70)
    by 0x621219C: sclsvrSERVER::~sclsvrSERVER() (sclsvrSERVER.cpp:133)
    by 0x5FEE315: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:332)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x5FF81FA: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #6
    at 0x82FB535: evhHANDLER::evhHANDLER() (evhHANDLER.cpp:49)
    by 0x8300AEB: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:44)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 
 2 errors in context 70 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83004CA: evhSERVER::AddSubState(int, char*) (basic_string.h:915)
    by 0x8300C46: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:57)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 2 errors in context 71 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x83003A2: evhSERVER::AddSubState(int, char*) (stl_pair.h:85)
    by 0x8300C46: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:57)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 2 errors in context 72 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x830074A: evhSERVER::AddState(int, char*) (stl_pair.h:85)
    by 0x8300BE2: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:50)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 2 errors in context 73 of 104:
 Possible data race during write of size 8 at 0x850a7f0 by thread #6
    at 0x82FB535: evhHANDLER::evhHANDLER() (evhHANDLER.cpp:49)
    by 0x8300AEB: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:44)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x82FB709: evhHANDLER::~evhHANDLER() (evhHANDLER.cpp:60)
    by 0x830011B: evhSERVER::~evhSERVER() (evhSERVER.cpp:70)
    by 0x621219C: sclsvrSERVER::~sclsvrSERVER() (sclsvrSERVER.cpp:133)
    by 0x5FEE315: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:332)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x5FF81FA: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 
 2 errors in context 74 of 104:
 Possible data race during read of size 8 at 0x850a7f0 by thread #6
    at 0x82FB52F: evhHANDLER::evhHANDLER() (evhHANDLER.cpp:47)
    by 0x8300AEB: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:44)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x82FB709: evhHANDLER::~evhHANDLER() (evhHANDLER.cpp:60)
    by 0x830011B: evhSERVER::~evhSERVER() (evhSERVER.cpp:70)
    by 0x621219C: sclsvrSERVER::~sclsvrSERVER() (sclsvrSERVER.cpp:133)
    by 0x5FEE315: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:332)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x5FF81FA: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
 
 
 2 errors in context 75 of 104:
 Possible data race during read of size 4 at 0x5fe33a8 by thread #6
    at 0x5DE16D8: ??? (in /lib64/libuuid.so.1.2)
    by 0x5DE2418: uuid_generate (in /lib64/libuuid.so.1.2)
    by 0x5FEE4F8: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:185)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 4 by thread #2
    at 0x5DE1733: ??? (in /lib64/libuuid.so.1.2)
    by 0x5DE2418: uuid_generate (in /lib64/libuuid.so.1.2)
    by 0x5FEE4F8: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:185)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
 
 
 2 errors in context 76 of 104:
 Possible data race during read of size 1 at 0x92f9010 by thread #6
    at 0x4C24D4D: strcmp (hg_intercepts.c:2309)
    by 0x89CD85C: tzset_internal (in /lib64/libc-2.5.so)
    by 0x89CE17D: __tz_convert (in /lib64/libc-2.5.so)
    by 0x6EAD203: logGetTimeStamp (log.c:700)
    by 0x6EAD654: logPrint (log.c:488)
    by 0x5FEE4EE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:181)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7CD266D: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1003)
    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 2 errors in context 77 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6444356: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<int const, std::string> const&) (stl_pair.h:69)
    by 0x6444421: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::insert_unique(std::pair<int const, std::string> const&) (stl_tree.h:927)
    by 0x6444608: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::insert_unique(std::_Rb_tree_iterator<std::pair<int const, std::string> >, std::pair<int const, std::string> const&) (stl_tree.h:949)
    by 0x8300758: evhSERVER::AddState(int, char*) (stl_map.h:420)
    by 0x8300BA6: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:47)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 3 errors in context 78 of 104:
 Possible data race during read of size 4 at 0x92d8960 by thread #4
    at 0x80EE3B4: sdbENTRY::IsInit() (sdbENTRY.cpp:225)
    by 0x80EE427: sdbENTRY::Write(char const*) (sdbENTRY.cpp:88)
    by 0x6457B8A: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:242)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
    by 0x5FF81FA: soap_serve_request(soap*) (soapServer.cpp:79)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
  This conflicts with a previous write of size 4 by thread #3
    at 0x80EE342: sdbENTRY::Destroy() (sdbENTRY.cpp:272)
    by 0x80EE35A: sdbENTRY::Init() (sdbENTRY.cpp:239)
    by 0x80EE56C: sdbENTRY::Read(char*, mcsLOGICAL, int) (sdbENTRY.cpp:142)
    by 0x621756D: sclsvrSERVER::GetStatus(char*, int) (sclsvrGetCalCB.cpp:68)
    by 0x5FEF97A: ns__GetCalQueryStatus(soap*, char*, char**) (sclwsWS.cpp:399)
    by 0x5FF7DB3: soap_serve_ns__GetCalQueryStatus(soap*) (soapServer.cpp:191)
    by 0x5FF821A: soap_serve_request(soap*) (soapServer.cpp:81)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
 
 
 3 errors in context 79 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x8300875: evhSERVER::AddState(int, char*) (basic_string.h:915)
    by 0x8300BE2: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:50)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 3 errors in context 80 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6444356: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<int const, std::string> const&) (stl_pair.h:69)
    by 0x64444C8: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::insert_unique(std::_Rb_tree_iterator<std::pair<int const, std::string> >, std::pair<int const, std::string> const&) (stl_tree.h:947)
    by 0x8300758: evhSERVER::AddState(int, char*) (stl_map.h:420)
    by 0x8300BBA: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:48)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 4 errors in context 81 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644E316: vobsCATALOG::vobsCATALOG(char const*) (basic_string.h:915)
    by 0x644F011: vobsREMOTE_CATALOG::vobsREMOTE_CATALOG(char const*) (vobsREMOTE_CATALOG.cpp:53)
    by 0x64508BD: vobsCATALOG_CIO::vobsCATALOG_CIO() (vobsCATALOG_CIO.cpp:44)
    by 0x6453EB7: vobsCATALOG_LIST::vobsCATALOG_LIST() (vobsCATALOG_LIST.cpp:36)
    by 0x6456ADD: vobsVIRTUAL_OBSERVATORY::vobsVIRTUAL_OBSERVATORY() (vobsVIRTUAL_OBSERVATORY.cpp:42)
    by 0x62124AE: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 5 errors in context 82 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6444356: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::_M_insert(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<int const, std::string> const&) (stl_pair.h:69)
    by 0x64444C8: std::_Rb_tree<int, std::pair<int const, std::string>, std::_Select1st<std::pair<int const, std::string> >, std::less<int>, std::allocator<std::pair<int const, std::string> > >::insert_unique(std::_Rb_tree_iterator<std::pair<int const, std::string> >, std::pair<int const, std::string> const&) (stl_tree.h:947)
    by 0x83003B0: evhSERVER::AddSubState(int, char*) (stl_map.h:420)
    by 0x8300C0A: evhSERVER::evhSERVER(mcsLOGICAL) (evhSERVER.cpp:54)
    by 0x6212472: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 7 errors in context 83 of 104:
 Possible data race during write of size 8 at 0xa0c3f80 by thread #3
    at 0x40F912: frecv (stdsoap2_cpp.cpp:865)
    by 0x412106: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x4124B0: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4125EC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413864: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 1 by thread #2
    at 0x873B3D4: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873B756: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
    by 0x40340D: sclwsJobHandler(void*) (sclwsServer.cpp:84)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
 
 
 7 errors in context 84 of 104:
 Possible data race during write of size 8 at 0xa0c3f90 by thread #3
    at 0x40F90D: frecv (stdsoap2_cpp.cpp:865)
    by 0x412106: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x4124B0: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4125EC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413864: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous read of size 1 by thread #2
    at 0x4C24EC8: memcpy (hg_intercepts.c:2358)
    by 0x873B2E5: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873B756: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
    by 0x40340D: sclwsJobHandler(void*) (sclwsServer.cpp:84)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
 
 
 7 errors in context 85 of 104:
 Possible data race during write of size 8 at 0xa0c3f78 by thread #3
    at 0x40F900: frecv (stdsoap2_cpp.cpp:865)
    by 0x412106: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x4124B0: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4125EC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413864: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous read of size 1 by thread #2
    at 0x4C24EC8: memcpy (hg_intercepts.c:2358)
    by 0x873B2E5: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873B756: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
    by 0x40340D: sclwsJobHandler(void*) (sclwsServer.cpp:84)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
 
 
 8 errors in context 86 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x621AF04: sclsvrSCENARIO_JSDC::sclsvrSCENARIO_JSDC(sdbENTRY*) (sclsvrSCENARIO_JSDC.cpp:35)
    by 0x62124DC: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 9 errors in context 87 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 9 errors in context 88 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B17F: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 9 errors in context 89 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x5962302: std::string::assign(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B16A: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 28 errors in context 90 of 104:
 Possible data race during read of size 1 at 0x92f9011 by thread #6
    at 0x4C24D72: strcmp (hg_intercepts.c:2309)
    by 0x89CD85C: tzset_internal (in /lib64/libc-2.5.so)
    by 0x89CE17D: __tz_convert (in /lib64/libc-2.5.so)
    by 0x6EAD203: logGetTimeStamp (log.c:700)
    by 0x6EAD654: logPrint (log.c:488)
    by 0x5FEE4EE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:181)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x4E507E3: gdome_xml_di_unref (in /usr/lib64/libgdome.so.0.8.1)
    by 0x7CD266D: cmdCOMMAND::ParseCdf() (cmdCOMMAND.cpp:1003)
    by 0x7CD27BB: cmdCOMMAND::Parse(std::string) (cmdCOMMAND.cpp:113)
    by 0x62134DA: sclsvrREQUEST::Parse(char const*) (sclsvrREQUEST.cpp:114)
    by 0x62175F8: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:179)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 33 errors in context 91 of 104:
 Possible data race during read of size 4 at 0x5bb4e10 by thread #6
    at 0x59620F1: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x621AF04: sclsvrSCENARIO_JSDC::sclsvrSCENARIO_JSDC(sdbENTRY*) (sclsvrSCENARIO_JSDC.cpp:35)
    by 0x62124DC: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 4 by thread #4
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 34 errors in context 92 of 104:
 Possible data race during write of size 1 at 0x5bb4e18 by thread #6
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 1 by thread #4
    at 0x5962159: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 34 errors in context 93 of 104:
 Possible data race during write of size 8 at 0x5bb4e00 by thread #6
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 8 by thread #4
    at 0x5960C3C: std::string::compare(char const*) const (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644F552: vobsLOCAL_CATALOG::SetOption(std::string) (basic_string.h:2200)
    by 0x6457CF5: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:265)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 34 errors in context 94 of 104:
 Possible data race during write of size 4 at 0x5bb4e10 by thread #6
    at 0x596214F: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B1A1: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x62191D2: sclsvrSCENARIO_BRIGHT_K::sclsvrSCENARIO_BRIGHT_K(sdbENTRY*) (sclsvrSCENARIO_BRIGHT_K.cpp:38)
    by 0x62124C5: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous read of size 4 by thread #4
    at 0x5961928: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456C5E: vobsSCENARIO_ENTRY::GetQueryOption() (vobsSCENARIO_ENTRY.cpp:124)
    by 0x6457CD1: vobsSCENARIO::Execute(vobsSTAR_LIST&) (vobsSCENARIO.cpp:264)
    by 0x64568C3: vobsVIRTUAL_OBSERVATORY::Search(vobsSCENARIO*, vobsREQUEST&, vobsSTAR_LIST&) (vobsVIRTUAL_OBSERVATORY.cpp:87)
    by 0x621784F: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:300)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
    by 0x5FF7F9F: soap_serve_ns__GetCalSearchCal(soap*) (soapServer.cpp:147)
 
 
 34 errors in context 95 of 104:
 Possible data race during read of size 8 at 0x5bb4e00 by thread #6
    at 0x59620D7: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x644B155: vobsREQUEST::vobsREQUEST() (basic_string.h:915)
    by 0x621AF04: sclsvrSCENARIO_JSDC::sclsvrSCENARIO_JSDC(sdbENTRY*) (sclsvrSCENARIO_JSDC.cpp:35)
    by 0x62124DC: sclsvrSERVER::sclsvrSERVER() (sclsvrSERVER.cpp:124)
    by 0x5FEE5BE: ns__GetCalOpenSession(soap*, char**) (sclwsWS.cpp:201)
    by 0x5FF8189: soap_serve_ns__GetCalOpenSession(soap*) (soapServer.cpp:103)
    by 0x5FF81DA: soap_serve_request(soap*) (soapServer.cpp:77)
    by 0x5FF82E1: soap_serve(soap*) (soapServer.cpp:49)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
  This conflicts with a previous write of size 8 by thread #4
    at 0x5962156: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x596228B: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.8)
    by 0x6456E49: vobsSCENARIO_ENTRY::vobsSCENARIO_ENTRY(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*) (basic_string.h:915)
    by 0x6457813: vobsSCENARIO::AddEntry(char*, vobsREQUEST*, vobsSTAR_LIST*, vobsSTAR_LIST*, vobsACTION, vobsSTAR_COMP_CRITERIA_LIST*, vobsFILTER*, std::string) (vobsSCENARIO.cpp:138)
    by 0x621E8C7: sclsvrSCENARIO_BRIGHT_N::Init(vobsREQUEST*) (sclsvrSCENARIO_BRIGHT_N.cpp:71)
    by 0x6217828: sclsvrSERVER::ProcessGetCalCmd(char const*, miscoDYN_BUF&, msgMESSAGE*) (sclsvrGetCalCB.cpp:294)
    by 0x621739F: sclsvrSERVER::GetCal(char const*, miscoDYN_BUF&) (sclsvrGetCalCB.cpp:145)
    by 0x5FEDE36: ns__GetCalSearchCal(soap*, char*, char*, char**) (sclwsWS.cpp:285)
 
 
 38 errors in context 96 of 104:
 Possible data race during write of size 8 at 0xa0c1f48 by thread #3
    at 0x403F60: soap_malloc (stdsoap2_cpp.cpp:5520)
    by 0x407343: soap_strdup (stdsoap2_cpp.cpp:2113)
    by 0x413D7B: http_parse_header (stdsoap2_cpp.cpp:13237)
    by 0x4142F9: http_parse (stdsoap2_cpp.cpp:13123)
    by 0x4139CA: soap_begin_recv (stdsoap2_cpp.cpp:12968)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
 
 
 38 errors in context 97 of 104:
 Possible data race during write of size 8 at 0xa0c1f70 by thread #3
    at 0x40367D: soap_tag_cmp (stdsoap2_cpp.cpp:2844)
    by 0x413D0D: http_parse_header (stdsoap2_cpp.cpp:13223)
    by 0x4142F9: http_parse (stdsoap2_cpp.cpp:13123)
    by 0x4139CA: soap_begin_recv (stdsoap2_cpp.cpp:12968)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
 
 
 38 errors in context 98 of 104:
 Possible data race during write of size 8 at 0xa0c1f68 by thread #3
    at 0x403675: soap_tag_cmp (stdsoap2_cpp.cpp:2844)
    by 0x413D0D: http_parse_header (stdsoap2_cpp.cpp:13223)
    by 0x4142F9: http_parse (stdsoap2_cpp.cpp:13123)
    by 0x4139CA: soap_begin_recv (stdsoap2_cpp.cpp:12968)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
 
 
 38 errors in context 99 of 104:
 Possible data race during write of size 8 at 0xa0c1f60 by thread #3
    at 0x403670: soap_tag_cmp (stdsoap2_cpp.cpp:2844)
    by 0x413D0D: http_parse_header (stdsoap2_cpp.cpp:13223)
    by 0x4142F9: http_parse (stdsoap2_cpp.cpp:13123)
    by 0x4139CA: soap_begin_recv (stdsoap2_cpp.cpp:12968)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
 
 
 38 errors in context 100 of 104:
 Possible data race during write of size 8 at 0xa0c3f98 by thread #3
    at 0x40F91A: frecv (stdsoap2_cpp.cpp:865)
    by 0x412106: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x4124B0: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4125EC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413864: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #2
    at 0x873D6D1: _Unwind_Find_FDE (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873A624: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873B66A: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
    by 0x40340D: sclwsJobHandler(void*) (sclwsServer.cpp:84)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
 
 
 38 errors in context 101 of 104:
 Possible data race during write of size 8 at 0xa0c3f88 by thread #3
    at 0x40F905: frecv (stdsoap2_cpp.cpp:865)
    by 0x412106: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x4124B0: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4125EC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413864: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 8 by thread #2
    at 0x873B757: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
    by 0x40340D: sclwsJobHandler(void*) (sclwsServer.cpp:84)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
 
 
 248 errors in context 102 of 104:
 Possible data race during write of size 1 at 0xa8c4f80 by thread #6
    at 0x40F912: frecv (stdsoap2_cpp.cpp:865)
    by 0x412106: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x4124B0: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4125EC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413864: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous write of size 1 by thread #4
    at 0x873B3D4: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873B756: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
    by 0x40340D: sclwsJobHandler(void*) (sclwsServer.cpp:84)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
 
 
 248 errors in context 103 of 104:
 Possible data race during write of size 1 at 0xa8c4f90 by thread #6
    at 0x40F90D: frecv (stdsoap2_cpp.cpp:865)
    by 0x412106: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x4124B0: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4125EC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413864: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous read of size 1 by thread #4
    at 0x4C24EC8: memcpy (hg_intercepts.c:2358)
    by 0x873B2E5: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873B756: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
    by 0x40340D: sclwsJobHandler(void*) (sclwsServer.cpp:84)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
 
 
 248 errors in context 104 of 104:
 Possible data race during write of size 1 at 0xa8c4f78 by thread #6
    at 0x40F900: frecv (stdsoap2_cpp.cpp:865)
    by 0x412106: soap_recv_raw (stdsoap2_cpp.cpp:1201)
    by 0x4124B0: soap_recv (stdsoap2_cpp.cpp:1318)
    by 0x4125EC: soap_getchar (stdsoap2_cpp.cpp:1335)
    by 0x413864: soap_begin_recv (stdsoap2_cpp.cpp:12925)
    by 0x5FF8289: soap_serve(soap*) (soapServer.cpp:35)
    by 0x4033DE: sclwsJobHandler(void*) (sclwsServer.cpp:76)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
    by 0x5BCB73C: start_thread (in /lib64/libpthread-2.5.so)
    by 0x8A14F6C: clone (in /lib64/libc-2.5.so)
  This conflicts with a previous read of size 1 by thread #4
    at 0x4C24EC8: memcpy (hg_intercepts.c:2358)
    by 0x873B2E5: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873B756: ??? (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x873BDC8: _Unwind_ForcedUnwind (in /lib64/libgcc_s-4.1.2-20080825.so.1)
    by 0x5BD215F: __pthread_unwind (in /lib64/libpthread-2.5.so)
    by 0x5BCC984: pthread_exit (in /lib64/libpthread-2.5.so)
    by 0x40340D: sclwsJobHandler(void*) (sclwsServer.cpp:84)
    by 0x4C26330: mythread_wrapper (hg_intercepts.c:201)
 
 
 used_suppression:   3320 helgrind-glibc2X-004
 used_suppression:  10231 helgrind-glibc2X-005
 used_suppression:    155 helgrind-glibc2X-102
 used_suppression:    114 helgrind-glibc2X-109
 used_suppression:      3 helgrind-glibc2X-108
 used_suppression:    114 helgrind-glibc2X-110
 used_suppression:   1090 helgrind-glibc2X-101
 used_suppression:     41 helgrind-glibc2X-112
 
 ERROR SUMMARY: 1330 errors from 104 contexts (suppressed: 15068 from 250)

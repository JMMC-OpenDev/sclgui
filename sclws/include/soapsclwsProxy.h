/* soapsclwsProxy.h
   Generated by gSOAP 2.7.11 from ../include/sclwsWS.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapsclwsProxy_H
#define soapsclwsProxy_H
#include "soapH.h"
extern SOAP_NMAC struct Namespace soap_namespaces[];
class sclws
{   public:
	/// Runtime engine context allocated in constructor
	struct soap *soap;
	/// Endpoint URL of service 'sclws' (change as needed)
	const char *endpoint;
	/// Constructor allocates soap engine context, sets default endpoint URL, and sets namespace mapping table
	sclws() { soap = soap_new(); if (soap) soap->namespaces = soap_namespaces; endpoint = "http://jmmc.fr:8079"; };
	/// Destructor frees deserialized data and soap engine context
	virtual ~sclws() { if (soap) { soap_destroy(soap); soap_end(soap); soap_free(soap); } };
	/// Invoke 'GetCalOpenSession' of service 'sclws' and return error code (or SOAP_OK)
	virtual int ns__GetCalOpenSession(char **_param_1) { return soap ? soap_call_ns__GetCalOpenSession(soap, endpoint, NULL, _param_1) : SOAP_EOM; };
	/// Invoke 'GetCalSearchCal' of service 'sclws' and return error code (or SOAP_OK)
	virtual int ns__GetCalSearchCal(char *_param_2, char *_param_3, char **_param_4) { return soap ? soap_call_ns__GetCalSearchCal(soap, endpoint, NULL, _param_2, _param_3, _param_4) : SOAP_EOM; };
	/// Invoke 'GetCalQueryStatus' of service 'sclws' and return error code (or SOAP_OK)
	virtual int ns__GetCalQueryStatus(char *_param_5, char **_param_6) { return soap ? soap_call_ns__GetCalQueryStatus(soap, endpoint, NULL, _param_5, _param_6) : SOAP_EOM; };
	/// Invoke 'GetCalCancelSession' of service 'sclws' and return error code (or SOAP_OK)
	virtual int ns__GetCalCancelSession(char *_param_7, bool *_param_8) { return soap ? soap_call_ns__GetCalCancelSession(soap, endpoint, NULL, _param_7, _param_8) : SOAP_EOM; };
	/// Invoke 'GetStar' of service 'sclws' and return error code (or SOAP_OK)
	virtual int ns__GetStar(char *query, char **voTable) { return soap ? soap_call_ns__GetStar(soap, endpoint, NULL, query, voTable) : SOAP_EOM; };
	/// Invoke 'GetServerStatus' of service 'sclws' and return error code (or SOAP_OK)
	virtual int ns__GetServerStatus(char **status) { return soap ? soap_call_ns__GetServerStatus(soap, endpoint, NULL, status) : SOAP_EOM; };
};
#endif

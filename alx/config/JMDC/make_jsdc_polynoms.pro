PRO MAKE_JSDC_POLYNOMS,RESIDU,E_RESIDU
;
@ jsdc_define_common.pro
;
  X=FINDGEN(17)*(!PI*2./16.) & USERSYM, 0.75*COS(X), 0.75*SIN(X), /FILL
;
; Initialize parameters & arrays
  RESIDU=DBLARR(NSTAR_B,NCOLORS)-100
  E_RESIDU=RESIDU
; correction of database from too low photometric errors on b and v
  A=EMAG_B[*,0:1] & S=WHERE(A LT EMAG_MIN, COUNT) & if(count gt 0) then A[S]=EMAG_MIN & EMAG_B[*,0:1]=A ; magnitude min error correction

; normalize JHK error on max JHK error.
  FOR N=0,NSTAR_B-1 do emag_b[n,JBAND]=max(emag_b[n,JBAND])
; do not allow S/N of diameters greater than 100.
  W=WHERE(DIAM_I/EDIAM_I gt 100.0, count) & if (count gt 0) then EDIAM_I[W]=DIAM_I[W]/100.

;
; Select "good" database stars
;
  IF (MODE EQ 'FIX') THEN GOOD_B=GOOD_FIX ELSE BEGIN
     Q=TOTAL(MAG_B[*,USEDBANDS],2) & P=TOTAL(EMAG_B[*,USEDBANDS],2) & W=WHERE(FINITE(Q) AND FINITE(P)) ; w: magnitude definies

     PRINT,'Initial stars: ',N_ELEMENTS(W)

; LBO: try ignoring small DSPTYPE_B <= 4
;     IF (LUM_CLASSES EQ 0) THEN GOOD_B=WHERE(SPTYPE_B[W] NE -1 AND DIAM_I[W] NE -1 AND EDIAM_I[W] NE -1 AND FINITE(DIAM_I[W]) AND DIAM_I[W]/EDIAM_I[W] GT SNR AND DSPTYPE_B[W] LE 4)
     IF (LUM_CLASSES EQ 0) THEN GOOD_B=WHERE(SPTYPE_B[W] NE -1 AND DIAM_I[W] NE -1 AND EDIAM_I[W] NE -1 AND FINITE(DIAM_I[W]) AND DIAM_I[W]/EDIAM_I[W] GT SNR AND DSPTYPE_B[W] EQ 0)
     IF (LUM_CLASSES EQ 124) THEN GOOD_B=WHERE(LUMCLASS_B[W] NE 5 AND LUMCLASS_B[W] NE 3 AND SPTYPE_B[W] NE -1 AND DIAM_I[W] NE -1 AND EDIAM_I[W] NE -1 AND FINITE(DIAM_I[W]) AND DIAM_I[W]/EDIAM_I[W] GT SNR AND DSPTYPE_B[W] EQ 0)
     IF (LUM_CLASSES EQ 5) THEN GOOD_B=WHERE(LUMCLASS_B[W] EQ 5 AND DLUMCLASS_B[W] EQ 0 AND SPTYPE_B[W] NE -1 AND DIAM_I[W] NE -1 AND EDIAM_I[W] NE -1 AND FINITE(DIAM_I[W]) AND DIAM_I[W]/EDIAM_I[W] GT SNR AND DSPTYPE_B[W] EQ 0)
     IF (LUM_CLASSES EQ 3) THEN GOOD_B=WHERE(LUMCLASS_B[W] EQ 3 AND DLUMCLASS_B[W] EQ 0 AND SPTYPE_B[W] NE -1 AND DIAM_I[W] NE -1 AND EDIAM_I[W] NE -1 AND FINITE(DIAM_I[W]) AND DIAM_I[W]/EDIAM_I[W] GT SNR AND DSPTYPE_B[W] EQ 0)
     IF (LUM_CLASSES EQ 45) THEN GOOD_B=WHERE((LUMCLASS_B[W] EQ 4 OR LUMCLASS_B[W] EQ 5) AND DLUMCLASS_B[W] EQ 0 AND SPTYPE_B[W] NE -1 AND DIAM_I[W] NE -1 AND EDIAM_I[W] NE -1 AND FINITE(DIAM_I[W]) AND DIAM_I[W]/EDIAM_I[W] GT SNR AND DSPTYPE_B[W] EQ 0)
     IF (LUM_CLASSES EQ 35) THEN GOOD_B=WHERE((LUMCLASS_B[W] EQ 3 OR LUMCLASS_B[W] EQ 5) AND DLUMCLASS_B[W] EQ 0 AND SPTYPE_B[W] NE -1 AND DIAM_I[W] NE -1 AND EDIAM_I[W] NE -1 AND FINITE(DIAM_I[W]) AND DIAM_I[W]/EDIAM_I[W] GT SNR AND DSPTYPE_B[W] EQ 0)
     IF (LUM_CLASSES EQ 123) THEN GOOD_B=WHERE((LUMCLASS_B[W] EQ 1 OR LUMCLASS_B[W] EQ 2 OR LUMCLASS_B[W] EQ 3) AND DLUMCLASS_B[W] EQ 0 AND SPTYPE_B[W] NE -1 AND DIAM_I[W] NE -1 AND EDIAM_I[W] NE -1 AND FINITE(DIAM_I[W]) AND DIAM_I[W]/EDIAM_I[W] GT SNR  AND DSPTYPE_B[W] EQ 0)
     IF (LUM_CLASSES EQ 1234) THEN GOOD_B=WHERE((LUMCLASS_B[W] EQ 1 OR LUMCLASS_B[W] EQ 2 OR LUMCLASS_B[W] EQ 3 OR LUMCLASS_B[W] EQ 4) AND DLUMCLASS_B[W] EQ 0 AND SPTYPE_B[W] NE -1 AND DIAM_I[W] NE -1 AND EDIAM_I[W] NE -1 AND FINITE(DIAM_I[W]) AND DIAM_I[W]/EDIAM_I[W] GT SNR AND DSPTYPE_B[W] EQ 0)
     GOOD_B=W[GOOD_B]
;
     IF (STAT EQ 1) THEN BEGIN
        ND=N_ELEMENTS(GOOD_B) & A=FIX(RANDOMN(SEED,/UNIFORM,FIX(ND/2*1.3))*ND) & GOOD_B=GOOD_B[A] & GOOD_B=GOOD_B[UNIQ(GOOD_B,SORT(GOOD_B))]
     ENDIF

  ENDELSE

  ND=LONG(N_ELEMENTS(GOOD_B))

;
; Compute residuals from eq. : residual = lg(diam_i)+ci(i)*mag(j)-ci(j)*mag(i) = a + (M0-M1)*[b-ci(i)]
  FOR II=0, ND-1 DO BEGIN
     JJ=GOOD_B[II]
     RESIDU[JJ,*]=ALOG10(DIAM_I[JJ])-(0.2*CJ*MAG_B[JJ,IBAND]-0.2*CI*MAG_B[JJ,JBAND])
     E_RESIDU[JJ,*]=SQRT((EDIAM_I[JJ]/DIAM_I[JJ]/ALOG(10.))^2+0.04*CI^2*EMAG_B[JJ,JBAND]^2+0.04*CJ^2*EMAG_B[JJ,IBAND]^2)
  ENDFOR
;
; Fit residuals with polynom band per band
;
  !P.MULTI=[0,3,2]
  PARAM1=DBLARR(NCOLORS,DEG+1) & E_PARAM1=PARAM1 & T=N_ELEMENTS(E_SPECTRAL_DSB[*,0]) & IND=DBLARR(T,DEG+1) & FOR KK=0, DEG DO IND[*,KK]=DINDGEN(T)^KK
  FOR N=0, NCOLORS-1 DO BEGIN
     S=SORT(SPTYPE_B[GOOD_B]) & A=GOOD_B[S] & MDAT=RESIDU[A,N]/E_RESIDU[A,N] & VEC=DBLARR(ND,DEG+1)
     FOR KK=0, DEG DO VEC[*,KK]=SPTYPE_B[A]^KK/E_RESIDU[A,N] & INV=INVERT(TRANSPOSE(VEC)#VEC,/DOUBLE,STATUS)
     PARAM1[N,*]=INV#TRANSPOSE(VEC)#MDAT & R=DINDGEN(DEG+1) & E_PARAM1[N,*]=SQRT(INV[R,R])
     FIT=DBLARR(ND) & FOR KK=0, DEG DO FIT=FIT+PARAM1[N,KK]*SPTYPE_B[A]^KK
     FOR KK=0, T-1 DO SPECTRAL_DSB[KK,N]=TOTAL(PARAM1[N,*]*IND[KK,*])
     FOR KK=0, T-1 DO E_SPECTRAL_DSB[KK,N]=SQRT(IND[KK,*]#INV#TRANSPOSE(IND[KK,*]))
     PLOTERR,SPTYPE_B[A],RESIDU[A,N],E_RESIDU[A,N],CHARS=2,PSYM=8,NOHAT=1,YRANGE=[0,1.3],YSTYLE=1,XTITLE='SPECTRAL TYPE' & OPLOT,SPTYPE_B[A],FIT,COLOR=64000
     RES_B[A,N]=(RESIDU[A,N]-FIT)/E_RESIDU[A,N] & CHI2=MEAN(RES_B[A,N]^2) ; & IF (DOPRINT) THEN PRINTF,UNITLOG,N,CHI2,N_ELEMENTS(A)
  ENDFOR
  !P.MULTI=0
rep='' & if (dowait) then READ, 'press any key to continue', rep
;
; Histogram of residuals
  BIN=0.02 & HH=HISTOGRAM(RESIDU[GOOD_B,*],BINSIZE=BIN,LOCATIONS=XX) & XX=XX+BIN/2.
  RES=GAUSSFIT(XX,HH,NTERMS=3,Z) & PLOT,XX,HH,PSYM=10,Chars=2 & OPLOT,XX,RES,COLOR=65000 & IF (DOPRINT) THEN PRINTF,UNITLOG,"Polynoms: Z=",Z
rep='' & if (dowait) then READ, 'press any key to continue', rep
;
; Fit residuals with polynoms all in one
  NS=0
  WHILE (NS NE ND) DO BEGIN

PRINT,'ITERATION ON STARS: ',N_ELEMENTS(GOOD_B)

     ND=N_ELEMENTS(GOOD_B) & NPAR=(DEG+1)*NCOLORS & DCOV_IB=DBLARR(NCOLORS,NCOLORS,ND) & VEC=DBLARR(NCOLORS*ND,NPAR) & MDAT=DBLARR(NCOLORS*ND)
     MDIF=MDAT & MAT1=0.2*CJ#TRANSPOSE(0.2*CJ) & MAT2=0.2*CI#TRANSPOSE(0.2*CI) & MAT3=0.2*CI#TRANSPOSE(0.2*CJ)
     ICOV=DBLARR(NCOLORS*ND,NCOLORS*ND) & ED=EDIAM_I[GOOD_B]/DIAM_I[GOOD_B]/ALOG(10.)
     FOR LL1=0, NCOLORS-1 DO BEGIN
        Q=EMAG_B[GOOD_B,IBAND[LL1]] & R=EMAG_B[GOOD_B,JBAND[LL1]]
        FOR LL2=0, NCOLORS-1 DO BEGIN
           IF (IBAND[LL1] EQ IBAND[LL2] AND JBAND[LL1] EQ JBAND[LL2]) THEN DCOV_IB[LL1,LL2,*]=MAT1[LL1,LL2]*Q^2+MAT2[LL1,LL1]*R^2+ED^2
           IF (IBAND[LL1] EQ IBAND[LL2] AND JBAND[LL1] NE JBAND[LL2]) THEN DCOV_IB[LL1,LL2,*]=MAT1[LL1,LL2]*Q^2+ED^2
           IF (IBAND[LL1] NE IBAND[LL2] AND JBAND[LL1] EQ JBAND[LL2]) THEN DCOV_IB[LL1,LL2,*]=MAT2[LL1,LL2]*R^2+ED^2
           IF (IBAND[LL1] NE IBAND[LL2] AND JBAND[LL1] NE JBAND[LL2]) THEN DCOV_IB[LL1,LL2,*]=ED^2
; following never happens if iband is never equal to jband, which is
; the case normally
;           IF (IBAND[LL1] EQ JBAND[LL2] AND JBAND[LL1] NE IBAND[LL2]) THEN DCOV_IB[LL1,LL2,*]=-MAT3[LL1,LL2]*Q^2+ED^2
;           IF (IBAND[LL1] NE JBAND[LL2] AND JBAND[LL1] EQ IBAND[LL2]) THEN DCOV_IB[LL1,LL2,*]=-MAT3[LL2,LL1]*R^2+ED^2
        ENDFOR
     ENDFOR
;
     FOR JJ=0, NCOLORS-1 DO BEGIN
        FOR KK=0, DEG DO VEC[DINDGEN(ND)*NCOLORS+JJ,JJ*(DEG+1)+KK]=SPTYPE_B[GOOD_B]^KK
     ENDFOR
     MDAT[*]=TRANSPOSE(RESIDU[GOOD_B,*])
;
     FOR II=0, ND-1 DO BEGIN
        KK=II*NCOLORS & ICOV[KK:KK+NCOLORS-1,KK:KK+NCOLORS-1]=INVERT(DCOV_IB[*,*,II],STATUS,/DOUBLE) & IF (STATUS NE 0) THEN PRINT,"Error "+strtrim(status,2)+" at line "+strtrim(((SCOPE_TRACEBACK(/STRUCT))[-1]).LINE,2)+" in procedure "+((SCOPE_TRACEBACK(/STRUCT))[-1]).routine
     ENDFOR
;
     MCOV_POL=INVERT(TRANSPOSE(VEC)#ICOV#VEC,STATUS,/DOUBLE) ; covariance matrix of polynom coefficients
     PAR=MCOV_POL#TRANSPOSE(VEC)#ICOV#MDAT & A=DINDGEN(NCOLORS*(DEG+1)) & E_PAR=SQRT(MCOV_POL[A,A]) ; polynom coefficients & errors
     FOR N=0, NCOLORS-1 DO PARAMS[N,*]=PAR[N*(DEG+1)+DINDGEN(DEG+1)] & FOR N=0, NCOLORS-1 DO E_PARAMS[N,*]=E_PAR[N*(DEG+1)+DINDGEN(DEG+1)]
;
     FOR II=0, ND-1 DO BEGIN
        FOR JJ=0, NCOLORS-1 DO BEGIN
           MDIF[II*NCOLORS+JJ]=MDAT[NCOLORS*II+JJ]-TOTAL(PARAMS[JJ,*]*SPTYPE_B[GOOD_B[II]]^DINDGEN(DEG+1))
           RES_B[GOOD_B[II],JJ]=MDIF[II*NCOLORS+JJ]/E_RESIDU[GOOD_B[II],JJ]
        ENDFOR
     ENDFOR
;
     CHI2_POL=TRANSPOSE(MDIF)#ICOV#MDIF/(ND*NCOLORS-NPAR) & S=DBLARR(ND,NCOLORS)-100 ; polynom coefficients chi2
     FOR N=0, NCOLORS-1 DO BEGIN
        A=WHERE(ABS(RES_B[GOOD_B,N]) LE NSIG, NP) & IF (NP NE 0) THEN S[A,N]=1
     ENDFOR

     D=WHERE(TOTAL(S,2) EQ NCOLORS) & GOOD_B=GOOD_B[D] & NS=N_ELEMENTS(GOOD_B)
  ENDWHILE
;
; Compute modeled diameters & errors for all bands
;
  FOR II=0, NCOLORS-1 DO BEGIN
     FOR JJ=0, ND-1 DO BEGIN
        KK=GOOD_B[JJ] & A=MAG_B[KK,IBAND[II]] & B=MAG_B[KK,JBAND[II]] & C=EMAG_B[KK,IBAND[II]] & D=EMAG_B[KK,JBAND[II]]
        DIAM_B[KK,II]=0.2*CJ[II]*A-0.2*CI[II]*B+TOTAL(PARAMS[II,*]*SPTYPE_B[KK]^DINDGEN(DEG+1))
        MT=MCOV_POL[II*(DEG+1):(II+1)*(DEG+1)-1,II*(DEG+1):(II+1)*(DEG+1)-1]
        EDIAM_B[KK,II]=SQRT(0.04*CJ[II]^2*C^2+0.04*CI[II]^2*D^2+TRANSPOSE(SPTYPE_B[KK]^DINDGEN(DEG+1))#MT#(SPTYPE_B[KK]^DINDGEN(DEG+1)))
        RES_C[KK,II]=(ALOG10(DIAM_I[KK])-DIAM_B[KK,II])/SQRT((ED[JJ]^2+EDIAM_B[KK,II]^2))
     ENDFOR
  ENDFOR

;
; Compute mean modeled diameters & errors
;
  DCOV_OB=DCOV_IB & FOR II=0, ND-1 DO DCOV_OB(*,*,II)=DCOV_IB(*,*,II)-ED(II)^2 & AAA=DOUBLE(FLOAT(SPTYPE_B)) & ERR=DBLARR(NCOLORS,ND)
  FOR II=0, ND-1 DO BEGIN
     FOR JJ=0, NCOLORS-1 DO BEGIN
        FOR KK=0, NCOLORS-1 DO BEGIN
           FOR Z=0, DEG DO BEGIN
              FOR W=0, DEG DO BEGIN
                 DCOV_OB[KK,JJ,II]=DCOV_OB[KK,JJ,II]+AAA[GOOD_B[II]]^Z*AAA[GOOD_B[II]]^W*MCOV_POL[(DEG+1)*JJ+Z,(DEG+1)*KK+W]
                 IF (KK EQ JJ) THEN ERR[JJ,II]=ERR[JJ,II]+AAA[GOOD_B[II]]^Z*AAA[GOOD_B[II]]^W*MCOV_POL[(DEG+1)*JJ+Z,(DEG+1)*KK+W]
              ENDFOR
           ENDFOR
        ENDFOR
     ENDFOR
     C=DCOV_OB[*,*,II] & B=INVERT(C,/DOUBLE,STATUS) & A=TOTAL(B) & IF (STATUS NE 0) THEN PRINT,"Error "+strtrim(status,2)+" at line "+strtrim(((SCOPE_TRACEBACK(/STRUCT))[-1]).LINE,2)+" in procedure "+((SCOPE_TRACEBACK(/STRUCT))[-1]).routine
     DMEAN_B[GOOD_B[II]]=TOTAL(B#TOTAL(DIAM_B[GOOD_B[II],*],1))/A & EDMEAN_B[GOOD_B[II]]=1/SQRT(A)
     DIF=ALOG10(DIAM_I[GOOD_B[II]])-DIAM_B[GOOD_B[II],*] & CHI2_MD[GOOD_B[II]]=DIF#B#TRANSPOSE(DIF)/NCOLORS
  ENDFOR
;

;
; Plot residuals & fits
;
  !P.MULTI=[0,3,2]
  FOR N=0, NCOLORS-1 DO BEGIN
     D=SORT(SPTYPE_B[GOOD_B]) & A=GOOD_B[D] & FIT=DBLARR(ND) & FOR KK=0, DEG DO FIT=FIT+PARAMS[N,KK]*SPTYPE_B[A]^KK
     PLOTERR,SPTYPE_B[A],RESIDU[A,N],E_RESIDU[A,N],CHARS=2,NOHAT=1,PSYM=8,YRANGE=[0.,1.3],YSTYLE=1 & OPLOT,SPTYPE_B[A],FIT,COLOR=64000,THICK=2
     INV=MCOV_POL[(DEG+1)*N:(DEG+1)*(N+1)-1,(DEG+1)*N:(DEG+1)*(N+1)-1]
     FOR KK=0, T-1 DO SPECTRAL_DSB[KK,N]=TOTAL(PARAMS[N,*]*IND[KK,*])
     FOR KK=0, T-1 DO E_SPECTRAL_DSB[KK,N]=SQRT(IND[KK,*]#INV#TRANSPOSE(IND[KK,*]))
  ENDFOR
  !P.MULTI=0
rep='' & if (dowait) then READ, 'press any key to continue', rep
;
; Plot results
  ZZ=DINDGEN(100)/10-5
; Plot histograms
  !P.MULTI=[0,3,2]
  FOR N=0, NCOLORS-1 DO BEGIN
     BIN=0.4 & HH=HISTOGRAM(RES_B[GOOD_B,N],BINSIZE=BIN,LOCATIONS=XX) & XX=XX+BIN/2. & RES=GAUSSFIT(XX,HH,NTERMS=3,Z)
     PLOT,XX,HH,PSYM=10,XRANGE=[-5,5],XSTYLE=1,CHARS=2 & OPLOT,XX,RES,COLOR=65000 & IF (DOPRINT) THEN PRINTF,UNITLOG,"Polynoms: Z=",Z
  ENDFOR
  HH=HISTOGRAM(RES_B[GOOD_B,*],BINSIZE=BIN,LOCATIONS=XX) & XX=XX+BIN/2. & RES=GAUSSFIT(XX,HH,NTERMS=3,Z)
  PLOT,XX,HH,PSYM=10,XRANGE=[-5,5],XSTYLE=1,CHARS=2 & OPLOT,XX,RES,COLOR=1000 & IF (DOPRINT) THEN PRINTF,UNITLOG,"Polynoms: Z=",Z
  PAR=PARAMS & EPAR=E_PARAMS
  !P.MULTI=0

rep='' & if (dowait) then READ, 'press any key to continue', rep

L=WHERE(FINITE(CHI2_MD[GOOD_B]), NL)
IF (DOPRINT) THEN PRINTF,UNITLOG,"SAMPLES:"+strtrim(N_ELEMENTS(GOOD_B),2)+" N CHI2:"+strtrim(NL,2)

  A=MEAN(CHI2_MD[GOOD_B])
  IF (DOPRINT) THEN PRINTF,UNITLOG,'CHI2_POL = '+strtrim(CHI2_POL,2)+', CHI2_MD = '+strtrim(A,2)+", Good stars: "+strtrim(N_ELEMENTS(GOOD_B),2)

; show intermediate results:
PRINT,'CHI2_POL = '+strtrim(CHI2_POL,2)+', CHI2_MD = '+strtrim(A,2)+", Good stars: "+strtrim(N_ELEMENTS(GOOD_B),2)

; Plot results
  !P.MULTI=[0,3,2]
  FOR N=0, NCOLORS-1 DO BEGIN
     PLOTERR,ALOG10(DIAM_I[GOOD_B]),DIAM_B[GOOD_B,N],ED,EDIAM_B[GOOD_B,N],CHARS=2,NOHAT=1,PSYM=8 & OPLOT,ZZ,ZZ,COLOR=64000
  ENDFOR
  PLOTERR,ALOG10(DIAM_I[GOOD_B]),DMEAN_B[GOOD_B],ED,EDMEAN_B[GOOD_B],CHARS=2,NOHAT=1,PSYM=8
  OPLOT,ALOG10(DIAM_I[GOOD_B]),DMEAN_B[GOOD_B],PSYM=8,COLOR=65000 & OPLOT,ZZ,ZZ,COLOR=64000
  !P.MULTI=0
rep='' & if (dowait) then READ, 'press any key to continue', rep
;

  PASS_ALL_TESTS=(DATA_B)[GOOD_B]

IF (MODE EQ 'FIX') THEN BEGIN
  ; LBO: dump
  ; idx, sp, 6 mags, 6 mag errors, 3 diams, 3 diam errors, 1 diam mean, 1 diam mean error
  NS=N_ELEMENTS(GOOD_B)
  IF (DOPRINT) THEN PRINTF,UNITLOG,"#REF STAR DATA:",NS
  FOR N=0, NS-1 DO BEGIN
    IF (DOPRINT) THEN PRINTF,UNITLOG,format='(%"{%d, /* SP \"%s\" idx */ %d, /*MAG*/ %16.9e, %16.9e, %16.9e, %16.9e, %16.9e, %16.9e, /*EMAG*/ %16.9e, %16.9e, %16.9e, %16.9e, %16.9e, %16.9e, /*DIAM*/ %16.9e, %16.9e, %16.9e, /*EDIAM*/ %16.9e, %16.9e, %16.9e, /*DMEAN*/ %16.9e, /*EDMEAN*/ %16.9e },")',N, ORIG_SPTYPE[GOOD_B[N]], SPTYPE_B[GOOD_B[N]], MAG_B[GOOD_B[N],0:5], EMAG_B[GOOD_B[N],0:5], DIAM_B[GOOD_B[N],*], EDIAM_B[GOOD_B[N],*], DMEAN_B[GOOD_B[N]], EDMEAN_B[GOOD_B[N]]
  ENDFOR
ENDIF
  RETURN
END

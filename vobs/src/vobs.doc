/*******************************************************************************
* JMMC project
*
* "@(#) $Id: vobs.doc,v 1.2 2004-08-25 13:33:03 scetre Exp $"
*
* who       when         what
* --------  -----------  -------------------------------------------------------
* scetre    25-Aug-2004  Created
*
*
*******************************************************************************/

/**
\mainpage vobs : C++ asking module of the Search Calibrators

\bdesc
Module of query of the software Search Calibrators.

\ddesc
According to the user request, this module will built an asking and used it
with a XML parser in order to sent a list of stars. 

\n
\ex
Exemple of a usage of vobs.
\code

#include <iostream>
using namespace std;

#include "mcs.h"
#include "log.h"
#include "err.h"

#include "vobsSTAR.h"
#include "vobsSTAR_LIST.h"
#include "vobsREQUEST.h"
#include "vobsVIRTUAL_OBSERVATORY.h"
#include "vobsPrivate.h"

int main(int argc, char *argv[])
{
    mcsInit(argv[0]);

    logSetStdoutLogLevel(logEXTDBG);
    
    logInfo("Starting ...");
    vobsREQUEST request;

    // Affect the kind of request
    if (request.SetKindOfRequest(1)==FAILURE)
    {
        errDisplayStack();
        errCloseStack();
        exit(EXIT_FAILURE); 
    }

    if ((request.SetConstraint(STAR_NAME_ID,"ETA TAU") == SUCCESS) &&
        (request.SetConstraint(STAR_WLEN_ID,"0.65") == SUCCESS) &&
        (request.SetConstraint(STAR_MAGNITUDE_ID,"2.87") == SUCCESS) &&
        (request.SetConstraint(MAGNITUDE_RANGE_ID,"1..5") == SUCCESS) &&
        (request.SetConstraint(SEARCH_BOX_RA_ID,"03+47+29.08") == SUCCESS) &&
        (request.SetConstraint(SEARCH_BOX_DEC_ID,"+24+06+18.5") == SUCCESS) &&
        (request.SetConstraint(STAR_EXPECTED_VIS_ID,"0.349") == SUCCESS) &&
        (request.SetConstraint(STAR_MAX_ERR_VIS_ID,"0.035") == SUCCESS) &&
        (request.SetConstraint(OBSERVED_BAND_ID,"V") == SUCCESS ))
    {
        // Check if the request is correctly build
        if (request.Check()==mcsTRUE)
        {
            // Display of the request correctly build
            request.Display();
        }
        else
        {
            errDisplayStack();
            errCloseStack();
            exit(EXIT_FAILURE);
        }
    }
    else 
    {
        errDisplayStack();
        errCloseStack();
        exit(EXIT_FAILURE);
    }
    errDisplayStack();

    vobsSTAR_LIST starList;

    vobsVIRTUAL_OBSERVATORY vobs;

    if (vobs.Research(request, starList)==FAILURE)
    {
        errDisplayStack();
        errCloseStack();
        exit(EXIT_FAILURE);
    }
    /*else
    {
        starList.Display();
    }*/

    errDisplayStack();
    
    logInfo("Exiting ...");
    exit(EXIT_SUCCESS);

}

\endcode


*/
